<!-- html-header type=current begin -->
	
	<!DOCTYPE html>
	
	<html lang="en">
	<head>
	<!-- Render IE9 -->
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

	

	<script id="before-content" type="text/javascript">
(function () {
    if (typeof window.sdmedia !== 'object') {
         window.sdmedia = {};
    }
    if (typeof window.sdmedia.site !== 'object') {
        window.sdmedia.site = {};
    }

    var site = window.sdmedia.site;
    site.rootdir = "//slashdot.org";
}());

var pageload = {
	pagemark: '86200891139201955',
	before_content: (new Date).getTime()
};
function pageload_done( $, console, maybe ){
	pageload.after_readycode	= (new Date).getTime();
	pageload.content_ready_time	= pageload.content_ready - pageload.before_content;
	pageload.script_ready_time	= pageload.after_readycode - pageload.content_ready;
	pageload.ready_time		= pageload.after_readycode - pageload.before_content;
	// Only report 1% of cases.
	maybe || (Math.random()>0.01) || $.ajax({ type: 'POST', data: {
		op: 'page_profile',
		pagemark: pageload.pagemark,
		dom: pageload.content_ready_time,
		js: pageload.script_ready_time
	} });
}
</script>
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
	
		<title>Verify the Rust's Standard Library's 7,500 Unsafe Functions - and Win 'Financial Rewards' - Slashdot</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	  
		<meta name="description" content="The Rust community has &#34;recognized the unsafety of Rust (if used incorrectly),&#34; according to a blog post by Amazon Web Services. 
So now AWS and the Rust Foundation are &#34;crowdsourcing an effort to verify the Rust standard library,&#34; according to an article at DevClass.com, &#34;by setting out a series of...">
	    
		<meta name="twitter:card" content="summary">
		<meta name="twitter:site" content="@slashdot">
		<meta name="twitter:domain" content="developers.slashdot.org">
		<meta property="og:url" content="https://developers.slashdot.org/story/24/11/23/2327203/verify-the-rusts-standard-librarys-7500-unsafe-functions---and-win-financial-rewards">
	    
		<meta property="og:title" content="Verify the Rust's Standard Library's 7,500 Unsafe Functions - and Win 'Financial Rewards' - Slashdot">
		<meta property="og:description" content="The Rust community has &#34;recognized the unsafety of Rust (if used incorrectly),&#34; according to a blog post by Amazon Web Services. 
So now AWS and the Rust Foundation are &#34;crowdsourcing an effort to verify the Rust standard library,&#34; according to an article at DevClass.com, &#34;by setting out a series of...">
	  
	
	
		<meta property="og:image" content="https://a.fsdn.com/sd/topics/programming_64.png">
	
		<meta property="fb:admins" content="100000696822412">
		<meta property="fb:page_id" content="267995220856">
	
		<meta name="viewport" content="width=1000, user-scalable=yes, minimum-scale=0, maximum-scale=10.0" />
		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black">
	
		<link rel="canonical" href="https://developers.slashdot.org/story/24/11/23/2327203/verify-the-rusts-standard-librarys-7500-unsafe-functions---and-win-financial-rewards">
		
		<link rel="alternate" media="only screen and (max-width: 640px)" href="https://m.slashdot.org/story/435811" >
	

		<link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/classic.ssl.css?541b6a39b4a6b899" >
		<!--[if IE 8]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie8-classic.ssl.css?541b6a39b4a6b899" ><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie7-classic.ssl.css?541b6a39b4a6b899" ><![endif]-->
	
	
	



	
	<!--  -->

	
	

	
	<!-- SMACKS: NEW CSS -->
	<link rel="stylesheet" href="//a.fsdn.com/sd/css/app.css?541b6a39b4a6b899">

	<script src="//a.fsdn.com/con/js/sftheme/cmp2.js?2024-01"></script>
	<script src="https://slashdot.org/country.js"></script>
	<script>
		window.bizx.cmp.init({
			cmp_id: 12126,
			geo: window,
			gam_gdpr_technical_delivery: true,
			
		});
	</script>
	<link rel="stylesheet" href="//a.fsdn.com/con/css/sftheme/sandiego/cmp.css?2020-06-11" type="text/css">

	<script type='text/javascript'>
var _gaq = _gaq || [];
</script>

<script>
window.SD = {};
window.SD.Ads = {};

bizx.cmp.ifConsent('', ['all'], function () {
    var bt = 'https://btloader.com/tag?o=5098683085881344&upapi=true';
    bizx.cmp.embedScript(bt, true);
    window.addEventListener('AcceptableAdsInit', function (e) {
      if(e.detail) {
        console.log('acceptable ads on');
        SD.Ads.acceptable_ads_active = true;
      } else {
        console.log('acceptable ads off');
        SD.Ads.acceptable_ads_active = false;
      }
    });
});
</script>



         
   
   

<script type="text/javascript" id="pbjs_script" data-dom="https://d3tglifpd8whs6.cloudfront.net"  src="https://d3tglifpd8whs6.cloudfront.net/js/prebid/slash-story/slash-story.min.js"></script>
<script type='text/javascript'>
    /*global performance */
    var googletag = window.googletag || {};
    googletag.cmd = googletag.cmd || [];

		window.SD.Ads.slotsById = {};
		window.SD.Ads.idsByPath = {};

		window.SD.Ads.visibleTime = {};
		window.SD.Ads.Helpers = {};

		//window.SD = SD;

    bizx.cmp.ifConsent({purposes: 'all', vendors: 'prebid'}, function(){
        window.bizxPrebid.Ads.initPrebid(window.bizxPrebid.adUnits);
    }, function() {
		// no 'prebid' consent (e.g. region without prebid consent string support) but try GPT directly
		bizx.cmp.ifConsent({purposes: 'all', vendors: 'google-ads'}, function () {
			bizx.cmp.embedScript('https://securepubads.g.doubleclick.net/tag/js/gpt.js');
		});
	});
</script>

<!-- prep GPT ads -->
<script type='text/javascript'>
(function() {
	function page_type (loc) {
		/*
		only four page types:
		- Story
		- Poll
		- Homepage (/ only)
		- Other (but AdOps wants 'Homepage' again)
		*/
		var path = loc.pathname;
		var just_the_root = /^\/?$/.test(path);
		var story_or_poll = /^\/(story(?=\/)|submission(?=\/)|poll(?=\/|Booth|s\b))/i.exec(path);

		var page_type = just_the_root ? 'homepage'
			: story_or_poll ? story_or_poll[1]
				: 'other'

		// exceptions
		if (page_type.toLowerCase() === 'submission')
			page_type = 'story'; // submissions are like stories, right?
		else if (page_type.toLowerCase() === 'other')
			page_type = 'homepage'; // this one might move out of here

		return page_type;
	}

	function page_section(loc) {
		//var greek = ['alpha', 'beta', 'gamma', 'delta'].join('|');
		//var hostwise = '^([a-z]+)(?:-(?:'+greek+'))?\\.(?:slashdot\\.org|\\.xb\\.sf\\.net)$';
		var pathwise = '^/(?:(recent|popular|blog)|stories/([^/]+))';
		var rootwise = '^\/?$';

		//var hostwisely = new RegExp(hostwise,'i').exec(loc.hostname);
		var pathwisely = new RegExp(pathwise, 'i').exec(loc.pathname);
		var rootwisely = new RegExp(rootwise, 'i').exec(loc.pathname);

		var section = (rootwisely && 'homepage')
			|| (pathwisely && (pathwisely[1] || pathwisely[2]))
			|| ''
		;

		return section.replace(/[^_a-z]/ig, '');
	}

	function single_size(size) {
		return '' + size[0] + 'x' + size[1];
	}

	function sz_sz(sz) {
		var str = '';
		var sizes = [];
		if (sz[0] instanceof Array) {
			for (size in sz) {
				sizes.push(single_size(sz[size]));
			}
			return sizes.join(',');
		} else {
			return single_size(sz);
		}
	}

	function unique_tpc_array(array1, array2) {
		var j = array1.concat(array2);
		j.forEach(function (v, i, a) {
			a[i] = v.replace(/[^_a-z]/ig, '');
		});
		return j.filter(function (v, i, a) {
			return v != '' && a.indexOf(v) === i;
		});
	}

	/* LEGEND:
		- 'sz' = "size"
		- 'npt' = "no page type" in ad unit name
	*/
	var tags = {
		'728x90_A': {'sz': [[728, 90], [970, 90], [970, 250], [980, 66]]},
		'728x90_B': {'sz': [728, 90]},
		'728x90_C': {'sz': [728, 90], 'skip': {'homepage': 1}},
		'HubIcon_200x90_A': {'sz': [[200, 90], [220, 90]]},
		'PowerSwitch_980x66_A': {'sz': [980, 66], 'skip': {'homepage': 1}},
		'PollPeel': {'sz': [200, 90], 'skip': {'homepage': 1}},
		//'VideoWidget_300x250': { 'sz': [300, 250], 'npt': 1 },
		'300x250_A': {'sz': [[300, 250], [300, 600], [300, 1050]]},
		'300x250_B': {'sz': [[300, 250], [300, 600]]},
		'300x250_C': {'sz': [[300, 250], [300, 600]]},
		'300x250_D': {'sz': [[300, 250], [300, 600]]},
		'Pulse_300x600_A': {'sz': [300, 600]},
		//'Polls_Detail_300x250_A': { 'sz': [[300, 250], [300, 600]], 'npt': 1 },
		//'Poll_300x250_A': { 'sz': [[300, 250], [300, 600]], 'npt': 1 },
		//'SD_Story_1x1': { 'sz': [1, 1] },
		'1x1': {'sz': [1, 1]}
	};

	//var network_path = '/41014381/Slashdot/';
	var network_path = '/41014381/Slashdot/';
	var tag_name_prefix = 'SD';
	var tag_name_linkage = '_';
	var tag_name_pagetype = page_type(location);
	var tag_topic = page_section(location);
	if (tag_name_pagetype == 'poll') {
		tag_name_pagetype = 'Poll';
	}
	var before_tag_pagetyped = network_path
		+ tag_name_prefix
		+ tag_name_linkage
		+ tag_name_pagetype
		+ tag_name_linkage
	;
	var before_tag_pagetypeless = network_path
		+ tag_name_prefix
		+ tag_name_linkage
		/* + tag_name_pagetype */
		/* + tag_name_linkage */
	;

		//can be safely called
		googletag.cmd.push(function () {
		     googletag.pubads().enableLazyLoad({fetchMarginPercent: 0,renderMarginPercent: 0});

			function remove_sticky_top() {
				setTimeout(function () {
					$('#div-gpt-ad-728x90_a').parent('div').addClass('adwrap-viewed-banner');
					$('#div-gpt-ad-728x90_a').addClass('viewableImpression');
				}, 1000);
			}

			function remove_sticky_railad() {
				setTimeout(function () {
					$('#slashboxes .adwrap-unviewed').addClass('adwrap-viewed-railad');
					$('.railad').addClass('viewableImpression');
				}, 1000);
			}

			function viewable_imp(slot) {
				for (var i in slot) {
					remove_sticky_top();
					remove_sticky_railad();
					if (typeof slot[i] !== 'string') continue;
					switch (slot[i]) {
						//case "/41014381/Slashdot/SD_homepage_728x90_A":
						//case "/41014381/Slashdot/SD_story_728x90_A":
						//case "/41014381/Slashdot/SD_Poll_728x90_A":
						//case "/41014381/Slashdot/SD_homepage_728x90_Ref_A":
						//case "/41014381/Slashdot/SD_story_728x90_Ref_A":
						//case "/41014381/Slashdot/SD_Poll_728x90_Ref_A":
						//remove_sticky_top();
						//break;
						//case "/41014381/Slashdot/SD_homepage_300x250_A":
						//case "/41014381/Slashdot/SD_story_300x250_A":
						//case "/41014381/Slashdot/SD_Poll_300x250_A":
						//case "/41014381/Slashdot/SD_homepage_300x250_Ref_A":
						//case "/41014381/Slashdot/SD_story_300x250_Ref_A":
						//case "/41014381/Slashdot/SD_Poll_300x250_Ref_A":
						//remove_sticky_railad();
						//break;
					}
					//if(slot[i] === "/41014381/Slashdot/SD_homepage_728x90_A") remove_sticky_top();
					//if(slot[i] === "/41014381/Slashdot/SD_homepage_300x250_A") remove_sticky_railad();
				}
			}

			function define_me_a_slot(tag) {
				if (tags[tag].skip && tags[tag].skip[tag_name_pagetype])
					return;
				var sandbox_regex = /\.xb\.sf\.net$/i;
				var full_name = tags[tag].npt  // "no page type"
					? before_tag_pagetypeless + tag
					: before_tag_pagetyped + tag
				;
				var div_id = 'div-gpt-ad-' + tag.toLowerCase();

				var queryParams = new URLSearchParams(window.location.search);

				if (queryParams.get('source') === 'autorefresh') {
					full_name = full_name.replace(/(\d+x\d+)/, '$1_Ref');
					//console.log('TAG NAME: ', full_name);
				}

				var slot = googletag.defineSlot(
					full_name,
					tags[tag].sz,
					div_id
				);

				service = slot.addService(googletag.pubads());

				window.SD.Ads.slotsById[div_id] = slot;
				window.SD.Ads.idsByPath[full_name] = div_id;

				service.setTargeting('sz', tags[tag].sz);

				
				var frontend_tpc = tag_topic.split(",");
				var backend_tpc = [ "programming", "developers" ];

				var tpc_final = unique_tpc_array(frontend_tpc, backend_tpc);
				service.setTargeting('tpc', tpc_final);
				if (location.hostname.match(sandbox_regex)) {
					service.setTargeting('test', 'adops');
				}

			}

		for (tag in tags) {
			define_me_a_slot(tag, false);
		}


			googletag.pubads().addEventListener('slotVisibilityChanged', window.SD.Ads.visibilityChangedTracker);


		googletag.pubads().addEventListener('impressionViewable', function(event) {
			viewable_imp(event.slot);
		    });

                googletag.pubads().setTargeting('requestSource', 'GPT');
		googletag.pubads().enableAsyncRendering();
		

		googletag.pubads().collapseEmptyDivs();
		window.bizxPrebid.SAFEFRAMES = true;
		window.SD.Ads.setupAdRefresh();
		bizxPrebid.Ads.pushToGoogle();
		googletag.enableServices();
	});
})();


/* Ad-Refresh code */
window.SD.Ads.visibilityChangedTracker = function(event) {
	var id = event.slot.getSlotElementId();
	if (!window.SD.Ads.visibleTime.hasOwnProperty(id)) {
		window.SD.Ads.visibleTime[id] = {
			visible: false,
			prevVisibleTotal: 0,
			wasVisibleBeforePageBgd: false,
			reloadCount: 0
		};
	}
	var timeinfo = window.SD.Ads.visibleTime[id];
	if (event.inViewPercentage >= 50 && !document.hidden) {
		if (!timeinfo.visible) {
			timeinfo.visible = performance.now();
		}
	} else {
		if (timeinfo.visible) {
			timeinfo.prevVisibleTotal += performance.now() - timeinfo.visible;
			timeinfo.visible = false;
		}
	}
};

window.SD.Ads.setupAdRefresh = function() {
	document.addEventListener('visibilitychange', function () {
		for (var id in window.SD.Ads.visibleTime) {
			if (window.SD.Ads.visibleTime.hasOwnProperty(id)) {
				var timeinfo = window.SD.Ads.visibleTime[id];
				if (document.hidden) {
					timeinfo.wasVisibleBeforePageBgd = !!timeinfo.visible;
					if (timeinfo.visible) {
						timeinfo.prevVisibleTotal += performance.now() - timeinfo.visible;
						timeinfo.visible = false;
					}
				} else if (!document.hidden && timeinfo.wasVisibleBeforePageBgd) {
					timeinfo.visible = performance.now();
				}
			}
		}
	}, false);

	// after 30 sec, start checking every second for reload
	var LIMIT_MS = 30000;
	setTimeout(function () {
		//
		setInterval(function () {
			if (document.hidden) {
				return;
			}
			for (var id in window.SD.Ads.visibleTime) {
				if (window.SD.Ads.visibleTime.hasOwnProperty(id)) {
					var timeinfo = window.SD.Ads.visibleTime[id];
					if (timeinfo.visible &&
						timeinfo.prevVisibleTotal + (performance.now() - timeinfo.visible) >= LIMIT_MS &&
						timeinfo.reloadCount < 50
					) {
						timeinfo.reloadCount++;
						timeinfo.visible = false;
						timeinfo.prevVisibleTotal = 0;
						window.SD.Ads.Helpers.refreshBids([id]);
					}
				}
			}
		}, 1000);
	}, LIMIT_MS);
};

window.SD.Ads.Helpers.refreshBids = function (reloadIds) {
		console.log('AD REFRESH: refreshBids', reloadIds);
		pbjs.que.push(function () {
			for (var i = reloadIds.length-1; i >= 0; i--) {
				var id = reloadIds[i];
				// clear out winner status from earlier auctions
				if (bizxPrebid.Ads.prebidWinners[id]) {
					delete bizxPrebid.Ads.prebidWinners[id];
				}
				// if has complement (hubicon), remove it since they are just house ads and can cause funky layouts if this leaderboard is refreshed to a different size
				var path = window.SD.Ads.slotsById[id].getAdUnitPath();
				/*var complement = gptadComplements[path];
				if (complement) {
					var complement_shortname = complement[0];
					var complement_path = "/41014381/SD/" + complement_shortname;
					var slot = window.SD.Ads.slotsById[window.SD.Ads.idsByPath[complement_path]];
					if (slot) {
						googletag.destroySlots([slot]);
						var $wrappedAd = $(window.SD.Ads.Helpers.getContainerIDFromPath(complement_path));
						$wrappedAd.remove();
						delete gptadComplements[path];
					}
				}*/

			}

			pbjs.requestBids({
				timeout: window.bizxPrebid.PREBID_TIMEOUT,
				adUnitCodes: reloadIds,
				bidsBackHandler: function () {
					var reloadSlots = reloadIds.map(function(id) { return window.SD.Ads.slotsById[id]; });

					// clear out previous sizing attrs, as they may change after refresh
/*
					for (var i = 0; i < reloadSlots.length; i++) {
						var $wrappedAd = $(window.SD.Ads.Helpers.getContainerIDFromPath(reloadSlots[i].getAdUnitPath()));
						var classes = $wrappedAd.attr('class').split(' ');
						for (var j = 0; j < classes.length; j++) {
							if (classes[j].indexOf('sz_') >= 0) {
								$wrappedAd.removeClass(classes[j]);
							}
						}
					}
*/
					pbjs.setTargetingForGPTAsync(reloadIds);
					googletag.pubads().refresh(reloadSlots);
				}
			});
		});
	}
</script>

<!-- CrossPixel -->
<script type="text/javascript">
if (window.is_euro_union === 0) {
    bizx.cmp.ifConsent('', ['all'], function(){
        try{(function(){ var cb = new Date().getTime(); var s = document.createElement("script"); s.defer = true; s.src = "//tag.crsspxl.com/s1.js?d=2397&cb="+cb; var s0 = document.getElementsByTagName('script')[0]; s0.parentNode.insertBefore(s, s0); })();}catch(e){}
    });
}
</script>




<!-- AdBlock Check -->
<script>
var sdAdBlockActive = true;
</script>
<script async src="//a.fsdn.com/sd/js/scripts/adpopup.js?541b6a39b4a6b899"></script>
</head>

<body class="anon firehose ">

	
	<script src="//a.fsdn.com/sd/all-minified.js?541b6a39b4a6b899" type="text/javascript"></script>
	
	
	<script type="text/javascript">
(function(){
var regexp=/\s*(?:\d+|many)\s+more\s*/i;

	
	var auto_more_count = 1;

	function auto_more(){
		var $more_link = $('#more-experiment a');
		$more_link.each(function(){
			var $lastitem = $('#firehoselist>article.fhitem:visible:last');
			if ( Bounds.intersect(window, $lastitem) ) {
			
			
				!--auto_more_count && (auto_more=undefined);
				// don't allow a call till the next paginate gets built and |more_possible|
				$(document).unbind('scroll', call_auto_more);
			}
		});
	};

	function call_auto_more(){ auto_more && auto_more(); }
	

$('#more-experiment a').
	live('more-possible', function( event ){
		var $more_link=$(this);
		if ( regexp.test($more_link.text()) ) {
		
			$(document).bind('scroll', call_auto_more);
		} else {
			$(document).unbind('scroll', call_auto_more);
		
		}
	});
})();
</script>
	<!--[if lt IE 9]><script src="//a.fsdn.com/sd/html5.js"></script><![endif]-->
	
	
	<!-- index2_variant ||-->
		<script>
	if (window.is_euro_union === 0) {
            bizx.cmp.ifConsent('', ['all'], function () {
                (function (s,o,n,a,r,i,z,e) {s['StackSonarObject']=r;s[r]=s[r]||function(){
                (s[r].q=s[r].q||[]).push(arguments)},s[r].l=1*new Date();i=o.createElement(n),
                z=o.getElementsByTagName(n)[0];i.async=1;i.src=a;z.parentNode.insertBefore(i,z)
                })(window,document,'script','https://www.stack-sonar.com/ping.js','stackSonar');
                stackSonar('stack-connect', '66');
            });
        }
	</script>
		<!-- html-header type=current end --><!-- header type=current begin -->
	
	
	
	<link rel="top"       title="News for nerds, stuff that matters" href="//slashdot.org/" >
<link rel="search"    title="Search Slashdot" href="//developers.slashdot.org/search.pl">
<link rel="alternate" title="Slashdot RSS" href="https://rss.slashdot.org/Slashdot/slashdotDevelopers" type="application/rss+xml">
	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">

	
		<div id="top_parent"></div>
		<a name="topothepage"></a>
		
		<div class="container">
			<div class="nav-wrap">
				<nav class="nav-primary" role="navigation" aria-label="Global Navigation">
					<h2 class="logo">
	<a href="//slashdot.org"><span>Slashdot</span></a>
</h2>

<ul class="nav-site">
	<li><a href="//slashdot.org"><i class="icon-book" title="Stories"></i><span>Stories</span></a></li>
	<li>
		<ul class="filter-firehose">
			<li class="nav-label">Firehose <i class="icon-angle-right"></i></li>
			<li><a href="//slashdot.org/recent">All</a></li>
			<li><a href="//slashdot.org/popular">Popular</a></li>
		</ul>
	</li>
	<li><a href="//slashdot.org/polls"><i class="icon-chart-bar" title="Polls"></i><span>Polls</span></a></li>

	<!--
	<li><a href="//ask.slashdot.org"><i class="icon-question-circle"></i><span>Ask</span></a></li>
	
	<li><a href="//events.slashdot.org"><i class="icon-calendar"></i><span>Events</span></a></li>
	-->
	<li><a href="https://slashdot.org/software/"><i class="sd-mini"></i> <span>Software</span></a></li>
        <li><a href="//slashdot.org/content/"><span>Thought Leadership</span></a></li>
        <li><a href="//slashdot.org/jobs" rel="nofollow"><span>Jobs</span></a></li>
</ul>
<a href="//slashdot.org/submission" class="btn btn-success">Submit</a>
				</nav>
				<nav class="nav-user" role="navigation" aria-label="user access and account controls">
					<div id="main-top-nav-wrapper">
<form id="search" class="form-inline nav-search-form" method="get" action="//slashdot.org/index2.pl">
<!-- //developers.slashdot.org/index2.pl" -->
	<div class="form-group">
		<label class="sr-only" for="sitesearch">Search Slashdot</label>
		<div class="input-group">
			<input type="text" id="" class="" name="fhfilter" value="" placeholder="Search">
		</div>
	</div>
	<button type="submit" class="btn icon-search"></button>
</form>
<ul class="user-access">
	
		
			<li >
				<a href="//slashdot.org/my/login"  onclick="show_login_box(); return false;"><i class="icon-login"></i><span> Login</span></a>
				
			</li>
		
	
		
			<li class="nav-label">or</li>
		
	
		
			<li >
				<a href="//slashdot.org/my/newuser"  ><i class="icon-user-add"></i><span> Sign up</span></a>
				
			</li>
		
	
</ul>
				</nav>
			</div>
			<div class="nav-secondary-wrap">
				<nav class="nav-secondary" role="secondary-navigation">
	<ul>
		<li class="nav-label">Topics: </li>
		<li><a href="//devices.slashdot.org">Devices</a></li>
		<li><a href="//build.slashdot.org">Build</a></li>
		<li><a href="//entertainment.slashdot.org">Entertainment</a></li>
		<li><a href="//technology.slashdot.org">Technology</a></li>
		<li><a href="//slashdot.org/?fhfilter=opensource">Open Source</a></li>
		<li><a href="//science.slashdot.org">Science</a></li>
		<li><a href="//yro.slashdot.org">YRO</a></li>
		<!-- <li><a href="//slashdot.org/topics.pl">more...</a></li> -->
	</ul>
</nav>
<nav class="nav-social" role="social navigation">
	<ul>
		<li class="nav-label">Follow us:</li>
		<li><a href="https://rss.slashdot.org/Slashdot/slashdotMain" target="_blank" rel="nofollow"><i class="icon-rss-squared"></i><span class="sr-only">RSS</span></a></li>
		<li><a href="https://www.facebook.com/slashdot" target="_blank" rel="nofollow"><i class="icon-facebook-squared"></i><span class="sr-only">Facebook</span></a></li>
		<li><a href="https://www.linkedin.com/company/slashdot" target="_blank" rel="nofollow"><i class="icon-linkedin-squared"></i><span class="sr-only">LinkedIn</span></a></li>
		<li><a href="https://twitter.com/slashdot" target="_blank" rel="nofollow"><i class="icon-twitter-squared"></i><span class="sr-only">Twitter</span></a></li>
		<li><a href="https://www.youtube.com/channel/UCsW36751Gy-EAbHQwe9WBNw" target="_blank" rel="nofollow"><i class="icon-youtube-squared">
                    <!-- width="1792" height="1792" -->
                    <svg viewBox="0 260 1792 1260" xmlns="http://www.w3.org/2000/svg"><path d="M711 1128l484-250-484-253v503zm185-862q168 0 324.5 4.5t229.5 9.5l73 4q1 0 17 1.5t23 3 23.5 4.5 28.5 8 28 13 31 19.5 29 26.5q6 6 15.5 18.5t29 58.5 26.5 101q8 64 12.5 136.5t5.5 113.5v176q1 145-18 290-7 55-25 99.5t-32 61.5l-14 17q-14 15-29 26.5t-31 19-28 12.5-28.5 8-24 4.5-23 3-16.5 1.5q-251 19-627 19-207-2-359.5-6.5t-200.5-7.5l-49-4-36-4q-36-5-54.5-10t-51-21-56.5-41q-6-6-15.5-18.5t-29-58.5-26.5-101q-8-64-12.5-136.5t-5.5-113.5v-176q-1-145 18-290 7-55 25-99.5t32-61.5l14-17q14-15 29-26.5t31-19.5 28-13 28.5-8 23.5-4.5 23-3 17-1.5q251-18 627-18z"/></svg>
                </i><span class="sr-only">Youtube</span></a></li>
		<li><a href="https://mastodon.cloud/@slashdot" target="_blank" rel="me nofollow"><i class="icon-mastodon-squared">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M433 179.11c0-97.2-63.71-125.7-63.71-125.7-62.52-28.7-228.56-28.4-290.48 0 0 0-63.72 28.5-63.72 125.7 0 115.7-6.6 259.4 105.63 289.1 40.51 10.7 75.32 13 103.33 11.4 50.81-2.8 79.32-18.1 79.32-18.1l-1.7-36.9s-36.31 11.4-77.12 10.1c-40.41-1.4-83-4.4-89.63-54a102.54 102.54 0 0 1-.9-13.9c85.63 20.9 158.65 9.1 178.75 6.7 56.12-6.7 105-41.3 111.23-72.9 9.8-49.8 9-121.5 9-121.5zm-75.12 125.2h-46.63v-114.2c0-49.7-64-51.6-64 6.9v62.5h-46.33V197c0-58.5-64-56.6-64-6.9v114.2H90.19c0-122.1-5.2-147.9 18.41-175 25.9-28.9 79.82-30.8 103.83 6.1l11.6 19.5 11.6-19.5c24.11-37.1 78.12-34.8 103.83-6.1 23.71 27.3 18.4 53 18.4 175z"/></svg>
				</i><span class="sr-only">Mastodon</span></a></li>
		<li><a href="//slashdot.org/newsletter" target="_blank" rel="nofollow"><i class="icon-mail-squared"></i><span class="sr-only">Newsletter</span></a></li>
	</ul>
</nav>
			</div>
		</div>

		<section>
		
			<div class="message-bar" id="firehose-message-tray">
				<span class="icon-quote-left"></span>
				<p>
					
						
						Want to read Slashdot from your mobile device? Point it at <a href="http://m.slashdot.org">m.slashdot.org</a> and keep reading!
					
				</p>
			</div>
		
		
			<div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
		
		
			<div class="banner-wrapper">
				<div class="adwrap adwrap-unviewed banner-contain">
					
					<div id='div-gpt-ad-728x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.pubads().enableLazyLoad({fetchMarginPercent: 0,renderMarginPercent: 0});
googletag.display('div-gpt-ad-728x90_a');});</script></div>
					<div id='div-gpt-ad-hubicon_200x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.pubads().enableLazyLoad({fetchMarginPercent: 0,renderMarginPercent: 0});
googletag.display('div-gpt-ad-hubicon_200x90_a');});</script></div>
				</div>
			</div>
		
		<a name="main-articles"></a>
	
	<!-- header type=current end --><!-- body begin -->







	

	<style type="text/css">
menu, menu * {
	text-decoration:none;
}

menu[type=context] {
	display:none;
	position:absolute;
	z-index:10000;
}

menu[type=context]:not(.brief) {
	background-color:#dfdfdf;
	margin:0;
	padding:2px 0.5em;
	border-style:solid;
	border-width:1px;
	border-color:#eeeeee #aaaaaa #aaaaaa #eeeeee;
	-moz-border-radius-topright:.7em;
	-webkit-border-top-right-radius: 0.7em 0.7em;
}

menu.full[type=context] > a.slash-hover:first-child {
	-moz-border-radius-topright:.6em;
	-webkit-border-top-right-radius: 0.6em 0.6em;
}



menu.brief[type=context] > a {
	-moz-border-radius:.6em;
	-webkit-border-radius: 0.6em;
	color:#ffffff;
	background-color:#000000;
}

/*
span.briefmenu a.tag:not(.datatype) {
    padding-left:.5em;
}
*/




/* #tag-menu a, #feedback-menu a  { */
menu.tag-menu-admin a {
	display:list-item;
	list-style:none;
	text-align:left;
	font-weight:bold;
	color:black;
	padding:0.1em 0.5em;
	margin:-0.1em -0.5em;
	cursor:pointer;
}


.tags .edit-bar { position:relative; }
article aside .share .addthis_toolbox { display:block; width:60px; float:left; }
article aside.view_mode .share { min-width:120px; padding-top:.5em; }
#firehose.list article header h2 {padding-left: 20px; !important}
.novote .vote { display:none; }

.vote > a, .votedup > a, .voteddown > a {
	display:inline-block;
	height:22px;
	width:22px;
	margin: 2px 10px 0 0;
	color:rgb(255,255,255);
	text-decoration:none;
	line-height:22px;
	text-align:center;
	font-weight:bold;
	font-size:14px;
	border-width:1px;
	border-style:solid;
	border-color:rgba(0,0,0,0.5);
}

.vote > a, .votedup > a, .voteddown > a {color:rgb(0,0,0);}

article.fhitem-submission h2 .vote > a, article.fhitem-submission h2 .votedup > a, article.fhitem-submission h2 .voteddown > a { border-color:rgba(0,0,0,0.15); }
.vote .up, .vote .down, .votedup .up, .votedup .down, .voteddown .up, .voteddown .down { border-radius: 4px; -moz-border-radius: 4px; -webkit-border-radius: 4px; /* text-shadow:0 0 2px #000000; }*/}
article:not(.fhitem-story) .vote .up,article:not(.fhitem-story) .vote .down,article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .votedup .down,article:not(.fhitem-story) .voteddown .up,article:not(.fhitem-story) .voteddown .down { /*text-shadow:none !important; */}
.voteddown .down, .votedup .up { margin-right: 10px; text-indent:2px; line-height:24px; }
article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .voteddown .down {background: rgb(174,174,174);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(174,174,174)), to(rgb(193,193,193)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(193,193,193), rgb(174,174,174) 100%);color:rgb(0,0,0);}
article.fhitem-story .votedup .up,article.fhitem-story .voteddown .down {background: rgb(0,66,66);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(0,53,53)), to(rgb(0,102,102)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(0,102,102), rgb(0,53,53) 100%);}




#tag-menu span.var-tag {
font-weight:normal;
color:#444444;
}

menu.reasons-menu a {
padding:0 .25em 0 .25em;
font-size:80%;
-moz-border-radius:.5em;
-webkit-border-radius:.5em;
cursor:pointer;
}

menu.reasons-menu a:hover {
background:rgb(153,153,153);
background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102);
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102)));
color:#fff;
text-decoration:none;
font-weignt:normal;
}

article.fhitem-story menu.reasons-menu a:hover {
background:#002323 !important;
background:-moz-linear-gradient(100% 100% 90deg, #002323, #005353 70%) repeat scroll 0 0 #002323 !important;
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#005353), to(#002323)) !important;
}


menu.reasons-menu {
	display:none;
	margin:0;
	padding:0;
}

div.fhitem h3 menu.reasons-menu {
margin:0.25em 0 0;
}

div.fhitem h3 menu.reasons-menu a.tag {
font-size:.8em;
}

#tag-menu a.slash-hover,
#feedback-menu a.slash-hover,

.tag-display span.tag:hover,
.tag-display span.tag.trigger {
	color:white;
	background-color:rgb(0, 85, 85);
}

#tag-menu a.slash-hover span.var-tag {
	color:#eee;
}

.tag-entry.default {
        color:#ccc;
}

.brief .nix {
	margin-top:-1.35em;
	margin-left:0px;
	margin-top:-1.15em;
	text-decoration:none;
	line-height:1.35em;
	padding:0 2px;
	-moz-border-radius:.6em 0 0 .6em;
	-webkit-border-radius:.6em 0 0 .6em;
	-o-border-radius:.6em 0 0 .6em;
	border-radius:.6em 0 0 .6em;
    color:#fff !important;
    background:transparent !important;
}

.brief .nix:hover {
    background:rgb(153,153,153) !important;
    background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102) !important;
    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102))) !important;
}

</style>

<menu id="nix-reasons" style="display:none">
	<a class="tag">binspam</a><a class="tag">dupe</a><a class="tag">notthebest</a><a class="tag">offtopic</a><a class="tag">slownewsday</a><a class="tag">stale</a><a class="tag">stupid</a>
</menu>
<menu id="nod-reasons" style="display:none">
	<a class="tag">fresh</a><a class="tag">funny</a><a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">maybe</a>
</menu>
<menu id="comment-nix-reasons" style="display:none">
	<a class="tag">offtopic</a><a class="tag">flamebait</a><a class="tag">troll</a><a class="tag">redundant</a><a class="tag">overrated</a>
</menu>
<menu id="comment-nod-reasons" style="display:none">
	<a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">informative</a><a class="tag">funny</a><a class="tag">underrated</a>
</menu>

<menu id="tag-nod-reasons" style="display:none">
	<a class="tag">descriptive</a>
</menu>
<menu id="feedback-menu" class="tag-menu-admin" type="context">
	<a class="tag">typo</a><a class="tag">dupe</a><a class="tag">error</a>
</menu>
<menu id="tag-menu" class="tag-menu-admin none" type="context">

<!--	<a data-op="!" class="nix">!<span class="var-tag hide"></span></a>-->

</menu>

<script type="text/javascript">
$(function(){
var $CURRENT_MENU, $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/, IE7=/^7\.0/, TAG_PREFIX=/^\/tag\//;

function get_tag_name( $tag ){
	return ($tag.attr('href') || '').replace(TAG_PREFIX, '') || $tag.text().toLowerCase();
}

function trigger_menu( e, selector, $menu, menu_content ){
	var $target=$(original_target(e, selector)), in_use=$target.is('.trigger');
	if ( $CURRENT_MENU ) {
		$CURRENT_MENU.menu('cancel', e);
		$CURRENT_MENU = null;
	}

	if ( !in_use ) {
		menu_content && $menu.stop(true, true).hide().html(menu_content);
		($CURRENT_MENU=$menu).menu('context', e);
	}
	return !in_use;
}

function open_menu( trigger, $menu ){
	var $trigger=$(trigger), $fhitem=$trigger.closest('.fhitem');
	$fhitem.length && user_intent('interest', $fhitem[0]);

	$menu.appendTo(document.body).css({ opacity:0 }).show();

	var 	right	= $fhitem.offset().left + $fhitem.width(),
		global	= $trigger.offset(),
		local	= $menu.offsetParent().offset();

	// Ugly IE position hack required:
	$.browser.msie && IE7.test($.browser.version) && (local.top = 0);

	// pin the menu (horizontally) on-screen
	global.left = Math.min(global.left, right-$menu.width());

	$trigger.addClass('trigger');
	$menu.css({
		position:	'absolute',
		top:		global.top - local.top + $trigger.height(),
		left:		global.left - local.left,
		opacity:	1
	});
}

function close_menu( trigger, $menu ){
	$menu.hide();
	$(trigger).removeClass('trigger');
	($CURRENT_MENU===$menu) && ($CURRENT_MENU=false);
}

/* T2 tag context-menu */
var $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/;


    var user_is_admin = 0;



$('a[rel=tag]').live('mousedown',function(ea){
    window.open(this.href);
    return false;
})

$('.tag-bar .disagree').live('mousedown',function(ee){
	var fhitem = $(original_target(ee)).closest('.fhitem')[0],
		command = ('!' + $(original_target(ee)).attr("data-tag")).replace(NOTNOT, '');
    try { Tags.submit(fhitem, command); } catch ( err ) {  }
    return false;
})



$('a[rel=tag]').
	live('mousedown', function( e ){
        
            return true;
        

	}).
	live('click', function( e ){
		if ( !logged_in ) {
			var	target	= original_target(e),
				tag	= $(target).text();
			addfhfilter(tag);
		}
		e.preventDefault();
		return false;
	});

$TAG_MENU.menu({
	cssNamespace: 'slash',
	liveTriggers: true,
	clickDuration: 300,

	start: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			context	= firehose_settings && firehose_settings.viewtitle;

		// Insert the tagname into the menu items where needed.
		$TAG_MENU.find('span.var-tag').text(tag);
		$TAG_MENU.find('a.nix').attr('title','not ' + tag);


			// non-admins may only delete their own tags
		$TAG_MENU.find('a[data-op="-"]').toggle($tag.is('.my'));
	

		// *tagname* in *viewtitle*
		$TAG_MENU.find('a[data-op="="]').toggle(!!context);
		context && $TAG_MENU.find('span.var-view').text(context);

		open_menu($tag, $TAG_MENU);
	},

	select: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			op	= $(ui.event.target).attr('data-op'),
			fhitem,
			command;

		// Global for positioning other things.
		$related_trigger = $tag;

		switch ( op ) {
			case '=':
				addfhfilter(tag);
				break;

			default:
				fhitem = $tag.closest('.fhitem')[0];
				command = (op + tag).replace(NOTNOT, '');
				try { Tags.submit(fhitem, command); } catch ( err ) {  }
				break;
		}
	},

	stop: function( e, ui ){ close_menu(ui.trigger, $TAG_MENU); }
});




/* T2 feedback context-menu */



/* T2 datatype context-menu (admin-only) */






});
</script>

	

<!-- SMACKS: BEGIN STORY CONTENT -->
<div class="container">
	<!--SMACKS: BEGING CENTER COLUMN -->
	<div class="main-wrap has-rail-right">
		<div class="main-content">
			<div class="grid_24 a2 ">
			</div>
			<div id="firehose" class="nothumbs">
			<div id="firehoselist" class="fhroot fleft  grid_24">
				<div id="announcement">
  <div id="announcementText" style="display: none;"> Check out Bright Data: award-winning proxy networks, AI-powered web scrapers, and business-ready datasets for download. <a onclick="window._paq.push(['trackEvent', 'Announcement', 'BrightData']);" href="https://brightdata.com/?utm_source=brand&utm_campaign=brnd-mkt_content_partner_slashdot_banner&hs_signup=1" rel="nofollow"><strong>Get started for FREE here</a></strong><br><br>Welcome to the internet’s most trusted web data platform. </div>
  <a href="" class="btn-close" title="don't show me this again" onclick="closeAnnouncement(); return false;">&times;</a>
</div>


<script type="text/javascript">

if (!$.cookie('hide_sitenotice_36')) {
	$('#announcement').fadeIn(300);
}

function closeAnnouncement() {
	$('#announcement').fadeOut(300);
	$.cookie('hide_sitenotice_36', 'true', { path: '/', domain: 'slashdot.org', expires: 1 });
}
</script>
				<article id="firehose-175529883" data-fhid="175529883" data-fhtype="story" class="fhitem fhitem-story article usermode thumbs grid_24">
		<span class="sd-info-block" style="display: none">
			<span class="sd-key-firehose-id">175529883</span>
			<span class="type">story</span>
			
		</span>







	
	

<header>
	
		<span class="topic" id="topic-175529883">
			<a href="//developers.slashdot.org/index2.pl?fhfilter=programming" onclick="return addfhfilter('programming');">
			
				<img src="//a.fsdn.com/sd/topics/programming_64.png" width="64" height="64" alt="Programming" title="Programming">
			
		</a>
		</span>
	
    
	<h1 class="story">
		

		

		
		

		

		

		

		<span id="title-175529883" class="story-title"> <a   href="//developers.slashdot.org/story/24/11/23/2327203/verify-the-rusts-standard-librarys-7500-unsafe-functions---and-win-financial-rewards">Verify the Rust's Standard Library's 7,500 Unsafe Functions - and Win 'Financial Rewards'</a> <span class=" no extlnk"><a class="story-sourcelnk" href="https://devclass.com/2024/11/21/aws-will-pay-devs-to-verify-rust-standard-library-because-of-7500-unsafe-functions-and-enormity-of-task/?td=rt-3a"  title="External link - https://devclass.com/2024/11/21/aws-will-pay-devs-to-verify-rust-standard-library-because-of-7500-unsafe-functions-and-enormity-of-task/?td=rt-3a" target="_blank"> (devclass.com) </a></span></span>

		
		
		<!--<span class="comments commentcnt-175529883" >70</span>-->
		

		
		<!-- comment bubble -->
		
			<span class="comment-bubble"><a href="//developers.slashdot.org/story/24/11/23/2327203/verify-the-rusts-standard-librarys-7500-unsafe-functions---and-win-financial-rewards#comments" title="">70</a></span>
		
	</h1>
	<div class="details" id="details-175529883">
		<span class="story-details">
		<span class="story-views">
			<span class="sodify" onclick="firehose_set_options('color', 'red')" title="Filter Firehose to entries rated red or better"></span><span class="icon-beaker pop1 " alt="Popularity" title="Filter Firehose to entries rated red or better" onclick="firehose_set_options('color', 'red')"><span></span></span> 
		</span>
		</span>
		<span class="story-byline">
	
				
			Posted
				by 
		
		
			
				  EditorDavid
			
		
		

		
		
		<time id="fhtime-175529883" datetime="on Saturday November 23, 2024 @09:34PM">on Saturday November 23, 2024 @09:34PM</time>
		
		
			 from the <span class="dept-text">Rust-never-sleeps</span> dept.
		
		</span>
	</div>
</header>

<div class="body" id="fhbody-175529883">
	
		
	

	
		
		<div id="text-175529883" class="p">
			
		 	
				The Rust community has "recognized the unsafety of Rust (if used incorrectly)," according to <a href="https://aws.amazon.com/blogs/opensource/verify-the-safety-of-the-rust-standard-library/">a blog post by Amazon Web Services</a>.<br> <br>
So now AWS and the Rust Foundation are "crowdsourcing an effort to verify the Rust standard library," according to <a href="https://devclass.com/2024/11/21/aws-will-pay-devs-to-verify-rust-standard-library-because-of-7500-unsafe-functions-and-enormity-of-task/">an article at DevClass.com</a>, "by setting out a series of challenges for devs and offering financial rewards for solutions..."

<i>Rust includes ways to bypass its safety guarantees though, with the use of the "unsafe" keyword...   The issue <a href="https://aws.amazon.com/blogs/opensource/verify-the-safety-of-the-rust-standard-library/">AWS highlights</a> is that even if developers use only safe code, most applications still depend on the Rust standard library. AWS states that there are approximately 7.5K unsafe functions in the Rust Standard Library and notes that 57 "soundness issues" and 20 CVEs (Common Vulnerabilities and Exposures) have been reported in the last three years. [28% of the soundness issues were discovered in 2024.]<br> <br>

Marking a function as unsafe does not mean it is vulnerable, only that Rust does not guarantee its safety. AWS plans to reduce the risk by using tools and techniques for formal verification of key library code, but believes that "a single team would be unable to make significant inroads" for reasons including the lack of a verification mechanism in the Rust ecosystem and what it calls the "unknowns of scalable verification."  The plan therefore is to turn this over to the community, by <a href="https://foundation.rust-lang.org/news/rust-foundation-collaborates-with-aws-initiative-to-verify-rust-standard-libraries/">posing challenges and rewarding developers for solutions</a>....  A <a href="https://github.com/model-checking/verify-rust-std">GitHub repository</a> provides a fork of the Rust code and includes a set of challenges, currently 13 of them... The Rust Foundation says that there is a financial reward tied to each challenge, and that the "challenge rewards committee is responsible for reviewing activity and dispensing rewards." How much will be paid though is not stated.<br> <br>
Despite the wide admiration for Rust, there is <a href="https://devclass.com/2023/11/17/rust-now-has-a-specification-team-but-it-will-not-define-the-language/">no formal specification for the language</a>, an issue which impacts formal verification efforts.</i> <br>

<em>
Thanks to Slashdot reader <a href="https://www.slashdot.org/~sean-it-all">sean-it-all</a> for sharing the news.
</em><br>
		 	
		</div>

		

		

		
			
		
	</div>
	<aside class="grid_24 view_mode">
		
			<div class="units-12 story-detail-tags">
				<span id="sharethis-175529883" class="">
					
						

						

					
				</span>

				<div class="story-tags">
					<div class="tright tw">
						
							<span class="tright tags">
								
									<menu type="toolbar" class="edit-bar">
		<span id="tagbar-175529883" class="tag-bar none">
			
		</span>
		
		<!--
			<a class="edit-toggle" href="/my/login/" onclick="show_login_box();return false;">
				<span class="icon-tag btn collapse"></span>
			</a>
			-->
		
		
		<div class="tag-menu">
			<input class="tag-entry default" type="text" value="apply tags">
		</div>
		

		
		

	</menu>
								
							</span>
						
					</div>
				</div>
			</div>

			
				
				
				
			 	
					<section class="grid_24" id="newa2footerv2">
						<div class="grid_6 pr">
							<h3><a title="Previous story" href="//developers.slashdot.org/story/24/11/23/1855203/does-github-copilot-improve-code-quality?sdsrc=prev">&larr;</a></h3>
						</div>
						<div class="grid_12 rl">
							<h3>You may like to read:</h3>
						</div>
						<div class="grid_6 ns">
							<h3><a title="Next story" href="//science.slashdot.org/story/24/11/24/0019202/potentially-toxic-chemical-byproduct-may-be-present-in-13-of-us-drinking-water?sdsrc=next">&rarr;</a></h3>
						</div>
						<div class="grid_6">
							<span class="c">
								<a href="//developers.slashdot.org/story/24/11/23/1855203/does-github-copilot-improve-code-quality?sdsrc=prev">Does GitHub Copilot Improve Code Quality? </a>
							</span>
						</div>
						<div class="grid_12">
							<span class="c">
								
									
									
									
									

																				<h2><a href="//developers.slashdot.org/story/24/03/19/019240/c-creator-rebuts-white-house-warning?sdsrc=popbyskid">C++ Creator Rebuts White House Warning</a><br></h2>
																				<h2><a href="//developers.slashdot.org/story/24/08/04/0228253/darpa-wants-to-automatically-transpile-c-code-into-rust---using-ai?sdsrc=popbyskid">DARPA Wants to Automatically Transpile C Code Into Rust - Using AI</a><br></h2>
																				<h2><a href="//developers.slashdot.org/story/24/02/28/1529238/white-house-urges-devs-to-switch-to-memory-safe-programming-languages?sdsrc=popbyskid">White House Urges Devs To Switch To Memory-Safe Programming Languages</a><br></h2>
																				<h2><a href="//developers.slashdot.org/story/24/08/09/1418217/agile-is-killing-software-innovation-says-moxie-marlinspike?sdsrc=popbyskid">Agile is Killing Software Innovation, Says Moxie Marlinspike</a><br></h2>
																				<h2><a href="//developers.slashdot.org/story/24/08/23/1736253/aws-ceo-says-most-developers-could-stop-coding-soon-as-ai-takes-over?sdsrc=popbyskid">AWS CEO Says Most Developers Could Stop Coding Soon as AI Takes Over</a><br></h2>
									
								
								
									<h3 class="js_disp_only hide"><a class="jshandle_related" data-goto-url="//developers.slashdot.org/submission/17330305/aws-will-pay-devs-to-verify-rust-standard-library-because-of-7500-unsafe-functi?sdsrc=rel" href="#">Submission: AWS will pay devs to verify Rust standard library because of 7,500 unsafe functi</a></h3><script type="text/javascript">
		(function($){
			$('.js_disp_only').show();
			$('a.jshandle_related').on('click', '', function(e) {
				e.preventDefault();
				var url = $(this).data('goto-url');
				window.location = url
			});
		})($j);
	</script>
								
							</span>
						</div>
						<div class="grid_6">
							<span class="c">
								
									<a href="//science.slashdot.org/story/24/11/24/0019202/potentially-toxic-chemical-byproduct-may-be-present-in-13-of-us-drinking-water?sdsrc=next">'Potentially Toxic' Chemical Byproduct May Be Present in 1/3 of US Drinking Water</a>
								
							</span>
						</div>
					</section>
				
			
		
	</aside>
	



	</article>
			</div>
			</div>
		</div>
	</div>
	<!-- SMACKS: BEGIN RIGHT RAIL -->
	<aside id="slashboxes" class="rail-right">
		
                    <div id="slashboxesin" class="yui-b">
                            
                            
                            
                    </div>
		    <div class="railad adwrap-unviewed">
<div id='div-gpt-ad-300x250_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.pubads().enableLazyLoad({fetchMarginPercent: 0,renderMarginPercent: 0});
googletag.display('div-gpt-ad-300x250_a');});</script></div>
</div>
		
	</aside>
		<!-- SMACKS: END RIGHT RAIL -->
</div>
<!-- END STORY CONTENT -->

<!-- THIS IS THE LOCATION FOR THE NEW STORY_B CODE -->
<div class="adwrap">
<div id='div-gpt-ad-728x90_b'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.pubads().enableLazyLoad({fetchMarginPercent: 0,renderMarginPercent: 0});
googletag.display('div-gpt-ad-728x90_b');});</script></div>
</div>
<script type="text/javascript">
if (window.is_euro_union === 0) {
    if (sdAdBlockActive) {
        bizx.cmp.ifConsent('', ['all'], function () {
            $.ajax({
                url: '/ajax.pl?op=nel',
                type: 'POST',
                success: function(html){
                    if(html){
                        $('#firehoselist article').eq(0).after(html);
                    }
                }
            });
        });
    }
}
</script>
<!--------------------------->


<!-- SMACKS: BEGIN COMMENTS CONTAINER -->
<div class="container">
	<!-- SMACKS: BEGIN COMMENTS SECTION -->
	<div class="main-wrap">
		<div class="main-content">
			<div id="comments" class="a2commentwrap">
			<div>
					<a name="comments"></a>
<div id="comments" class="container">
	<div class="main-wrap">
		<div class="main-content">
			<section class="d2incommentspl">
				<div class="commentwrap" id="commentwrap">
					
						<div class="commentBox">
							<div class="title hide">
								<h4>
									
										<span class="escape-link"><a href="//developers.slashdot.org/story/24/11/23/2327203/verify-the-rusts-standard-librarys-7500-unsafe-functions---and-win-financial-rewards" title="Back to Article - Verify the Rust's Standard Library's 7,500 Unsafe Functions - and Win 'Financial Rewards'">Verify the Rust's Standard Library's 7,500 Unsafe Functions - and Win 'Financial Rewards'</a></span>
									
									<span class="commentBoxLinks"><a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_d"></span> More</a>



	| <span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Reply</a>


	<a class="login"  href="//developers.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a></span>
								</h4>
							</div>
						</div>
					

					<section class="grid_24" id="d2header"><div>
						
							<h2 class="commentspl test"><a title="Back to Article - Verify the Rust's Standard Library's 7,500 Unsafe Functions - and Win 'Financial Rewards'" href="//developers.slashdot.org/story/24/11/23/2327203/verify-the-rusts-standard-librarys-7500-unsafe-functions---and-win-financial-rewards">Verify the Rust's Standard Library's 7,500 Unsafe Functions - and Win 'Financial Rewards'</a></h2>
						
						<nav class="grid_24">
							<div class="grid_14 widthauto">
							
						 		<span class="ind"></span><a class="btn first" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Post</a>
							
							<!-- <a href="//developers.slashdot.org/search.pl?op=comments&amp;sid=23530125" class="btn">Search <span class="totalcommentcnt">70</span> Comments</a> -->
							
								
									<a href="#" onclick="D2.ajaxFetchComments(0,1,'','',-1); return false" class="btn" id="d2loadall">Load All Comments</a>
								
							
							
								</div>
								<div class="grid_10 d1or2">
							

							
								<div id="d2out" class="horizontal rooted grid_15">
									<div id="d2act" class="hide">
										<div class="loki" id="gods">
											<script type="text/javascript">
												 $(function(){
													 D2.slider = new D2.Slider(
														 D2.user_threshold(),
														 D2.user_highlightthresh(),
														 'x'
													 );
												 });
											</script>
											<div id="bones" class="grid_12">
												<div class="ccw-count-container grid_24">
													<span id="ccw-full-count-text" class="grid_8 ccw-count-text tcenter"><span></span><span id="ccw-full-phrase">&nbsp;Full</span></span>
													<span id="ccw-abbr-count-text" class="grid_8 ccw-count-text"><span></span><span id="ccw-abbr-phrase">&nbsp;Abbreviated</span></span>
													<span id="ccw-hide-count-text" class="grid_8 ccw-count-text tleft"><span></span><span id="ccw-hide-phrase">&nbsp;Hidden</span></span>
												</div>
												<div id="ccw">
													<div id="ccw-body" class="ccw-core">
														<div id="ccw-panel-container" class="ccw-core">
															<div id="ccw-full-panel" class="ccw-panel">
																/Sea<div class="ccw-panel-border"></div>
																<div id="ccw-full-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
															<div id="ccw-abbr-panel" class="ccw-panel">
																<div class="ccw-panel-border"></div>
																<div id="ccw-abbr-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
															<div id="ccw-hide-panel" class="ccw-panel">
																<div id="ccw-hide-count-pos" class="ccw-core-pos ccw-count-pos"></div>
															</div>
														</div>
														<div id="ccw-control" class="ccw-core">
															<div id="ccw-centering-rail" class="ccw-core">
																<div id="ccw-hide-bar-pos" class="ccw-core-pos">
																	<div id="ccw-hide-bar" class="ccw-bar">
																		<div id="ccw-hide-bar-tab" class="ccw-bar-tab"></div>
																		<div class="ccwa"></div>
																		<div class="ccwb"></div>
																		<div id="ccw-hide-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(HIDE_BAR, +1)"></div>
																		<div id="ccw-hide-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(HIDE_BAR, -1)"></div>
																	</div>
																</div>
																<div id="ccw-abbr-bar-pos" class="ccw-core-pos">
																	<div id="ccw-abbr-bar" class="ccw-bar">
																		<div id="ccw-abbr-bar-tab" class="ccw-bar-tab"></div>
																		<div class="ccwa"></div>
																		<div class="ccwb"></div>
																		<div id="ccw-abbr-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(ABBR_BAR, +1)"></div>
																		<div id="ccw-abbr-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(ABBR_BAR, -1)"></div>
																	</div>
																</div>
															</div>
														</div>
													</div>
													<div class="ccw-score-label grid_24">
														<div class="grid_3"><span class="sc">Score:</span></div>
														<div class="grid_3">5<span class="lg"></span></div>
														<div class="grid_3">4<span class="lg"></span></div>
														<div class="grid_3">3<span class="lg"></span></div>
														<div class="grid_3">2<span class="lg"></span></div>
														<div class="grid_3">1<span class="lg"></span></div>
														<div class="grid_3">0<span class="lg"></span></div>
														<div class="grid_3">-1<span class="lg"></span></div>
													</div>
												</div>
											</div>
											<div class="commentControlFooter">
												<a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_c"></span> More</a>



	| <span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Reply</a>


	<a class="login"  href="//developers.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a><div id="login_cover" class="hide" onclick="hide_login_box()"></div>
<div id="login_box" class="hide">
	<div id="login_box_content">
		<div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="//developers.slashdot.org/comments.pl?sid=23530125">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
		<div class="actions">
			<a class="ico close" href="#" onclick="hide_login_box(); return false"><span>Close</span></a>
		</div>
	</div>
</div>
<script type="text/javascript">logged_in = 0</script>
											</div>
											<div id="commentControlBoxStatus" class="hide"></div>
										</div>
									</div>
								</div>
							
							
							<a href="//developers.slashdot.org/search.pl?op=comments&amp;sid=23530125" class="ui-icon search_comments">Search <span class="totalcommentcnt">70</span> Comments</a>
							
								<a class="pref ui-icon-w" href="//developers.slashdot.org/users.pl" onclick="show_login_box(); $('#modal_box').addClass('login'); return false;">Log In/Create an Account</a>
							
						</div>
					</nav>
					<section id="besttabs" class="grid_24">
						<span class="legend">Comments Filter:</span>
						<ul class="besttabslist">
							<li class="active">
								<a href="#" data-filter-url="//developers.slashdot.org/story/24/11/23/2327203/verify-the-rusts-standard-librarys-7500-unsafe-functions---and-win-financial-rewards#comments">All</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/11/23/2327203/verify-the-rusts-standard-librarys-7500-unsafe-functions---and-win-financial-rewards/insightful-comments#comments">Insightful</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/11/23/2327203/verify-the-rusts-standard-librarys-7500-unsafe-functions---and-win-financial-rewards/informative-comments#comments">Informative</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/11/23/2327203/verify-the-rusts-standard-librarys-7500-unsafe-functions---and-win-financial-rewards/interesting-comments#comments">Interesting</a>
							</li>
						
							<li >
								<a href="" data-filter-url="//developers.slashdot.org/story/24/11/23/2327203/verify-the-rusts-standard-librarys-7500-unsafe-functions---and-win-financial-rewards/funny-comments#comments">Funny</a>
							</li>
						
					</ul>
					<script>
					(function($){
						$('#besttabs').show();
						$('.besttabslist').on('click', 'li a', function(e){
							e.preventDefault();
							var url = $(this).data('filter-url');
							//console.log('URL= ', url);
							$(this)
								.closest('ul').find('li').removeClass('active')
								.end()
								.closest('li').addClass('active');
							window.location = url;
						});
					})($j);
					</script>
			</section>
				<aside class="grid_24">
					<p>
						<small><strong>The Fine Print:</strong> The following comments are owned by whoever posted them.  We are not responsible for them in any way.</small>
					</p>
				</aside>
			</section>
			
		</div>
	</div>
</div><script src="//a.fsdn.com/sd/comments-minified.js?541b6a39b4a6b899" type="text/javascript"></script>


<script type="text/javascript">
<!--
D2.d2_keybindings_disable()[191] = 1;
D2.boxStatus(1);
D2.comments({ 64967873: { uid: 339739, pid: 64967709, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [ 64968119 ], opid: 64967709 }, 64968107: { uid: 164658, pid: 64967761, read: 0, points: 1, kids: [ 64968169, 64968345 ], opid: 64967761 }, 64968155: { uid: 10095012, pid: 64967881, subject: "Re:Who wrote those 7500 functions?", read: 0, points: -1, kids: [ 64968573 ], opid: 64967881 }, 64968421: { uid: 80593, pid: 64968169, subject: "Re:Not actually safer you say? Huh, imagine that.", read: 0, points: 1, kids: [  ], opid: 64968169 }, 64968233: { uid: 567177, pid: 64967883, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64967883 }, 64967915: { uid: 1636461, pid: 64967755, subject: "Re:Pay some workers?", read: 0, points: 2, kids: [  ], opid: 64967755 }, 64968643: { uid: 95240, pid: 64968561, subject: "Re:Not actually safer you say? Huh, imagine that.", read: 0, points: 2, kids: [ 64968747 ], opid: 64968561 }, 64968285: { uid: 203612, pid: 64968159, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 3, kids: [  ], opid: 64968159 }, 64968125: { uid: 1411889, pid: 0, read: 0, points: 4, kids: [ 64968379 ], opid: 0 }, 64968649: { uid: 739463, pid: 64967883, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [ 64968715 ], opid: 64967883 }, 64968847: { uid: 68843, pid: 64968747, subject: "Re:Not actually safer you say? Huh, imagine that.", read: 0, points: 2, kids: [  ], opid: 64968807 }, 64968363: { uid: 68843, pid: 64968345, subject: "Re:Not actually safer you say? Huh, imagine that.", read: 0, points: 2, kids: [ 64968537 ], opid: 64968345 }, 64968899: { uid: 203612, pid: 64967805, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64967805 }, 64968573: { uid: 88907, pid: 64968155, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64968155 }, 64968123: { uid: 7651114, pid: 64967787, subject: "Re:Who wrote those 7500 functions?", read: 0, points: -1, kids: [ 64968269, 64968401, 64968665 ], opid: 64967787 }, 64968269: { uid: 203612, pid: 64968123, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [ 64969119 ], opid: 64968123 }, 64968071: { uid: 203612, pid: 64967779, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 3, kids: [ 64968159 ], opid: 64967779 }, 64967835: { uid: 666, pid: 64967755, subject: "Re:Pay some workers?", read: 0, points: -1, kids: [  ], opid: 64967755 }, 64968379: { uid: 14640, pid: 64968125, read: 0, points: 3, kids: [ 64968945 ], opid: 64968125 }, 64968205: { uid: 153816, pid: 64967761, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 1, kids: [  ], opid: 64967761 }, 64969019: { uid: 974563, pid: 64969017, read: 0, points: 2, kids: [  ], opid: 64969017 }, 64967653: { uid: 736903, pid: 0, read: 0, points: 3, kids: [  ], opid: 0 }, 64967845: { uid: 712836, pid: 64967803, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64967803 }, 64968359: { uid: 14640, pid: 64967883, read: 0, points: 2, kids: [ 64968583 ], opid: 64967883 }, 64968665: { uid: 739463, pid: 64968123, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64968123 }, 64969119: { uid: 7651114, pid: 64968269, subject: "Re:Who wrote those 7500 functions?", read: 0, points: -1, kids: [  ], opid: 64968269 }, 64968263: { uid: 8485281, pid: 64967755, read: 0, points: 2, kids: [  ], opid: 64967755 }, 64967645: { uid: 709234, pid: 0, read: 0, points: 3, kids: [ 64968141, 64968151 ], opid: 0 }, 64968395: { uid: 664417, pid: 64968235, subject: "Re:Rust needs formal behavioral verification tools", read: 0, points: 2, kids: [  ], opid: 64968235 }, 64968921: { uid: 5274, pid: 64967709, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64967709 }, 64968119: { uid: 1411889, pid: 64967873, read: 0, points: 2, kids: [  ], opid: 64967873 }, 64967769: { uid: 3450605, pid: 64967709, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 4, kids: [  ], opid: 64967709 }, 64967687: { uid: 934156, pid: 0, read: 0, points: 3, kids: [ 64967755 ], opid: 0 }, 64968401: { uid: 953524, pid: 64968123, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64968123 }, 64968345: { uid: 95240, pid: 64968107, subject: "Re:Not actually safer you say? Huh, imagine that.", read: 0, points: 2, kids: [ 64968363 ], opid: 64968107 }, 64969017: { uid: 974563, pid: 0, read: 0, points: 2, kids: [ 64969019 ], opid: 0 }, 64968629: { uid: 7250692, pid: 64968141, read: 0, points: 2, kids: [  ], opid: 64968141 }, 64968715: { uid: 88907, pid: 64968649, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64968649 }, 64968537: { uid: 95240, pid: 64968363, subject: "Re:Not actually safer you say? Huh, imagine that.", read: 0, points: 2, kids: [ 64968561 ], opid: 64968363 }, 64968247: { uid: 6952954, pid: 64967779, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64967779 }, 64967909: { uid: 1186667, pid: 64967709, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64967709 }, 64967779: { uid: 906188, pid: 64967761, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [ 64967787, 64967881, 64968071, 64968247 ], opid: 64967761 }, 64967787: { uid: 712836, pid: 64967779, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 5, kids: [ 64967803, 64967883, 64968123, 64968845 ], opid: 64967779 }, 64968747: { uid: 68843, pid: 64968643, subject: "Re:Not actually safer you say? Huh, imagine that.", read: 0, points: 2, kids: [ 64968807, 64968847, 64968905 ], opid: 64968643 }, 64967709: { uid: 30498, pid: 0, read: 0, points: 3, kids: [ 64967761, 64967769, 64967805, 64967873, 64967909, 64968067, 64968921 ], opid: 0 }, 64968169: { uid: 203612, pid: 64968107, subject: "Re:Not actually safer you say? Huh, imagine that.", read: 0, points: 2, kids: [ 64968351, 64968421 ], opid: 64968107 }, 64967761: { uid: 712836, pid: 64967709, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [ 64967779, 64968107, 64968205, 64968239, 64968543 ], opid: 64967709 }, 64968239: { uid: 6952954, pid: 64967761, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64967761 }, 64968889: { uid: 203612, pid: 64968543, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64968543 }, 64968945: { uid: 1411889, pid: 64968379, read: 0, points: 2, kids: [  ], opid: 64968379 }, 64968807: { uid: 95240, pid: 64968747, subject: "Re:Not actually safer you say? Huh, imagine that.", read: 0, points: 2, kids: [  ], opid: 64968747 }, 64968583: { uid: 88907, pid: 64968359, subject: "Re: Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64968359 }, 64968383: { uid: 203612, pid: 64968351, subject: "Re:Not actually safer you say? Huh, imagine that.", read: 0, points: 2, kids: [  ], opid: 64968351 }, 64968351: { uid: 666, pid: 64968169, subject: "Re:Not actually safer you say? Huh, imagine that.", read: 0, points: 0, kids: [ 64968383 ], opid: 64968169 }, 64967755: { uid: 98486, pid: 64967687, subject: "Re:Pay some workers?", read: 0, points: 5, kids: [ 64967835, 64967879, 64967915, 64968111, 64968263 ], opid: 64967687 }, 64968543: { uid: 1099, pid: 64967761, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [ 64968889 ], opid: 64967761 }, 64967879: { uid: 88907, pid: 64967755, subject: "Re:Pay some workers?", read: 0, points: 3, kids: [  ], opid: 64967755 }, 64967805: { uid: 666, pid: 64967709, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 0, kids: [ 64968899 ], opid: 64967709 }, 64968235: { uid: 6952954, pid: 0, read: 0, points: 2, kids: [ 64968395 ], opid: 0 }, 64968905: { uid: 95240, pid: 64968747, subject: "Re:Not actually safer you say? Huh, imagine that.", read: 0, points: 2, kids: [  ], opid: 64968847 }, 64968151: { uid: 203612, pid: 64967645, subject: "Re:7500 sounds like a lot.", read: 0, points: 2, kids: [  ], opid: 64967645 }, 64968111: { uid: 8891681, pid: 64967755, subject: "Re:Pay some workers?", read: 0, points: 2, kids: [  ], opid: 64967755 }, 64968159: { uid: 10095012, pid: 64968071, subject: "Re:Who wrote those 7500 functions?", read: 0, points: -1, kids: [ 64968285 ], opid: 64968071 }, 64968561: { uid: 68843, pid: 64968537, subject: "Re:Not actually safer you say? Huh, imagine that.", read: 0, points: 2, kids: [ 64968643 ], opid: 64968537 }, 64967883: { uid: 88907, pid: 64967787, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [ 64968233, 64968359, 64968649 ], opid: 64967787 }, 64968141: { uid: 666, pid: 64967645, subject: "Re:7500 sounds like a lot.", read: 0, points: -1, kids: [ 64968629 ], opid: 64967645 }, 64967803: { uid: 906188, pid: 64967787, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [ 64967845 ], opid: 64967787 }, 64968067: { uid: 203612, pid: 64967709, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64967709 }, 64967881: { uid: 88907, pid: 64967779, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [ 64968155 ], opid: 64967779 }, 64968845: { uid: 1071376, pid: 64967787, subject: "Re:Who wrote those 7500 functions?", read: 0, points: 2, kids: [  ], opid: 64967787 } });

D2.thresh_totals({6:{6:{1:70,3:0,2:0}},3:{6:{1:58,3:0,2:12},4:{1:58,3:8,2:4},3:{1:58,3:12,2:0},5:{1:58,3:3,2:9}},2:{6:{1:11,3:0,2:59},4:{1:11,3:8,2:51},3:{1:11,3:14,2:45},2:{1:11,3:59,2:0},5:{1:11,3:3,2:56}},1:{6:{1:8,3:0,2:62},4:{1:8,3:8,2:54},1:{1:8,3:62,2:0},3:{1:8,3:14,2:48},2:{1:8,3:59,2:3},5:{1:8,3:3,2:59}},4:{6:{1:66,3:0,2:4},4:{1:66,3:4,2:0},5:{1:66,3:3,2:1}},0:{6:{1:6,3:0,2:64},4:{1:6,3:8,2:56},1:{1:6,3:62,2:2},3:{1:6,3:14,2:50},0:{1:6,3:64,2:0},2:{1:6,3:59,2:5},5:{1:6,3:3,2:61}},"-1":{6:{1:0,3:0,2:70},3:{1:0,3:14,2:56},2:{1:0,3:59,2:11},1:{1:0,3:62,2:8},4:{1:0,3:8,2:62},0:{1:0,3:64,2:6},"-1":{1:0,3:70,2:0},5:{1:0,3:3,2:67}},5:{6:{1:68,3:0,2:2},5:{1:68,3:2,2:0}}});

D2.root_comment(0);
D2.root_comments([64967645,64967653,64967687,64967709,64968125,64968235,64969017]);
D2.root_comments_hash({64969017:1,64968125:1,64967709:1,64967653:1,64967645:1,64968235:1,64967687:1});

D2.d2_comment_order(0);
D2.user_uid(666);
D2.user_is_anon(1);
D2.user_is_admin(0);
D2.user_is_subscriber(0);
D2.user_smallscreen(0);
D2.user_threshold(1);
D2.user_highlightthresh(4);
D2.user_d2asp(0);

D2.discussion_id(23530125);

D2.d2_seen('64967645,8,34,22,46,6,8,10,8,16,2,30,10,28,6,2,2,26,6,152,4,36,4,8,4,2,16,10,4,4,10,36,28,2,4,8,16,6,16,60,6,8,4,16,4,12,6,20,116,6,18,12,10,46,14,6,16,50,32,60,38,2,42,10,6,16,24,72,2,100');
D2.more_comments_num(0);


//-->
</script>




	
	
	
	
		<ul id="commentlisting" class="d2">
			<li id="tree_64967645" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64967645" class="commentstatus"></div>
<div id="comment_64967645" class="cw">
	<div id="comment_top_64967645" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967645" name="comment_link_64967645" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967645" onclick="return D2.setFocusComment(64967645)" >7500 sounds like a lot.</a>


		 	<span id="comment_score_64967645" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967645); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~ChunderDownunder">ChunderDownunder</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~ChunderDownunder">( 709234 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967645">		
		on Saturday November 23, 2024 @09:53PM (<span class="ind"></span><a rel="nofollow" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967645">#64967645</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967645"><p>Has an audit been conducted to see which of these functions could be reworked in a 'safe' manner or those which are only present for interoperability with C?</p><p>New paradigms and what not...</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967645">
<span class="ind"></span><a id="reply_link_64967645" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967645" onclick="D2.replyTo(64967645); return false;">Reply to This</a> 	<a rel="nofollow" href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a rel="nofollow" class="t slashpop" href="https://twitter.com/intent/tweet?text=7500 sounds like a lot.%20by%20ChunderDownunder%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967645" target="_blank">twitter</a>
		<a rel="nofollow" class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967645" target="_blank">facebook</a>
	</div>
 <span class="ind"></span><a id="reply_link_64967645" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967645" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64967645"></div>

<ul id="group_64967645">
	<li id="hiddens_64967645" class="hide"></li>
</ul>

<ul id="commtree_64967645"><li id="tree_64968141" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64968141" class="commentstatus"></div>
<div id="comment_64968141" class="cw">
</div>

<div id="replyto_64968141"></div>

<ul id="group_64968141">
	<li id="hiddens_64968141" class="hide"></li>
</ul>

<ul id="commtree_64968141"><li id="tree_64968629" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968629" class="commentstatus"></div>
<div id="comment_64968629" class="cw">
	<div id="comment_top_64968629" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968629" name="comment_link_64968629" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968629" onclick="return D2.setFocusComment(64968629)" >Need list of payout amounts</a>


		 	<span id="comment_score_64968629" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968629); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~will4">will4</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~will4">( 7250692 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968629"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968629"><p>Where's the list of payouts for the bug types found?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968629">

</div>
</div>

<div id="replyto_64968629"></div>

<ul id="group_64968629">
	<li id="hiddens_64968629" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64968151" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968151" class="commentstatus"></div>
<div id="comment_64968151" class="cw">
	<div id="comment_top_64968151" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968151" name="comment_link_64968151" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968151" onclick="return D2.setFocusComment(64968151)" >Re:</a>


		 	<span id="comment_score_64968151" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968151); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Phillip2">Phillip2</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Phillip2">( 203612 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968151"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968151"><p>I think that very few of the unsafe functions in the standard library are unsafe because of C interoperability.</p><p>You need unsafe where ever you can't know for sure if data exists or not -- so that's Vec and most of the data structures that have unsafe in them. And you also need unsafe if you are manipulating data that is supposed to be in some format but might not be -- so that is String, and transmuting.</p><p>As far as I can see, only the CStr verification challenge is actually for C interop.</p><p>On the more general qu<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968151">

</div>
</div>

<div id="replyto_64968151"></div>

<ul id="group_64968151">
	<li id="hiddens_64968151" class="hide"></li>
</ul>

</li><li id="hidestring_64967645"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23530125&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64967645">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64967653" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64967653" class="commentstatus"></div>
<div id="comment_64967653" class="cw">
	<div id="comment_top_64967653" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967653" name="comment_link_64967653" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967653" onclick="return D2.setFocusComment(64967653)" >Bug bounty</a>


		 	<span id="comment_score_64967653" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967653); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~PPH">PPH</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~PPH">( 736903 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967653">		
		on Saturday November 23, 2024 @09:55PM (<span class="ind"></span><a rel="nofollow" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967653">#64967653</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967653"><p>Pardon me while I go and <a href="https://www.snbforums.com/data/attachments/33/33586-c875c32a2c7aa5c3857dcb51daf80ae4.jpg" title="snbforums.com">write myself a minivan</a> [snbforums.com].</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967653">
<span class="ind"></span><a id="reply_link_64967653" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967653" onclick="D2.replyTo(64967653); return false;">Reply to This</a> 	<a rel="nofollow" href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a rel="nofollow" class="t slashpop" href="https://twitter.com/intent/tweet?text=Bug bounty%20by%20PPH%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967653" target="_blank">twitter</a>
		<a rel="nofollow" class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967653" target="_blank">facebook</a>
	</div>
 <span class="ind"></span><a id="reply_link_64967653" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967653" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64967653"></div>

<ul id="group_64967653">
	<li id="hiddens_64967653" class="hide"></li>
</ul>

</li><li id="tree_64967687" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64967687" class="commentstatus"></div>
<div id="comment_64967687" class="cw">
	<div id="comment_top_64967687" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967687" name="comment_link_64967687" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967687" onclick="return D2.setFocusComment(64967687)" >Pay some workers?</a>


		 	<span id="comment_score_64967687" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967687); return false"><span class=opt>Score:</span>3</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Gravis+Zero">Gravis Zero</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Gravis+Zero">( 934156 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967687">		
		on Saturday November 23, 2024 @10:20PM (<span class="ind"></span><a rel="nofollow" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967687">#64967687</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967687"><p>If Amazon wants to have verify the safety of Rust functions, why don't they do it themselves? Is it to much to ask that businesses actually hire workers to do the work that they want done? I feel like this is rich man begging that the poor contribute to do work for free so that the rich man can afford another private jet.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967687">
<span class="ind"></span><a id="reply_link_64967687" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967687" onclick="D2.replyTo(64967687); return false;">Reply to This</a> 	<a rel="nofollow" href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a rel="nofollow" class="t slashpop" href="https://twitter.com/intent/tweet?text=Pay some workers?%20by%20Gravis Zero%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967687" target="_blank">twitter</a>
		<a rel="nofollow" class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967687" target="_blank">facebook</a>
	</div>
 <span class="ind"></span><a id="reply_link_64967687" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967687" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64967687"></div>

<ul id="group_64967687">
	<li id="hiddens_64967687" class="hide"></li>
</ul>

<ul id="commtree_64967687"><li id="tree_64967755" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64967755" class="commentstatus"></div>
<div id="comment_64967755" class="cw">
	<div id="comment_top_64967755" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967755" name="comment_link_64967755" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967755" onclick="return D2.setFocusComment(64967755)" >Re:Pay some workers?</a>


		 	<span id="comment_score_64967755" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967755); return false"><span class=opt>Score:</span>5</a>, Informative)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Tailhook">Tailhook</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Tailhook">( 98486 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967755">		
		on Saturday November 23, 2024 @11:30PM (<span class="ind"></span><a rel="nofollow" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967755">#64967755</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967755"><p><div class="quote"><p>Is it to much to ask</p></div><p>In this case, yes.  The skills involved are not easily hirable.  It's rarified talent: elite programmers that can comprehend "unsafe" and all of it's implications in the Rust language (which are subtle, despite what the prevailing peanut gallery around here thinks,) have a deep understanding of one or more platform (winapi, posix, etc.) APIs that unsafe is frequently used with, deep experience with one or more CPU architecture memory models and synchronization primitives, knowledge of and the ability to analyze compiler behavior, and other non-work-a-day "application" programmer caliber skills.  The cohort of people capable of all of this is small and already well engaged elsewhere.  Further, it's the sort of mentality that doesn't emerge with any frequency from employer provided education and training.

</p><p>By offering bounties, Amazon can leverage these skills beyond its own payroll.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967755">
<span class="ind"></span><a id="reply_link_64967755" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967755" onclick="D2.replyTo(64967755); return false;">Reply to This</a> <span class="ind"></span><a class="btn link" rel="nofollow" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=64967687" onclick="return D2.selectParent(64967687)">Parent</a> 	<a rel="nofollow" href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a rel="nofollow" class="t slashpop" href="https://twitter.com/intent/tweet?text=Re:Pay some workers?%20by%20Tailhook%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967755" target="_blank">twitter</a>
		<a rel="nofollow" class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967755" target="_blank">facebook</a>
	</div>
 <span class="ind"></span><a id="reply_link_64967755" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967755" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64967755"></div>

<ul id="group_64967755">
	<li id="hiddens_64967755" class="hide"></li>
</ul>

<ul id="commtree_64967755"><li id="tree_64967835" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64967835" class="commentstatus"></div>
<div id="comment_64967835" class="cw">
</div>

<div id="replyto_64967835"></div>

<ul id="group_64967835">
	<li id="hiddens_64967835" class="hide"></li>
</ul>

</li><li id="tree_64967879" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64967879" class="commentstatus"></div>
<div id="comment_64967879" class="cw">
	<div id="comment_top_64967879" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967879" name="comment_link_64967879" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967879" onclick="return D2.setFocusComment(64967879)" >Re:</a>


		 	<span id="comment_score_64967879" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967879); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967879"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967879"><p>Problem is, the people that can do this competently do not usually work for "bounties" (i.e. peanuts).</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967879">

</div>
</div>

<div id="replyto_64967879"></div>

<ul id="group_64967879">
	<li id="hiddens_64967879" class="hide"></li>
</ul>

</li><li id="tree_64967915" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64967915" class="commentstatus"></div>
<div id="comment_64967915" class="cw">
	<div id="comment_top_64967915" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967915" name="comment_link_64967915" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967915" onclick="return D2.setFocusComment(64967915)" >Re:</a>


		 	<span id="comment_score_64967915" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967915); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~misnohmer">misnohmer</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~misnohmer">( 1636461 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967915"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967915">Not easily hirable doesn't mean not hirable. Given sufficiently outrageous compensation and properly funded search, they could find and hire such experts.</div>
	</div>

	<div class="commentSub" id="comment_sub_64967915">

</div>
</div>

<div id="replyto_64967915"></div>

<ul id="group_64967915">
	<li id="hiddens_64967915" class="hide"></li>
</ul>

</li><li id="tree_64968111" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968111" class="commentstatus"></div>
<div id="comment_64968111" class="cw">
	<div id="comment_top_64968111" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968111" name="comment_link_64968111" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968111" onclick="return D2.setFocusComment(64968111)" >Re:</a>


		 	<span id="comment_score_64968111" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968111); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~test321">test321</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~test321">( 8891681 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968111"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968111"><p>Very easy to hire: make the bounty prize as a work contract.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968111">

</div>
</div>

<div id="replyto_64968111"></div>

<ul id="group_64968111">
	<li id="hiddens_64968111" class="hide"></li>
</ul>

</li><li id="tree_64968263" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968263" class="commentstatus"></div>
<div id="comment_64968263" class="cw">
	<div id="comment_top_64968263" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968263" name="comment_link_64968263" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968263" onclick="return D2.setFocusComment(64968263)" >FREE LABOR?</a>


		 	<span id="comment_score_64968263" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968263); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Busman85">Busman85</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Busman85">( 8485281 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968263"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968263"><p>So you volunteer your time to attempt to understand and solve problems for free. If you manage to find a solution that they deem good enough to use, then they pay you something for your effort.  Meanwhile everybody else who attempts gets nothing even if they succeed, only the one deemed best and first wins.</p><p>This is apposed to paying employees for their work until they eventually find solutions or give up.  Even outsourced workers are paid.</p><p>Academics will do so to get published and they'll try to find somethin<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968263">

</div>
</div>

<div id="replyto_64968263"></div>

<ul id="group_64968263">
	<li id="hiddens_64968263" class="hide"></li>
</ul>

</li><li id="hidestring_64967755"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23530125&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64967755">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li></ul></li><li id="tree_64967709" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64967709" class="commentstatus"></div>
<div id="comment_64967709" class="cw">
	<div id="comment_top_64967709" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967709" name="comment_link_64967709" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967709" onclick="return D2.setFocusComment(64967709)" >Who wrote those 7500 functions?</a>


		 	<span id="comment_score_64967709" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967709); return false"><span class=opt>Score:</span>3</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Fly+Swatter">Fly Swatter</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Fly+Swatter">( 30498 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967709">		
		on Saturday November 23, 2024 @10:36PM (<span class="ind"></span><a rel="nofollow" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967709">#64967709</a>)
		<small><a href="http://gqview.sourceforge.net/" title="http://gqview.sourceforge.net/" class="user_homepage_display">Homepage</a> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967709">I thought the point of Rust was all this safety, and now they are revealing that their standard library isn't even audited?
<br> <br>
-ffs, stop clowning around with community rules and do the work you claim you have done.</div>
	</div>

	<div class="commentSub" id="comment_sub_64967709">
<span class="ind"></span><a id="reply_link_64967709" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967709" onclick="D2.replyTo(64967709); return false;">Reply to This</a> 	<a rel="nofollow" href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a rel="nofollow" class="t slashpop" href="https://twitter.com/intent/tweet?text=Who wrote those 7500 functions?%20by%20Fly Swatter%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967709" target="_blank">twitter</a>
		<a rel="nofollow" class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967709" target="_blank">facebook</a>
	</div>
 <span class="ind"></span><a id="reply_link_64967709" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967709" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64967709"></div>

<ul id="group_64967709">
	<li id="hiddens_64967709" class="hide"></li>
</ul>

<ul id="commtree_64967709"><li id="tree_64967761" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64967761" class="commentstatus"></div>
<div id="comment_64967761" class="cw">
	<div id="comment_top_64967761" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967761" name="comment_link_64967761" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967761" onclick="return D2.setFocusComment(64967761)" >Re:</a>


		 	<span id="comment_score_64967761" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967761); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~TurboStar">TurboStar</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~TurboStar">( 712836 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967761"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967761"><p>Security and safety is a process, not a destination. How do you have a five digit id here and know nothing about technology?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967761">

</div>
</div>

<div id="replyto_64967761"></div>

<ul id="group_64967761">
	<li id="hiddens_64967761" class="hide"></li>
</ul>

<ul id="commtree_64967761"><li id="tree_64967779" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64967779" class="commentstatus"></div>
<div id="comment_64967779" class="cw">
	<div id="comment_top_64967779" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967779" name="comment_link_64967779" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967779" onclick="return D2.setFocusComment(64967779)" >Re:</a>


		 	<span id="comment_score_64967779" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967779); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Excelcia">Excelcia</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Excelcia">( 906188 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967779"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967779"><p>How do you have a five digit ID and don't recognize a pointed comment.</p><p>The gist is that Rust is no better than C if you have to worry about programming around unsafe primitives.  In fact it's far worse.  A perceived guard rail will tend to make programmers act with more disregard for security.</p><p>The better paradigm is to use C and program it safely.  Take away the pablum and guard rails and safety net and add a little healthy fear and you'll end up with better code.</p><p>Perceived safety is more dangerous than known<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967779">

</div>
</div>

<div id="replyto_64967779"></div>

<ul id="group_64967779">
	<li id="hiddens_64967779" class="hide"></li>
</ul>

<ul id="commtree_64967779"><li id="tree_64967787" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64967787" class="commentstatus"></div>
<div id="comment_64967787" class="cw">
	<div id="comment_top_64967787" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967787" name="comment_link_64967787" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967787" onclick="return D2.setFocusComment(64967787)" >Re:Who wrote those 7500 functions?</a>


		 	<span id="comment_score_64967787" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967787); return false"><span class=opt>Score:</span>5</a>, Funny)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~TurboStar">TurboStar</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~TurboStar">( 712836 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967787">		
		on Sunday November 24, 2024 @12:37AM (<span class="ind"></span><a rel="nofollow" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967787">#64967787</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967787"><p>It's difficult to take you seriously after you fail to count up to 6. Off-by-one errors are exactly the kind of mistakes C programmers make that are easily caught by Rust and most other languages. Maybe you're not as smart as you think you are.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967787">
<span class="ind"></span><a id="reply_link_64967787" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967787" onclick="D2.replyTo(64967787); return false;">Reply to This</a> <span class="ind"></span><a class="btn link" rel="nofollow" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=64967779" onclick="return D2.selectParent(64967779)">Parent</a> 	<a rel="nofollow" href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a rel="nofollow" class="t slashpop" href="https://twitter.com/intent/tweet?text=Re:Who wrote those 7500 functions?%20by%20TurboStar%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967787" target="_blank">twitter</a>
		<a rel="nofollow" class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967787" target="_blank">facebook</a>
	</div>
 <span class="ind"></span><a id="reply_link_64967787" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967787" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64967787"></div>

<ul id="group_64967787">
	<li id="hiddens_64967787" class="hide"></li>
</ul>

<ul id="commtree_64967787"><li id="tree_64967803" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64967803" class="commentstatus"></div>
<div id="comment_64967803" class="cw">
	<div id="comment_top_64967803" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967803" name="comment_link_64967803" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967803" onclick="return D2.setFocusComment(64967803)" >Re:</a>


		 	<span id="comment_score_64967803" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967803); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Excelcia">Excelcia</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Excelcia">( 906188 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967803"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967803"><p>If that's the kind of thing that Rust programmers depend on, then maybe it's a good thing they don't use C.  Maybe they can continue playing with duplo.</p><p>That's actually kind of a good analogy.  Writing complex software in Rust is like building a Millennium Falcon with duplo.  It's either going to be a simplistic approximation, or oversized, or dependent on pre-fabricated detail work pieces in the form of calling on libraries written in real languages.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967803">

</div>
</div>

<div id="replyto_64967803"></div>

<ul id="group_64967803">
	<li id="hiddens_64967803" class="hide"></li>
</ul>

<ul id="commtree_64967803"><li id="tree_64967845" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64967845" class="commentstatus"></div>
<div id="comment_64967845" class="cw">
	<div id="comment_top_64967845" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967845" name="comment_link_64967845" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967845" onclick="return D2.setFocusComment(64967845)" >Re:</a>


		 	<span id="comment_score_64967845" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967845); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~TurboStar">TurboStar</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~TurboStar">( 712836 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967845"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967845"><p>Maybe you should play with those duplos. You've not demonstrated the ability to count, which is paramount to making safe C code.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967845">

</div>
</div>

<div id="replyto_64967845"></div>

<ul id="group_64967845">
	<li id="hiddens_64967845" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64967883" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64967883" class="commentstatus"></div>
<div id="comment_64967883" class="cw">
	<div id="comment_top_64967883" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967883" name="comment_link_64967883" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967883" onclick="return D2.setFocusComment(64967883)" >Re:</a>


		 	<span id="comment_score_64967883" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967883); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967883"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967883"><p>That is the kind of mistake _bad_ C programmers make. But you know what? Bad coders write bad code in _any_ language.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967883">

</div>
</div>

<div id="replyto_64967883"></div>

<ul id="group_64967883">
	<li id="hiddens_64967883" class="hide"></li>
</ul>

<ul id="commtree_64967883"><li id="tree_64968233" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968233" class="commentstatus"></div>
<div id="comment_64968233" class="cw">
	<div id="comment_top_64968233" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968233" name="comment_link_64968233" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968233" onclick="return D2.setFocusComment(64968233)" >Re:</a>


		 	<span id="comment_score_64968233" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968233); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~nojayuk">nojayuk</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~nojayuk">( 567177 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968233"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968233"><p> <em> Bad coders write bad code in _any_ language.</em> </p><p>Fifty percent of all programmers writing production code today are worse than average programmers. Ninety percent of all programmers writing production code today think they're better than average and the other ten percent think they never make a mistake ever.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968233">

</div>
</div>

<div id="replyto_64968233"></div>

<ul id="group_64968233">
	<li id="hiddens_64968233" class="hide"></li>
</ul>

</li><li id="tree_64968359" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968359" class="commentstatus"></div>
<div id="comment_64968359" class="cw">
	<div id="comment_top_64968359" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968359" name="comment_link_64968359" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968359" onclick="return D2.setFocusComment(64968359)" >Re: Who wrote those 7500 functions?</a>


		 	<span id="comment_score_64968359" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968359); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Jeremi">Jeremi</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Jeremi">( 14640 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968359"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968359"><p>Yes, bad programmers gonna write bad code.</p><p>The question is, what happens after that?</p><p>Does the bad code result in a compile-time error, forcing the bad programmer to fix his mistake before he can continue, or will it result in a subtle runtime bug that alienates users and then costs the company weeks of sqa and developer time to find and fix?</p><p>Sane people prefer the former.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968359">

</div>
</div>

<div id="replyto_64968359"></div>

<ul id="group_64968359">
	<li id="hiddens_64968359" class="hide"></li>
</ul>

<ul id="commtree_64968359"><li id="tree_64968583" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968583" class="commentstatus"></div>
<div id="comment_64968583" class="cw">
	<div id="comment_top_64968583" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968583" name="comment_link_64968583" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968583" onclick="return D2.setFocusComment(64968583)" >Re:</a>


		 	<span id="comment_score_64968583" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968583); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968583"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968583"><p>You seem to be under the illusion that bad compilers can find logical errors and the like. They cannot.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968583">

</div>
</div>

<div id="replyto_64968583"></div>

<ul id="group_64968583">
	<li id="hiddens_64968583" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64968649" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968649" class="commentstatus"></div>
<div id="comment_64968649" class="cw">
	<div id="comment_top_64968649" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968649" name="comment_link_64968649" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968649" onclick="return D2.setFocusComment(64968649)" >Re:</a>


		 	<span id="comment_score_64968649" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968649); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~ShanghaiBill">ShanghaiBill</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~ShanghaiBill">( 739463 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968649"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968649"><p><div class="quote"><p>Bad coders write bad code in _any_ language.</p></div><p>With C, bad programmers write buggy code.</p><p>With Rust, bad programmers are unproductive.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968649">

</div>
</div>

<div id="replyto_64968649"></div>

<ul id="group_64968649">
	<li id="hiddens_64968649" class="hide"></li>
</ul>

<ul id="commtree_64968649"><li id="tree_64968715" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968715" class="commentstatus"></div>
<div id="comment_64968715" class="cw">
	<div id="comment_top_64968715" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968715" name="comment_link_64968715" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968715" onclick="return D2.setFocusComment(64968715)" >Re:</a>


		 	<span id="comment_score_64968715" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968715); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968715"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968715"><p>You wish. Well, maybe there will be some effect because rust is hard to learn. Other than that, most security bugs these days are not things Rust could have prevented.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968715">

</div>
</div>

<div id="replyto_64968715"></div>

<ul id="group_64968715">
	<li id="hiddens_64968715" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64968123" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64968123" class="commentstatus"></div>
<div id="comment_64968123" class="cw">
</div>

<div id="replyto_64968123"></div>

<ul id="group_64968123">
	<li id="hiddens_64968123" class="hide"></li>
</ul>

<ul id="commtree_64968123"><li id="tree_64968269" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968269" class="commentstatus"></div>
<div id="comment_64968269" class="cw">
	<div id="comment_top_64968269" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968269" name="comment_link_64968269" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968269" onclick="return D2.setFocusComment(64968269)" >Re:</a>


		 	<span id="comment_score_64968269" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968269); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Phillip2">Phillip2</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Phillip2">( 203612 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968269"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968269"><p>The borrow-checker will not stop this. However, access to arrays by index is pretty unusual in Rust. To sum the elements in an array you would use an iterator.</p><p>So, a language feature does avoid that class of errors in many common situations.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968269">

</div>
</div>

<div id="replyto_64968269"></div>

<ul id="group_64968269">
	<li id="hiddens_64968269" class="hide"></li>
</ul>

<ul id="commtree_64968269"><li id="tree_64969119" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64969119" class="commentstatus"></div>
<div id="comment_64969119" class="cw">
</div>

<div id="replyto_64969119"></div>

<ul id="group_64969119">
	<li id="hiddens_64969119" class="hide"></li>
</ul>

</li><li id="hidestring_64968269"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23530125&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64968269">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64968401" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968401" class="commentstatus"></div>
<div id="comment_64968401" class="cw">
	<div id="comment_top_64968401" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968401" name="comment_link_64968401" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968401" onclick="return D2.setFocusComment(64968401)" >Re:</a>


		 	<span id="comment_score_64968401" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968401); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~RoccamOccam">RoccamOccam</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~RoccamOccam">( 953524 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968401"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968401">let data = [1, 2, 3, 4];<br>
let total: u32 = data.iter().sum();</div>
	</div>

	<div class="commentSub" id="comment_sub_64968401">

</div>
</div>

<div id="replyto_64968401"></div>

<ul id="group_64968401">
	<li id="hiddens_64968401" class="hide"></li>
</ul>

</li><li id="tree_64968665" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968665" class="commentstatus"></div>
<div id="comment_64968665" class="cw">
	<div id="comment_top_64968665" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968665" name="comment_link_64968665" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968665" onclick="return D2.setFocusComment(64968665)" >Re:</a>


		 	<span id="comment_score_64968665" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968665); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~ShanghaiBill">ShanghaiBill</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~ShanghaiBill">( 739463 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968665"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968665"><p><div class="quote"><p>you "can't make bugs in Rust" fanbois are just full of shit.</p></div><p>Rust programs can have bugs.</p><p>But certain classes of bugs, including memory errors and race conditions, are much less common in Rust.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968665">

</div>
</div>

<div id="replyto_64968665"></div>

<ul id="group_64968665">
	<li id="hiddens_64968665" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64968845" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968845" class="commentstatus"></div>
<div id="comment_64968845" class="cw">
	<div id="comment_top_64968845" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968845" name="comment_link_64968845" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968845" onclick="return D2.setFocusComment(64968845)" >Re:</a>


		 	<span id="comment_score_64968845" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968845); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Bu11etmagnet">Bu11etmagnet</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Bu11etmagnet">( 1071376 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968845"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968845"><p>&gt; Maybe you're not as smart as you think you are.</p><p><a href="https://www.youtube.com/watch?v=g9pBpHL6vxw" title="youtube.com">https://www.youtube.com/watch?...</a> [youtube.com]</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968845">

</div>
</div>

<div id="replyto_64968845"></div>

<ul id="group_64968845">
	<li id="hiddens_64968845" class="hide"></li>
</ul>

</li><li id="hidestring_64967787"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23530125&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64967787">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64967881" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64967881" class="commentstatus"></div>
<div id="comment_64967881" class="cw">
	<div id="comment_top_64967881" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967881" name="comment_link_64967881" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967881" onclick="return D2.setFocusComment(64967881)" >Re:</a>


		 	<span id="comment_score_64967881" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967881); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967881"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967881"><p>Indeed. Probably the only reason we do not see widespread problems with Rust is because it is so rarely used at all.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967881">

</div>
</div>

<div id="replyto_64967881"></div>

<ul id="group_64967881">
	<li id="hiddens_64967881" class="hide"></li>
</ul>

<ul id="commtree_64967881"><li id="tree_64968155" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64968155" class="commentstatus"></div>
<div id="comment_64968155" class="cw">
</div>

<div id="replyto_64968155"></div>

<ul id="group_64968155">
	<li id="hiddens_64968155" class="hide"></li>
</ul>

<ul id="commtree_64968155"><li id="tree_64968573" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968573" class="commentstatus"></div>
<div id="comment_64968573" class="cw">
	<div id="comment_top_64968573" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968573" name="comment_link_64968573" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968573" onclick="return D2.setFocusComment(64968573)" >Re:</a>


		 	<span id="comment_score_64968573" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968573); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~gweihir">gweihir</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~gweihir">( 88907 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968573"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968573"><p>I think you need to work on your sarcasm...</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968573">

</div>
</div>

<div id="replyto_64968573"></div>

<ul id="group_64968573">
	<li id="hiddens_64968573" class="hide"></li>
</ul>

</li></ul></li><li id="hidestring_64967881"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23530125&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64967881">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64968071" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968071" class="commentstatus"></div>
<div id="comment_64968071" class="cw">
	<div id="comment_top_64968071" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968071" name="comment_link_64968071" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968071" onclick="return D2.setFocusComment(64968071)" >Re:</a>


		 	<span id="comment_score_64968071" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968071); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Phillip2">Phillip2</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Phillip2">( 203612 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968071"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968071"><p>That is why Rust requires the use of "unsafe". The guard rails do not just magically disappear you have to request them.</p><p>And the whole point of this effort is to make sure that those parts of the standard library that use unsafe, they do have those guard rails.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968071">

</div>
</div>

<div id="replyto_64968071"></div>

<ul id="group_64968071">
	<li id="hiddens_64968071" class="hide"></li>
</ul>

<ul id="commtree_64968071"><li id="tree_64968159" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64968159" class="commentstatus"></div>
<div id="comment_64968159" class="cw">
</div>

<div id="replyto_64968159"></div>

<ul id="group_64968159">
	<li id="hiddens_64968159" class="hide"></li>
</ul>

<ul id="commtree_64968159"><li id="tree_64968285" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968285" class="commentstatus"></div>
<div id="comment_64968285" class="cw">
	<div id="comment_top_64968285" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968285" name="comment_link_64968285" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968285" onclick="return D2.setFocusComment(64968285)" >Re:</a>


		 	<span id="comment_score_64968285" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968285); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Phillip2">Phillip2</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Phillip2">( 203612 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968285"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968285"><p>Inside an unsafe block you can perform operations that you are disallowed elsewhere, so this is why they want to provide formal verification inside these blocks in the standard library for use in CI environments.</p><p>That is an advance. The problem is that formal verification is quite a lot of work to set up and also requires quite a lot of CPU. Otherwise, it would be good to build it into the language and the compiler. But for now having those tools inside the standard library would be a good thing. Outside the<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968285">

</div>
</div>

<div id="replyto_64968285"></div>

<ul id="group_64968285">
	<li id="hiddens_64968285" class="hide"></li>
</ul>

</li></ul></li><li id="hidestring_64968071"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23530125&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64968071">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64968247" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968247" class="commentstatus"></div>
<div id="comment_64968247" class="cw">
	<div id="comment_top_64968247" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968247" name="comment_link_64968247" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968247" onclick="return D2.setFocusComment(64968247)" >Re:</a>


		 	<span id="comment_score_64968247" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968247); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~sinkskinkshrieks">sinkskinkshrieks</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~sinkskinkshrieks">( 6952954 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968247"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968247">You're making a specious religious argument using false equivalency. Perhaps if you looked at the value of each deeply, dispassionately, and honestly, and you'd work to advance the art without particular Dunning-Kruger self-righteous rush to judgement.</div>
	</div>

	<div class="commentSub" id="comment_sub_64968247">

</div>
</div>

<div id="replyto_64968247"></div>

<ul id="group_64968247">
	<li id="hiddens_64968247" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64968107" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968107" class="commentstatus"></div>
<div id="comment_64968107" class="cw">
	<div id="comment_top_64968107" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968107" name="comment_link_64968107" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968107" onclick="return D2.setFocusComment(64968107)" >Not actually safer you say? Huh, imagine that.</a>


		 	<span id="comment_score_64968107" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968107); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~buck-yar">buck-yar</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~buck-yar">( 164658 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968107"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968107">Typical Rust proponent, aggressive, hostile, ad hominem attacks. Maybe Rust would be safer if their programmers weren't making it woke. <a href="https://github.com/rust-lang/rust/pull/92469" title="github.com">https://github.com/rust-lang/r...</a> [github.com]</div>
	</div>

	<div class="commentSub" id="comment_sub_64968107">

</div>
</div>

<div id="replyto_64968107"></div>

<ul id="group_64968107">
	<li id="hiddens_64968107" class="hide"></li>
</ul>

<ul id="commtree_64968107"><li id="tree_64968169" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968169" class="commentstatus"></div>
<div id="comment_64968169" class="cw">
	<div id="comment_top_64968169" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968169" name="comment_link_64968169" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968169" onclick="return D2.setFocusComment(64968169)" >Re:</a>


		 	<span id="comment_score_64968169" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968169); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Phillip2">Phillip2</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Phillip2">( 203612 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968169"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968169"><p>Alas, this is pretty much what slashdot and large parts of the internet have become aggressive, hostile and full of ad hominem. I am sure that it used to be better in the past, but perhaps that is me getting old.</p><p>The commit you referenced was for checking there is any accidental leetspeak in the Rust core. In practice this just avoided using a Javaism. How is this "woke" in some sense?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968169">

</div>
</div>

<div id="replyto_64968169"></div>

<ul id="group_64968169">
	<li id="hiddens_64968169" class="hide"></li>
</ul>

<ul id="commtree_64968169"><li id="tree_64968351" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64968351" class="commentstatus"></div>
<div id="comment_64968351" class="cw">
</div>

<div id="replyto_64968351"></div>

<ul id="group_64968351">
	<li id="hiddens_64968351" class="hide"></li>
</ul>

<ul id="commtree_64968351"><li id="tree_64968383" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968383" class="commentstatus"></div>
<div id="comment_64968383" class="cw">
	<div id="comment_top_64968383" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968383" name="comment_link_64968383" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968383" onclick="return D2.setFocusComment(64968383)" >Re:</a>


		 	<span id="comment_score_64968383" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968383); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Phillip2">Phillip2</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Phillip2">( 203612 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968383"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968383"><p>Yes, both "babe" and "cafe" are a words. That is what they are looking for.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968383">

</div>
</div>

<div id="replyto_64968383"></div>

<ul id="group_64968383">
	<li id="hiddens_64968383" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64968421" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968421" class="commentstatus"></div>
<div id="comment_64968421" class="cw">
	<div id="comment_top_64968421" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968421" name="comment_link_64968421" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968421" onclick="return D2.setFocusComment(64968421)" >Re:</a>


		 	<span id="comment_score_64968421" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968421); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~angel'o'sphere">angel'o'sphere</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~angel'o'sphere">( 80593 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968421"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968421"><p>That is not surprising, as we have to deal with so many people who do not know what an Ad Hominem is.</p><p>You feel "insulted"? You shouldn't! You should feel dumbfolded.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968421">

</div>
</div>

<div id="replyto_64968421"></div>

<ul id="group_64968421">
	<li id="hiddens_64968421" class="hide"></li>
</ul>

</li><li id="hidestring_64968169"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23530125&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64968169">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64968345" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968345" class="commentstatus"></div>
<div id="comment_64968345" class="cw">
	<div id="comment_top_64968345" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968345" name="comment_link_64968345" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968345" onclick="return D2.setFocusComment(64968345)" >Re:</a>


		 	<span id="comment_score_64968345" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968345); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~gunnarstahl">gunnarstahl</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~gunnarstahl">( 95240 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968345"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968345"><p><div class="quote"><p>Typical Rust proponent, aggressive, hostile, ad hominem attacks. Maybe Rust would be safer if their programmers weren't making it woke. <a href="https://github.com/rust-lang/rust/pull/92469" title="github.com">https://github.com/rust-lang/r...<span class="substr"> </span></a> [github.com] </p></div><p>The commit you mentioned is actually a good one. I tried imagining me using 0xcafebabe as a hex string, but this somehow doesn't work. Why would I ever use hex-words in code? And regardless of its origin it is a good thing to remove such stuff from a codebase since it has no point in being there in the first place.</p><p>Woke in itself is a far greater danger than people tend to realize. Take a look at the Stallmann-report and what and who caused it, it is directly linked to the people behind the covenant code of</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968345">

</div>
</div>

<div id="replyto_64968345"></div>

<ul id="group_64968345">
	<li id="hiddens_64968345" class="hide"></li>
</ul>

<ul id="commtree_64968345"><li id="tree_64968363" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968363" class="commentstatus"></div>
<div id="comment_64968363" class="cw">
	<div id="comment_top_64968363" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968363" name="comment_link_64968363" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968363" onclick="return D2.setFocusComment(64968363)" >Re:</a>


		 	<span id="comment_score_64968363" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968363); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Entrope">Entrope</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Entrope">( 68843 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968363"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968363"><p>The commit is actually rather dumb.  Using monotonic sequences like 0x12345678 has a higher rate of false matches.  For example, 0x12345678 has the same difference between successive bytes (0x22 = 34 decimal), so it is more likely to occur by coincidence.  Three of the bytes are also normal printing characters.</p><p>If you cannot imagine yourself using hex that spells words, well, that shows a failure of imagination and limited thinking on your part rather than the original code being bad.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968363">

</div>
</div>

<div id="replyto_64968363"></div>

<ul id="group_64968363">
	<li id="hiddens_64968363" class="hide"></li>
</ul>

<ul id="commtree_64968363"><li id="tree_64968537" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968537" class="commentstatus"></div>
<div id="comment_64968537" class="cw">
	<div id="comment_top_64968537" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968537" name="comment_link_64968537" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968537" onclick="return D2.setFocusComment(64968537)" >Re:</a>


		 	<span id="comment_score_64968537" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968537); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~gunnarstahl">gunnarstahl</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~gunnarstahl">( 95240 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968537"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968537"><p><div class="quote"><p>The commit is actually rather dumb.  Using monotonic sequences like 0x12345678 has a higher rate of false matches.  For example, 0x12345678 has the same difference between successive bytes (0x22 = 34 decimal), so it is more likely to occur by coincidence.  Three of the bytes are also normal printing characters.</p><p>If you cannot imagine yourself using hex that spells words, well, that shows a failure of imagination and limited thinking on your part rather than the original code being bad.</p></div><p>While the first part of your explanation is a good start for a discussion, I don't get why you feel the need to end it with an ad hominem attack. Which immediately disgraces the validity of your initial argument and kills every possibility of a useful discussion.</p><p>I don't imagine myself using hexwords not because I lack imagination but because I am very reluctant to use profanity in code. It is like trying to read a good technical documentation that constantly uses smear words or tries to drive a political ag<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968537">

</div>
</div>

<div id="replyto_64968537"></div>

<ul id="group_64968537">
	<li id="hiddens_64968537" class="hide"></li>
</ul>

<ul id="commtree_64968537"><li id="tree_64968561" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968561" class="commentstatus"></div>
<div id="comment_64968561" class="cw">
	<div id="comment_top_64968561" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968561" name="comment_link_64968561" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968561" onclick="return D2.setFocusComment(64968561)" >Re:</a>


		 	<span id="comment_score_64968561" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968561); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Entrope">Entrope</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Entrope">( 68843 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968561"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968561"><p>Stupid people should be called out so that they realize when they are being stupid.  They're stupid, and will not realize it otherwise.</p><p>None of these words are profane.  The point of these magic values is not to write them multiple times in code.  Guess what: You are still stupid.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968561">

</div>
</div>

<div id="replyto_64968561"></div>

<ul id="group_64968561">
	<li id="hiddens_64968561" class="hide"></li>
</ul>

<ul id="commtree_64968561"><li id="tree_64968643" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968643" class="commentstatus"></div>
<div id="comment_64968643" class="cw">
	<div id="comment_top_64968643" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968643" name="comment_link_64968643" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968643" onclick="return D2.setFocusComment(64968643)" >Re:</a>


		 	<span id="comment_score_64968643" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968643); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~gunnarstahl">gunnarstahl</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~gunnarstahl">( 95240 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968643"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968643"><p>You realize that by using ad hominem you are actually the one who calls himself out as the stupid one?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968643">

</div>
</div>

<div id="replyto_64968643"></div>

<ul id="group_64968643">
	<li id="hiddens_64968643" class="hide"></li>
</ul>

<ul id="commtree_64968643"><li id="tree_64968747" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968747" class="commentstatus"></div>
<div id="comment_64968747" class="cw">
	<div id="comment_top_64968747" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968747" name="comment_link_64968747" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968747" onclick="return D2.setFocusComment(64968747)" >Re:</a>


		 	<span id="comment_score_64968747" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968747); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Entrope">Entrope</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Entrope">( 68843 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968747"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968747"><p>That is something a stupid parent would tell a stupid child.  It's too bad that you don't understand why it is entirely wrong.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968747">

</div>
</div>

<div id="replyto_64968747"></div>

<ul id="group_64968747">
	<li id="hiddens_64968747" class="hide"></li>
</ul>

<ul id="commtree_64968747"><li id="tree_64968807" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968807" class="commentstatus"></div>
<div id="comment_64968807" class="cw">
	<div id="comment_top_64968807" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968807" name="comment_link_64968807" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968807" onclick="return D2.setFocusComment(64968807)" >Re:</a>


		 	<span id="comment_score_64968807" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968807); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~gunnarstahl">gunnarstahl</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~gunnarstahl">( 95240 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968807"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968807"><p><div class="quote"><p>That is something a stupid parent would tell a stupid child.  It's too bad that you don't understand why it is entirely wrong.</p></div><p>Since you are in no way interested in a reasonable talk about the real issue at hand I refrain from this discussion, as there is nothing to be gained.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968807">

</div>
</div>

<div id="replyto_64968807"></div>

<ul id="group_64968807">
	<li id="hiddens_64968807" class="hide"></li>
</ul>

</li><li id="tree_64968847" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968847" class="commentstatus"></div>
<div id="comment_64968847" class="cw">
	<div id="comment_top_64968847" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968847" name="comment_link_64968847" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968847" onclick="return D2.setFocusComment(64968847)" >Re:</a>


		 	<span id="comment_score_64968847" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968847); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Entrope">Entrope</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Entrope">( 68843 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968847"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968847"><p>I am interested in reasonable talk. I am not interested in pretending a string of vacuous comments is anything else in order to coddle a fragile fool who thinks "cafe babe" and "dead food" are profanity.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968847">

</div>
</div>

<div id="replyto_64968847"></div>

<ul id="group_64968847">
	<li id="hiddens_64968847" class="hide"></li>
</ul>

</li><li id="tree_64968905" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968905" class="commentstatus"></div>
<div id="comment_64968905" class="cw">
	<div id="comment_top_64968905" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968905" name="comment_link_64968905" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968905" onclick="return D2.setFocusComment(64968905)" >Re:</a>


		 	<span id="comment_score_64968905" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968905); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~gunnarstahl">gunnarstahl</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~gunnarstahl">( 95240 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968905"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968905"><p><div class="quote"><p>I am interested in reasonable talk. I am not interested in pretending a string of vacuous comments is anything else in order to coddle a fragile fool who thinks "cafe babe" and "dead food" are profanity.</p></div><p>You are kidding, right? Every single comment you made was the complete opposite of "reasonable talk". And in this one you still go down and call me a "fragile fool". Where exactly is the "reasonable talk"?</p><p>There were many possibilities for engaging in "reasonable talk". Initially I made the point of showing the origin of the 0xcafebabe. Which in itself is quite interesting. I also pointed out that I deem Wokeness as a dangerous thing. Also something on can have a reasonable talk about. I said that I don't li<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968905">

</div>
</div>

<div id="replyto_64968905"></div>

<ul id="group_64968905">
	<li id="hiddens_64968905" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li><li id="tree_64968205" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968205" class="commentstatus"></div>
<div id="comment_64968205" class="cw">
	<div id="comment_top_64968205" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968205" name="comment_link_64968205" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968205" onclick="return D2.setFocusComment(64968205)" >Re:</a>


		 	<span id="comment_score_64968205" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968205); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~drinkypoo">drinkypoo</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~drinkypoo">( 153816 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968205"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968205"><p><div class="quote"><p>Security and safety is a process, not a destination.</p></div><p>While this is true, it's also not a reasonable answer to the GP comment, as it doesn't address the Rust devs (and various other proponents) claiming that Rust has reached a point which it hasn't.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968205">

</div>
</div>

<div id="replyto_64968205"></div>

<ul id="group_64968205">
	<li id="hiddens_64968205" class="hide"></li>
</ul>

</li><li id="tree_64968239" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968239" class="commentstatus"></div>
<div id="comment_64968239" class="cw">
	<div id="comment_top_64968239" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968239" name="comment_link_64968239" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968239" onclick="return D2.setFocusComment(64968239)" >Re:</a>


		 	<span id="comment_score_64968239" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968239); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~sinkskinkshrieks">sinkskinkshrieks</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~sinkskinkshrieks">( 6952954 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968239"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968239">Being early means early, and that's it. No halo was included.</div>
	</div>

	<div class="commentSub" id="comment_sub_64968239">

</div>
</div>

<div id="replyto_64968239"></div>

<ul id="group_64968239">
	<li id="hiddens_64968239" class="hide"></li>
</ul>

</li><li id="tree_64968543" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968543" class="commentstatus"></div>
<div id="comment_64968543" class="cw">
	<div id="comment_top_64968543" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968543" name="comment_link_64968543" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968543" onclick="return D2.setFocusComment(64968543)" >Re:</a>


		 	<span id="comment_score_64968543" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968543); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~sjames">sjames</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~sjames">( 1099 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968543"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968543"><p>For your safety, we have added this steel safety rail to the termite ridden observation platform.</p><p>Next week: Man falls to his death. He was found at the bottom of the canyon still clutching the steel safety rail.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968543">

</div>
</div>

<div id="replyto_64968543"></div>

<ul id="group_64968543">
	<li id="hiddens_64968543" class="hide"></li>
</ul>

<ul id="commtree_64968543"><li id="tree_64968889" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968889" class="commentstatus"></div>
<div id="comment_64968889" class="cw">
	<div id="comment_top_64968889" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968889" name="comment_link_64968889" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968889" onclick="return D2.setFocusComment(64968889)" >Re:</a>


		 	<span id="comment_score_64968889" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968889); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Phillip2">Phillip2</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Phillip2">( 203612 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968889"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968889"><p>This is why safety rails are not on their own enough. You also need building standards and regular inspections.</p><p>Translating the analogy to coding: test sets, continuous integration and, maybe, formal verification of the bits that you can't do otherwise.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968889">

</div>
</div>

<div id="replyto_64968889"></div>

<ul id="group_64968889">
	<li id="hiddens_64968889" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64967769" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64967769" class="commentstatus"></div>
<div id="comment_64967769" class="cw">
	<div id="comment_top_64967769" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967769" name="comment_link_64967769" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967769" onclick="return D2.setFocusComment(64967769)" >Re:Who wrote those 7500 functions?</a>


		 	<span id="comment_score_64967769" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967769); return false"><span class=opt>Score:</span>4</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~ArmoredDragon">ArmoredDragon</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~ArmoredDragon">( 3450605 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967769">		
		on Saturday November 23, 2024 @11:54PM (<span class="ind"></span><a rel="nofollow" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967769">#64967769</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967769"><p>These are functions already marked as being unsafe, meaning they already can be misused, and that's ok. Say for example Vec::get_unchecked(), which lets you get a value from a specified index without doing a bounds check. The compiler leaves it up to the programmer to ensure that they aren't doing out of bounds access, and no sane programmer would do this unless there was really some compelling reason to (which is rare, hence in the Rust community any use of unsafe generally carries whiff of code stench with it.)</p><p>Some unsafe functions are less obvious in the way they may be misused compared to a bounds check, like say std::mem::transmute. A lot of thought about that already has been done, so what's needed is a bit more creativity to find ways that these functions can be automatically checked for soundness (with some existing tooling, like say clippy or plain ol' check.) They specifically enumerate 13 of them, with transmute being the first. Not much different from the reasoning behind bug bounties: Anybody can make a security or safety scheme that they themselves can't break. Making one that nobody can break needs a much broader set of input that any one team is unlikely to deliver.</p><p>This is exactly why sites like bugcrowd exist. Though somebody has to fund it. This is exactly what they're doing. I actually reported a vulnerability in Windows Hello last year that I found somewhat on accident, but probably wouldn't have bothered reporting if there was no bounty involved because that required actually building a proof of concept exploit kit (which I wrote in rust, by the way) just to even get credit for the CVE.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967769">
<span class="ind"></span><a id="reply_link_64967769" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967769" onclick="D2.replyTo(64967769); return false;">Reply to This</a> <span class="ind"></span><a class="btn link" rel="nofollow" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=64967709" onclick="return D2.selectParent(64967709)">Parent</a> 	<a rel="nofollow" href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a rel="nofollow" class="t slashpop" href="https://twitter.com/intent/tweet?text=Re:Who wrote those 7500 functions?%20by%20ArmoredDragon%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967769" target="_blank">twitter</a>
		<a rel="nofollow" class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23530125&cid=64967769" target="_blank">facebook</a>
	</div>
 <span class="ind"></span><a id="reply_link_64967769" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64967769" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64967769"></div>

<ul id="group_64967769">
	<li id="hiddens_64967769" class="hide"></li>
</ul>

</li><li id="tree_64967805" class="comment hidden"><span class="ind"></span>
<div id="comment_status_64967805" class="commentstatus"></div>
<div id="comment_64967805" class="cw">
</div>

<div id="replyto_64967805"></div>

<ul id="group_64967805">
	<li id="hiddens_64967805" class="hide"></li>
</ul>

<ul id="commtree_64967805"><li id="tree_64968899" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968899" class="commentstatus"></div>
<div id="comment_64968899" class="cw">
	<div id="comment_top_64968899" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968899" name="comment_link_64968899" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968899" onclick="return D2.setFocusComment(64968899)" >Re:</a>


		 	<span id="comment_score_64968899" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968899); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Phillip2">Phillip2</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Phillip2">( 203612 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968899"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968899"><p>The statement "if used incorrectly" applies to those sections of Rust which are marked as unsafe. But they are marked as unsafe and they are only a percentage of the whole library, so presenting a smaller surface for formal verification outside the normal compiler checks than otherwise.</p><p>That isn't true in C/C++.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968899">

</div>
</div>

<div id="replyto_64968899"></div>

<ul id="group_64968899">
	<li id="hiddens_64968899" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64967873" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64967873" class="commentstatus"></div>
<div id="comment_64967873" class="cw">
	<div id="comment_top_64967873" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967873" name="comment_link_64967873" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967873" onclick="return D2.setFocusComment(64967873)" >Re:</a>


		 	<span id="comment_score_64967873" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967873); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Waffle+Iron">Waffle Iron</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Waffle+Iron">( 339739 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967873"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967873"><p><div class="quote"><p>I thought the point of Rust was all this safety, and now they are revealing that their standard library isn't even audited?</p> </div><p>At least they're trying.</p><p>Meanwhile, C just gave up and let footguns like strncpy() fester in their standard library for half a century.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64967873">

</div>
</div>

<div id="replyto_64967873"></div>

<ul id="group_64967873">
	<li id="hiddens_64967873" class="hide"></li>
</ul>

<ul id="commtree_64967873"><li id="tree_64968119" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968119" class="commentstatus"></div>
<div id="comment_64968119" class="cw">
	<div id="comment_top_64968119" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968119" name="comment_link_64968119" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968119" onclick="return D2.setFocusComment(64968119)" >Re: Who wrote those 7500 functions?</a>


		 	<span id="comment_score_64968119" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968119); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~fluffernutter">fluffernutter</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~fluffernutter">( 1411889 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968119"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968119">Good think they had proper computer Science programs to mitigate that.</div>
	</div>

	<div class="commentSub" id="comment_sub_64968119">

</div>
</div>

<div id="replyto_64968119"></div>

<ul id="group_64968119">
	<li id="hiddens_64968119" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64967909" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64967909" class="commentstatus"></div>
<div id="comment_64967909" class="cw">
	<div id="comment_top_64967909" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64967909" name="comment_link_64967909" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64967909" onclick="return D2.setFocusComment(64967909)" >Re:</a>


		 	<span id="comment_score_64967909" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64967909); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Waccoon">Waccoon</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Waccoon">( 1186667 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64967909"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64967909">Welcome to marketing.  Everything needs a "branding experience" these days.</div>
	</div>

	<div class="commentSub" id="comment_sub_64967909">

</div>
</div>

<div id="replyto_64967909"></div>

<ul id="group_64967909">
	<li id="hiddens_64967909" class="hide"></li>
</ul>

</li><li id="tree_64968067" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968067" class="commentstatus"></div>
<div id="comment_64968067" class="cw">
	<div id="comment_top_64968067" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968067" name="comment_link_64968067" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968067" onclick="return D2.setFocusComment(64968067)" >Re:</a>


		 	<span id="comment_score_64968067" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968067); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Phillip2">Phillip2</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Phillip2">( 203612 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968067"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968067"><p>Verified not audited.</p><p>This is about producing or using tools that can formally verify those parts of the code that the normal type system cannot, and integrated these tools into the standard CI system for the rust standard library.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968067">

</div>
</div>

<div id="replyto_64968067"></div>

<ul id="group_64968067">
	<li id="hiddens_64968067" class="hide"></li>
</ul>

</li><li id="tree_64968921" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968921" class="commentstatus"></div>
<div id="comment_64968921" class="cw">
	<div id="comment_top_64968921" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968921" name="comment_link_64968921" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968921" onclick="return D2.setFocusComment(64968921)" >Re:</a>


		 	<span id="comment_score_64968921" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968921); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~flux">flux</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~flux">( 5274 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968921"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968921"><p>Even if they were audited, are they formally verified? Probably not. Are the C library function they may end up calling in many cases formally verified? Most certainly not. Though, you could be using CompCert for compiling them, but it doesn't stop you from compiling garbage.</p><p>Audition isn't a silver bullet&#226;"and actually formal verification isn't either, if you are verifying the wrong thing. But the bar for formal verification is a very high and the results increase the trustworthiness of the code by a l<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968921">

</div>
</div>

<div id="replyto_64968921"></div>

<ul id="group_64968921">
	<li id="hiddens_64968921" class="hide"></li>
</ul>

</li><li id="hidestring_64967709"><noscript><b class='more'><span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=23530125&amp;threshold=-1&amp;commentsort=0&amp;mode=thread&amp;pid=64967709">1 reply</a> beneath your current threshold.</b></noscript></li></ul></li><li id="tree_64968125" class="comment full contain"><span class="ind"></span>
<div id="comment_status_64968125" class="commentstatus"></div>
<div id="comment_64968125" class="cw">
	<div id="comment_top_64968125" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968125" name="comment_link_64968125" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968125" onclick="return D2.setFocusComment(64968125)" >Reminder</a>


		 	<span id="comment_score_64968125" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968125); return false"><span class=opt>Score:</span>4</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~fluffernutter">fluffernutter</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~fluffernutter">( 1411889 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968125">		
		on Sunday November 24, 2024 @06:33AM (<span class="ind"></span><a rel="nofollow" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968125">#64968125</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968125">Let rust be a reminder to all skilled programmers that companies would rather develop an entirely new language than pay you what you are worth to them.  Pretty much sums up the entire IT industry to date as far as i have witnessed.</div>
	</div>

	<div class="commentSub" id="comment_sub_64968125">
<span class="ind"></span><a id="reply_link_64968125" class="btn link" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=Reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64968125" onclick="D2.replyTo(64968125); return false;">Reply to This</a> 	<a rel="nofollow" href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a rel="nofollow" class="t slashpop" href="https://twitter.com/intent/tweet?text=Reminder%20by%20fluffernutter%20%40slashdot%20https://developers.slashdot.org/comments.pl?sid=23530125&cid=64968125" target="_blank">twitter</a>
		<a rel="nofollow" class="f slashpop" href="https://www.facebook.com/sharer/sharer.php?u=https://developers.slashdot.org/comments.pl?sid=23530125&cid=64968125" target="_blank">facebook</a>
	</div>
 <span class="ind"></span><a id="reply_link_64968125" title="Flag this comment as Inappropriate" class="ui-icon flag fright" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=flag&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=64968125" onclick="return false;">Flag as Inappropriate</a>
</div>
</div>

<div id="replyto_64968125"></div>

<ul id="group_64968125">
	<li id="hiddens_64968125" class="hide"></li>
</ul>

<ul id="commtree_64968125"><li id="tree_64968379" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968379" class="commentstatus"></div>
<div id="comment_64968379" class="cw">
	<div id="comment_top_64968379" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968379" name="comment_link_64968379" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968379" onclick="return D2.setFocusComment(64968379)" >Re: Reminder</a>


		 	<span id="comment_score_64968379" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968379); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~Jeremi">Jeremi</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~Jeremi">( 14640 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968379"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968379"><p>The point of programming is to automate processes so that they can be done quickly, cheaply, and reliably by a computer, rather than slowly and inconsistently by a human being.  If you consider process automation to be a bad thing because your salary  depends on manually re-performing the same operations instead of automating the ones that can be automated, then you have missed the point.  Verification of code safety is one such process, and Rust is designed to make that process easier to automate.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968379">

</div>
</div>

<div id="replyto_64968379"></div>

<ul id="group_64968379">
	<li id="hiddens_64968379" class="hide"></li>
</ul>

<ul id="commtree_64968379"><li id="tree_64968945" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968945" class="commentstatus"></div>
<div id="comment_64968945" class="cw">
	<div id="comment_top_64968945" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968945" name="comment_link_64968945" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968945" onclick="return D2.setFocusComment(64968945)" >Re:  Reminder</a>


		 	<span id="comment_score_64968945" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968945); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~fluffernutter">fluffernutter</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~fluffernutter">( 1411889 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968945"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968945">I consider programmers who weren't taught how a computer works to be a bad thing.</div>
	</div>

	<div class="commentSub" id="comment_sub_64968945">

</div>
</div>

<div id="replyto_64968945"></div>

<ul id="group_64968945">
	<li id="hiddens_64968945" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_64968235" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968235" class="commentstatus"></div>
<div id="comment_64968235" class="cw">
	<div id="comment_top_64968235" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968235" name="comment_link_64968235" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968235" onclick="return D2.setFocusComment(64968235)" >Rust needs formal behavioral verification tools</a>


		 	<span id="comment_score_64968235" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968235); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~sinkskinkshrieks">sinkskinkshrieks</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~sinkskinkshrieks">( 6952954 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968235"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968235">While minimizing unsafe is a worthy aim, Rust needs tools to prove behavioral correctness of both code and binaries. There is no avoiding doing the hard and necessary work of rigorous and thorough testing that delivers proven quality. Can't place all eggs in a basket and then stop short before improving the industry by reducing engineering errors and security bugs potentially to zero.</div>
	</div>

	<div class="commentSub" id="comment_sub_64968235">

</div>
</div>

<div id="replyto_64968235"></div>

<ul id="group_64968235">
	<li id="hiddens_64968235" class="hide"></li>
</ul>

<ul id="commtree_64968235"><li id="tree_64968395" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64968395" class="commentstatus"></div>
<div id="comment_64968395" class="cw">
	<div id="comment_top_64968395" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64968395" name="comment_link_64968395" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64968395" onclick="return D2.setFocusComment(64968395)" >Re:</a>


		 	<span id="comment_score_64968395" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64968395); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~serviscope_minor">serviscope_minor</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~serviscope_minor">( 664417 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64968395"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64968395"><p>Kinda?</p><p>Rust didn't obviate the need for testing: the borrow checker prevents memory errors which is necessary but not sufficient for correct code. You still need to know if your code is doing the right thing.</p><p>If you want to prove behavioral correctness, Ada spark is right over there. Notev that they have apparently taken inspiration from rust recently and introduced a borrow checker is order to allow a number is pointer based things which were previously forbidden.</p><p>Of course you then need to verify that your c<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_64968395">

</div>
</div>

<div id="replyto_64968395"></div>

<ul id="group_64968395">
	<li id="hiddens_64968395" class="hide"></li>
</ul>

</li></ul></li><li id="tree_64969017" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64969017" class="commentstatus"></div>
<div id="comment_64969017" class="cw">
	<div id="comment_top_64969017" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64969017" name="comment_link_64969017" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64969017" onclick="return D2.setFocusComment(64969017)" >Sounds like a sketchy raffle</a>


		 	<span id="comment_score_64969017" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64969017); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~zkiwi34">zkiwi34</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~zkiwi34">( 974563 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64969017"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64969017">Why are the function authors being contracted to address this?

That, and are there any glaring QC issues with Rust? Because it does seem likely. So, where's the initiative to address that?</div>
	</div>

	<div class="commentSub" id="comment_sub_64969017">

</div>
</div>

<div id="replyto_64969017"></div>

<ul id="group_64969017">
	<li id="hiddens_64969017" class="hide"></li>
</ul>

<ul id="commtree_64969017"><li id="tree_64969019" class="comment oneline"><span class="ind"></span>
<div id="comment_status_64969019" class="commentstatus"></div>
<div id="comment_64969019" class="cw">
	<div id="comment_top_64969019" class="commentTop newcomment">
		<div class="title">
			<h4><a rel="nofollow" id="comment_link_64969019" name="comment_link_64969019" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;cid=64969019" onclick="return D2.setFocusComment(64969019)" >Re: Sounds like a sketchy raffle</a>


		 	<span id="comment_score_64969019" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 64969019); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a rel="nofollow" href="//slashdot.org/~zkiwi34">zkiwi34</a>  <span class="uid"><a rel="nofollow" href="//slashdot.org/~zkiwi34">( 974563 )</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_64969019"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_64969019">Why are they not being contracted to address?</div>
	</div>

	<div class="commentSub" id="comment_sub_64969019">

</div>
</div>

<div id="replyto_64969019"></div>

<ul id="group_64969019">
	<li id="hiddens_64969019" class="hide"></li>
</ul>

</li></ul></li>
			<li id="roothiddens" class="hide"></li>
		</ul>
	
	
	
	

<noscript><p><b>There may be more comments in this discussion. Without JavaScript enabled, you might want to <a href="//developers.slashdot.org/users.pl?op=editcomm">turn on Classic Discussion System</a> in your preferences instead.</b></p></noscript>
<div id="discussion_buttons" class="clearfix">






</div>


<div class="newcmnt"><div id="replyto_0"></div></div>


	<script type="text/javascript">
<!--
		D2.currents()['hidden']   = 8;
		D2.currents()['full']     = 8;
		D2.currents()['oneline']  = 54;
		// D2.currents_total(70);

		D2.abbrev_comments({64968285:522,64968263:529,64968395:536,64968921:522,64968345:268,64968537:1052,64967779:535,64968905:760,64968151:536});
		D2.noshow_comments([64968141,64967835,64968123,64969119,64968155,64968159,64968351,64967805]);
		D2.pieces_comments([64968629,64968151,64967879,64967915,64968111,64968263,64967761,64967779,64967803,64967845,64967883,64968233,64968359,64968583,64968649,64968715,64968269,64968401,64968665,64968845,64967881,64968573,64968071,64968285,64968247,64968107,64968169,64968383,64968421,64968345,64968363,64968537,64968561,64968643,64968747,64968807,64968847,64968905,64968205,64968239,64968543,64968889,64968899,64967873,64968119,64967909,64968067,64968921,64968379,64968945,64968235,64968395,64969017,64969019]);
		D2.init_hiddens([64967645,64967755,64968269,64967787,64967881,64968071,64968169,64967709]);

		D2.finishLoading();


		if (D2.thresh_totals()[6][6][1] == 0) {
			D2.replyTo(0, 1);
		}


//-->
	</script>


</div>



	
	
		<div id="clickgen" class="grid_24 b">
    <section class="grid_16 f">
        <div>
			<h4 class="nobg">
			    <a href="" class="selected btmrel" onClick="getRelatedStoriesForStory(435811);return false">Related Links</a>
			    <span class="tops fright">Top of the: <a href="" class="btmday" onClick="getTopStories(1);return false">day</a>, <a class="btmweek" href="" onClick="getTopStories(7); return false">week</a>, <a href="" onClick="getTopStories(30);return false" class="btmmonth">month</a>.</span>
			</h4>
			<ul class="nobullets bmrelatedlist">


	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>258<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/24/03/19/019240/c-creator-rebuts-white-house-warning?sdsrc=popbyskidbtmprev">C++ Creator Rebuts White House Warning</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>236<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/24/08/04/0228253/darpa-wants-to-automatically-transpile-c-code-into-rust---using-ai?sdsrc=popbyskidbtmprev">DARPA Wants to Automatically Transpile C Code Into Rust - Using AI</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>228<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/24/02/28/1529238/white-house-urges-devs-to-switch-to-memory-safe-programming-languages?sdsrc=popbyskidbtmprev">White House Urges Devs To Switch To Memory-Safe Programming Languages</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>184<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/24/08/09/1418217/agile-is-killing-software-innovation-says-moxie-marlinspike?sdsrc=popbyskidbtmprev">Agile is Killing Software Innovation, Says Moxie Marlinspike</a>
	</li>

	
	<li>
		<span class="cmntcnt"><span class="slant"></span><span>178<span class="hide"> comments</span></span></span><a href="//developers.slashdot.org/story/24/08/23/1736253/aws-ceo-says-most-developers-could-stop-coding-soon-as-ai-takes-over?sdsrc=popbyskidbtmprev">AWS CEO Says Most Developers Could Stop Coding Soon as AI Takes Over</a>
	</li>


</ul>
        </div>
    </section>
    <aside class="grid_8 st">
		<section class="grid_24 f">
			<div>
				<h5 class="tlnav"><a href="//science.slashdot.org/story/24/11/24/0019202/potentially-toxic-chemical-byproduct-may-be-present-in-13-of-us-drinking-water?sdsrc=nextbtmnext">next</a></h5>
				<div class="grid_24">
	    
	    
            	 <span class="grid_7 tcenter"><img src="//a.fsdn.com/sd/topics/government_64.png" width="64" height="64" alt="Government"></span>
	    
					<p class="grid_12"><a href="//science.slashdot.org/story/24/11/24/0019202/potentially-toxic-chemical-byproduct-may-be-present-in-13-of-us-drinking-water?sdsrc=nextbtmprev">'Potentially Toxic' Chemical Byproduct May Be Present in 1/3 of US Drinking Water</a></p>
					<span class="grid_5 tcenter comments"><span class="cmntcnt_large fleft"><span class="slant"></span><span>116<span class="hide"> comments</span></span></span></span>
	
				</div>
			</div>
		</section>
		<section class="grid_24">
			<div>
				<h5 class="tlnav"><a href="//developers.slashdot.org/story/24/11/23/1855203/does-github-copilot-improve-code-quality?sdsrc=prevbtmprev">previous</a></h5>
				<div class="grid_24">
	    
            	 <span class="grid_7 tcenter"><img src="//a.fsdn.com/sd/topics/programming_64.png" width="64" height="64" alt="Programming"></span>
	    
					<p class="grid_12"><a href="//developers.slashdot.org/story/24/11/23/1855203/does-github-copilot-improve-code-quality?sdsrc=prevbtmprev">Does GitHub Copilot Improve Code Quality?</a></p>

					<span class="grid_5 tcenter comments"><span class="cmntcnt_large fleft"><span class="slant"></span><span>74<span class="hide"> comments</span></span></span></span>
				</div>
			</div>
		</section>
	</aside>
</div>
	

</section>
			</div>
		</div>
		<div class="row top-space">


			<div class="grid_24">
				<!-- 728px ad -->

				<div class="adwrap">
<div id='div-gpt-ad-728x90_c'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.pubads().enableLazyLoad({fetchMarginPercent: 0,renderMarginPercent: 0});
googletag.display('div-gpt-ad-728x90_c');});</script></div>
</div>
				<!-- end 728px ad -->
				<!-- Slashdot Deals 6 Best Sellers -->
					<div class="row deals-footer">
						<div class="units-8 indent-2 deals-wrapper">
						  <div class="deals-header"><h2>Slashdot Top Deals</h2></div>
						  <div id="deals-output">
							<script id="deals-template" type="text/x-handlebars-template">
							  {{#each deal}}
								<div class="deal">
								  <a href="{{urlPath permalink}}?&utm_source=slashdot.org&utm_medium=dealfeed-footerfeed&utm_campaign={{slug}}" target="_blank">
								  	<img src="{{main_image}}" alt="" />
								  </a>
								  <p class="title"><a href="{{urlPath permalink}}?&utm_source=slashdot.org&utm_medium=dealfeed-footerfeed&utm_campaign={{slug}}" target="_blank">{{title}}</a></p>
								  <p class="deal-price">{{centConversion price_in_cents}}</p>
								</div>
							  {{/each}}
							</script>
						  </div>
						</div>
					</div>
					<script>
						if ( sdAdBlockActive && window.is_euro_union === 0) {
                                                    bizx.cmp.ifConsent('', ['all'], function () {
							$.ajaxSetup({
								cache: true
							});
							$.getScript( "//a.fsdn.com/sd/js/scripts/min/deals-min.js", function(){
								runDealsWidget();
							});
                                                    });
						}
					</script>

					<!-- End Slashdot Deals 6 Best Sellers -->
				</div>
			</div>
		</div>
	</div>
	<!-- SMACKS: END COMMENTS SECTION -->
</div>
<!-- SMACKS: END COMMENTS CONTAINER -->


	

<script type="text/javascript">

$(function(){
$('#firehose-filter').
	focus(function(event){
		gFocusedText = this;
	}).
	blur(function(event){
		if ( gFocusedText === this ) {
			gFocusedText = null;
		}
	});


apply_updates_when(		'at-end', true);
});
</script>

<!-- body end --><!-- footer type=current begin -->

	
	</section>
	
	


	<footer id="fhft" class="grid_24 nf aoc">
		<div id="logo_nf" class="fleft">
			<a href="//slashdot.org"><span>Slashdot</span></a>
		</div>
		<nav role="firehose footer">
			
				
				
				
				

				
						<span class="ind"></span><a class="btn first" href="//developers.slashdot.org/comments.pl?sid=23530125&amp;op=reply&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;pid=" onclick="D2.replyTo(0); return false;">Post</a>
				
				<a class="btn hide" id="footer_moderate_button">Moderate</a>
				<a class="btn hide" id="footer_moderatorhelp_button">Moderator Help</a>
				<a class="btn hide" id="footer_delete_button" title="Checked comments will be deleted.">Delete</a>
				<script>
					(function($){
						var old_moderate_btn = $("#discussion_moderate_button");
						if (old_moderate_btn.length) {
							var moderate_btn = $("#footer_moderate_button");
							moderate_btn.click(
								function(){old_moderate_btn.click()}
							);
							moderate_btn.removeClass('hide');
						}

						var old_moderatorhelp_btn = $("#discussion_moderatorhelp_button");
						if (old_moderatorhelp_btn.length) {
							var moderatorhelp_btn = $("#footer_moderatorhelp_button");
							moderatorhelp_btn.click(
								function(){old_moderatorhelp_btn.click()}
							);
							moderatorhelp_btn.attr(
								'href', old_moderatorhelp_btn.attr('href')
							);
							moderatorhelp_btn.removeClass('hide');
						}

						var old_delete_btn = $("#discussion_delete_button");
						if (old_delete_btn.length) {
							var delete_btn = $("#footer_delete_button");
							delete_btn.click(
								function(){old_delete_btn.click()}
							);
							delete_btn.removeClass('hide');
						}

						$('#discussion_buttons').addClass('hide');
					})(Slash.jQuery); // (function($){
				</script>
				<ul class="fleft">
					
						<li class="fleft selected">
							<span class="nbutton btn hide link reset" id="more_comments_button">
								<a href="#" onclick="D2.ajaxFetchComments(0,1); return false">
									<span id="more_comments_num_a" class="hide">Get more comments</span>
								</a>
							</span>
						</li>
					
					
						<li class="fleft">
							<span class="loadedcommentcnt">70</span> of <span class="totalcommentcnt">70</span> loaded
						</li>
					
				</ul>
				
					<script type="text/javascript">D2.finishLoading()</script>
				
			

			
			<ul class="fright submitstory">
					<li class="fright">
						<a href="/submit">Submit<span class="opt"> Story</span></a>
					</li>
			</ul>
		</nav>
		


	</footer>
	<section class="bq">
		<blockquote class="msg grid_24" cite="https://slashdot.org">
			<p>If you aren't rich you should always look useful.
		-- Louis-Ferdinand Celine</p>
			<span class="slant"></span>
		</blockquote>
	</section>
	<footer id="ft" class="grid_24">
		<nav class="grid_10" role="footer">
			<ul>
				<li><a href="//slashdot.org/faq">FAQ</a></li>
				<li><a href="//slashdot.org/archive.pl">Story Archive</a></li>
				<li><a href="//slashdot.org/hof.shtml">Hall of Fame</a></li>
				<li><a href="https://slashdotmedia.com/advertising-and-marketing-services/" rel="nofollow">Advertising</a></li>
				<li><a href="https://slashdotmedia.com/terms-of-use/" rel="nofollow">Terms</a></li>
				<li><a href="https://slashdotmedia.com/privacy-statement/" rel="nofollow">Privacy Statement</a></li>
				<li><a href="//slashdot.org/faq/slashmeta.shtml">About</a></li>
				<li><a href="mailto:feedback@slashdot.org">Feedback</a></li>
				<li><a href="#" onclick="set_mobile_pref('mobile',1);return false;">Mobile View</a></li>
				<li><a href="//slashdot.org/blog">Blog</a></li>
				<li><a href="#" id="opt-out-link"></a></li>
				<li><button class="btn opt-out" id="opt-out-button" style="display:none">
					<img src="//a.fsdn.com/sd/ccpa-optout.png" alt="Icon">
					Do Not Sell or Share My Personal Information</button></li>

			</ul>
		</nav>
		<br>
		
		<div class="grid_14 tright tm"><span class="nobr">Copyright &copy; 2024 Slashdot Media. All Rights Reserved.</span></div>

	<div class="modal-custom overlay-custom" id="ccpa-modal" style="max-width:100%">
		<div class="modal-content modal-content-ccpa">
	    	<span class="close" id="modal-close">&times;</span>
			<div class="modal-header" id="ccpa-modal-content-destination"></div>
		</div>
	</div>

	</footer>
	
	<div class="overlay"></div>
<div class="modal-box">
    <a href="#" id="close-modal">Close</a>
    <article class="modal-content">
    </article>
    <footer>
</div>




<div id="modal_cover" class="hide" onclick="hide_modal_box(); return false;"></div>
<div id="modal_box" class="hide">
      <div id="modal_box_content"></div>
      <header class="n">
                  <span class="fadeout"></span>
                  <span class="fadeoutfade"></span>
		  <span class="pf"><a class="ico close" onclick="hide_modal_box(); return false;" href="#"><span>Close</span></a></span>
		  <h3 class="pf"><div id="logo"><a href="//slashdot.org">Slashdot</a></div><span id="preference_title"></span></h3>
      </header>
</div>
	
	<!-- CCM Tag -->
<script type="text/javascript">
bizx.cmp.ifConsent({purposes: 'all', vendors: 'bombora'}, function() {
        /*global _ml:true, window */
        _ml = window._ml || {};
        _ml.eid = '771';

        var s = document.getElementsByTagName('script')[0], cd = new Date(), mltag = document.createElement('script');
        mltag.type = 'text/javascript'; mltag.async = true;
        mltag.src = '//ml314.com/tag.aspx?' + cd.getDate() + cd.getMonth() + cd.getFullYear();
        s.parentNode.insertBefore(mltag, s);
});
</script>
<!-- End CCM Tag -->

<script type="text/javascript">
window.google_analytics_uacct = "UA-199823890-2";

var _gaq = _gaq || [];





  _gaq.push(['_setAccount', 'UA-199823890-2']);
  _gaq.push(['_setDomainName', '.slashdot.org']);

	
		_gaq.push(['_addIgnoredRef', 'slashdot.org']);
	


  _gaq.push(['_setCustomVar', 1, 'User Type',  'Anon', 3]);		
	
	_gaq.push(['_setCustomVar', 2, 'Page','article2', 3]);

	



// track beta behavior for user
var betamatches = document.cookie.match(/betagroup=(-?\d+)/);

if(betamatches && betamatches[1]) {
  if(betamatches[1] == -1) {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','opt-out', 3]);
  } else {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','unredirected', 3]);
  }
}



  _gaq.push(['_trackPageview']);
  _gaq.push(['_trackPageLoadTime']);


if (window.is_euro_union === 0) {
bizx.cmp.ifConsent('', ['all'], function () {
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
});
}
</script>

<!-- CCM GA Push -->
<script>
    if (typeof _ml !== 'undefined' && _ml.us) {
        if (_ml.us.tp && _ml.us.tp.length > 0) {
            ga('set', 'dimension2', _ml.us.tp[0]);
        }
        if (_ml.us.pc && _ml.us.pc.length > 0) {
            ga('set', 'dimension7', _ml.us.pc[0]);
        }
        ga('set', 'dimension3', _ml.us.ind);
        ga('set', 'dimension4', _ml.us.cr);
        ga('set', 'dimension5', _ml.us.cs);
        ga('set', 'dimension6', _ml.us.dm);
        ga('set', 'dimension8', _ml.us.sn);
    }
</script>

<!-- Sticky Ads -->
<script type="text/javascript">
var topBannerViewed = false;
function initSticky(){
	if (SD.Ads.acceptable_ads_active) {
		return;
	}
		
	if($('#div-gpt-ad-728x90_a').length > 0 && $('#div-gpt-ad-300x250_a').length > 0 && window.outerWidth >= 1070 && !sdAdBlockActive){
	    $(window).scroll(function(){
		var y = $(document).scrollTop();
		var z =  y + window.outerHeight;
		var navOffset = 0;
		var offset = [
		    $('.nav-wrap').outerHeight(true),
		    $('.nav-secondary-wrap').outerHeight(true)
		];
		for(row in offset){
		    if(offset[row]) navOffset = navOffset + parseInt(offset[row]);
		}
		$('.adwrap-unviewed').each(function(){
		    var cls = 'adwrap-sticky';
		    var toggleCls = 'adwrap';
				//$('.banner-wrapper').css('height', $('.banner-contain').outerHeight());
		    if($(this).hasClass('railad')) {
			if(topBannerViewed){
			    var topPixels = $(this).offset().top;
			    navOffset += $('.adwrap').outerHeight();
			    if(y >= topPixels && y >= navOffset){
				$('#slashboxes').css('top', 0).css('position','sticky').css('right',13);
			    } else {
				$('#slashboxes').removeAttr('style');
			    }
			}
			return;
		    }
		    var topPixels = $(this).offset().top;
		if(y >= topPixels && y >= navOffset){
			$(this).addClass(cls);
			$(this).removeClass('adwrap');
					if(cls == 'adwrap-sticky') { //top banner
			    topBannerViewed = false;
						$('#slashboxes').css('top',$(this).outerHeight() || 0).css('position','sticky').css('right',13);
					}
		if(topBannerViewed) {
			    //console.log('hereeee');
						$('#slashboxes').css('top', 0).css('position','sticky').css('right',13);
					}
		    }else{
									//console.log('topBannerViewed', topBannerViewed);
			$(this).removeClass(cls);
			$(this).addClass(toggleCls);
			$('#slashboxes').removeAttr('style');
		    }
		});
			if($('.adwrap-viewed-banner').length > 0){
			  //console.log('ads topBanner displayed');
				topBannerViewed = true;
				$('.adwrap-viewed-banner').removeClass('adwrap-unviewed').removeClass('adwrap-sticky').addClass('adwrap');
			}
	    if($('.adwrap-viewed-railad').length > 0){
							//console.log('ads sidebar displayed');
		    $('.adwrap-viewed-railad').removeClass('adwrap-unviewed').removeClass('adwrap-railad-sticky');
				$('#slashboxes').removeAttr('style');
			}
	    });
	}
}
bizx.cmp.ifConsent({purposes: 'all', vendors: 'google-ads'}, function () {
	if (!sdAdBlockActive) {
		initSticky();
	}
	if (SD.Ads.acceptable_ads_active) {
		// similar to remove* code above in initSticky
		$('.adwrap-unviewed').removeClass('adwrap-unviewed').removeClass('adwrap-sticky').addClass('adwrap').removeClass('adwrap-railad-sticky');
		$('#slashboxes').removeAttr('style');
	}
});
</script>

<!-- Piwik -->
<script type="text/javascript">
  var _paq = _paq || [];
  _paq.push(["setCookieDomain", "*.slashdot.org"]);
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
function initPiwikAndNels() {
  (function() {
    var u="//analytics.slashdotmedia.com/";
    _paq.push(['setTrackerUrl', u+'sd.php']);
    _paq.push(['setSiteId', 40]);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'sd.js'; s.parentNode.insertBefore(g,s);
  })();

    if(window.location.pathname == '/'){
        var nelId = (location.search.split('nel_id=')[1] || '').split('&')[0];
        var url = '/ajax.pl?op=nel';
        if(nelId){
            url += '&nel_id='+nelId;
        }
        $.ajax({
            url: url,
            type: 'POST',
            success: function(html){
                $('#firehoselist article').eq(1).after(html);
            }
        });
    }
    //announcement NEL
    if(document.getElementById('announcementText')){
      $('#announcementText').hide();
      var hlUrl = '/ajax.pl?op=hl_nel';
      if(nelId){
        hlUrl += '&nel_id='+nelId;
      }
      $.ajax({
        url: hlUrl,
        type: 'POST',
        success: function(html){
          if(html.length < 10){
            $('#announcementText').show();
            return;
          }
          $('#announcementText').html(html).show();
        },
        error: function () {
          $('#announcementText').show();
        }
      });
    }
}
bizx.cmp.ifConsent({purposes: ['storage', 'measurement'], vendors: 'sdm'}, initPiwikAndNels);

<!-- 6sense -->
bizx.cmp.ifConsent({purposes: 'all', vendors: '6sense'}, async() => {
    (function(){
    var s = document.getElementsByTagName("script")[0];
    var b = document.createElement("script");
    b.type = "text/javascript";
    b.async = true;b.defer=true;b.id='6senseWebTag';
    b.src = "https://j.6sc.co/j/58729049-be80-466a-9abf-b3911430bbd8.js";
    s.parentNode.insertBefore(b, s);
    })();
})
</script>


<!-- Datonics -->
<script type="text/javascript">
if (window.is_euro_union === 0) {
    bizx.cmp.ifConsent('', ['all'], function () {
        bizx.cmp.embedScript("//ads.pro-market.net/ads/scripts/site-143573.js", true);
    });
}
</script>
<script src="//a.fsdn.com/con/js/sandiego/maxnav.js?2024-11"></script>
	<script id="after-content" type="text/javascript">
(function( $, fn, console ){
	$ && fn && $(function(){ fn($, console); });
})(window.jQuery, window.pageload_done, window.console);
</script>
	
	<script type='text/javascript'>
	if(!document.location.href.match(/source=autorefresh/)) {
		document.write('<img src="//slashdot.org/images/js.gif?49">');
	}
</script>
<noscript>
	<img src="//slashdot.org/images/njs.gif?799">
</noscript>
	<div class="busy genericspinner hide"><span>Working...</span></div>

	    <script>
            var regular_opt_out_link = true;

            if (bizx.cmp.show_do_not_sell()) {
                regular_opt_out_link = false;
                 document.getElementById('opt-out-button').setAttribute('style', 'display:inline');
            }

            if (window.is_euro_union === 1) {
                regular_opt_out_link = false;
                var elem = '<a href="#" title="Privacy Choices" onclick="bizx.cmp.promptConsent(); return false;">Privacy Choices</a>';
                document.getElementById('opt-out-link').innerHTML = elem;
            }

            if (regular_opt_out_link == true) {
                var elem = '<a href="https://slashdotmedia.com/opt-out-choices" title="Opt Out" rel="nofollow">Opt Out</a>';
                document.getElementById('opt-out-link').innerHTML = elem;
            }
            var cmp_modal = document.getElementById('ccpa-modal');
            var btn = document.getElementById('opt-out-button');
            var span = document.getElementById('modal-close');

            btn.onclick = function() {
            	cmp_modal.style.display = 'block';
            };

            span.onclick = function() {
            	cmp_modal.style.display = 'none';
            };

         </script>

	<script>
		if(typeof(Storage)!=="undefined"){
			window.scrollTo(0,sessionStorage.scrollPos);
				$(window).scroll(function () {
				//You've scrolled this much:
				sessionStorage.scrollPos = $(window).scrollTop();
			});
		}
		$(function(){
			$('a').click(function(){
				delete sessionStorage.scrollPos;
			})
		});
		// window.onbeforeunload = function () {
		// 	console.log('bakc button clicked');
		// 	delete sessionStorage.scrollPos;
		// }
		window.onpopstate=function() {
			delete sessionStorage.scrollPos;
		}
	</script>
	

	
		<!-- 1x1 story page -->
		<div id='div-gpt-ad-1x1'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.pubads().enableLazyLoad({fetchMarginPercent: 0,renderMarginPercent: 0});
googletag.display('div-gpt-ad-1x1');});</script></div>
	

	<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'8e7cf1b29a818cc0',t:'MTczMjQ4ODQ4MS4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
	</html>


	<!-- footer type=current end -->