<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>

<script async src="https://www.googletagmanager.com/gtag/js?id=G-20JYM3ZFN0"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-20JYM3ZFN0');
</script>
<title>Working Models for Tackling Tech Debt - ACM Queue</title>
<meta name="description" value />
<meta name="keywords" value="Development" />

<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-P52H78L');</script>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="shortcut icon" href="favicon.ico" />
<script type="text/javascript" src="/js/jquery-1.2.6.min.js"></script>
<script type="text/javascript" src="/js/jquery.validate.min.js"></script>
<script type="text/javascript" src="/js/global.js"></script>

<link rel="alternate" type="application/rss+xml" title="All Queue Content RSS 2.0" href="/rss/feeds/queuecontent.xml" />
<link rel="alternate" type="application/rss+xml" title="Curmudgeon RSS 2.0" href="/rss/feeds/curmudgeon.xml" />
<link rel="alternate" type="application/rss+xml" title="Opinion RSS 2.0" href="/rss/feeds/opinion.xml" />
<link rel="alternate" type="application/rss+xml" title="Kode Vicious RSS 2.0" href="/rss/feeds/kodevicious.xml" />
<link rel="alternate" type="application/rss+xml" title="ACM TechNews RSS" href="https://www.infoinc.com/acm/TechNews.rss" />
<link rel="alternate" type="application/rss+xml" title="Washington Updates RSS" href="https://usacm.acm.org/weblog2/?feed=rss2" />
<link rel="alternate" type="application/rss+xml" title="RISKS Forum RSS" href="/rss/feeds/risksforum.xml" />
<link rel="alternate" type="application/rss+xml" title="AI RSS 2.0" href="/rss/feeds/ai.xml" />
<link rel="alternate" type="application/rss+xml" title="API Design RSS 2.0" href="/rss/feeds/apidesign.xml" />
<link rel="alternate" type="application/rss+xml" title="Bioscience RSS 2.0" href="/rss/feeds/bioscience.xml" />
<link rel="alternate" type="application/rss+xml" title="Blockchain RSS 2.0" href="/rss/feeds/blockchain.xml" />
<link rel="alternate" type="application/rss+xml" title="Business/Management RSS 2.0" href="/rss/feeds/business/management.xml" />
<link rel="alternate" type="application/rss+xml" title="Compliance RSS 2.0" href="/rss/feeds/compliance.xml" />
<link rel="alternate" type="application/rss+xml" title="Component Technologies RSS 2.0" href="/rss/feeds/componenttechnologies.xml" />
<link rel="alternate" type="application/rss+xml" title="Computer Architecture RSS 2.0" href="/rss/feeds/computerarchitecture.xml" />
<link rel="alternate" type="application/rss+xml" title="Concurrency RSS 2.0" href="/rss/feeds/concurrency.xml" />
<link rel="alternate" type="application/rss+xml" title="Cryptocurrency RSS 2.0" href="/rss/feeds/cryptocurrency.xml" />
<link rel="alternate" type="application/rss+xml" title="DSPs RSS 2.0" href="/rss/feeds/dsps.xml" />
<link rel="alternate" type="application/rss+xml" title="Data RSS 2.0" href="/rss/feeds/data.xml" />
<link rel="alternate" type="application/rss+xml" title="Databases RSS 2.0" href="/rss/feeds/databases.xml" />
<link rel="alternate" type="application/rss+xml" title="Debugging RSS 2.0" href="/rss/feeds/debugging.xml" />
<link rel="alternate" type="application/rss+xml" title="Development RSS 2.0" href="/rss/feeds/development.xml" />
<link rel="alternate" type="application/rss+xml" title="Distributed Computing RSS 2.0" href="/rss/feeds/distributedcomputing.xml" />
<link rel="alternate" type="application/rss+xml" title="Distributed Development RSS 2.0" href="/rss/feeds/distributeddevelopment.xml" />
<link rel="alternate" type="application/rss+xml" title="Education RSS 2.0" href="/rss/feeds/education.xml" />
<link rel="alternate" type="application/rss+xml" title="Email and IM RSS 2.0" href="/rss/feeds/emailandim.xml" />
<link rel="alternate" type="application/rss+xml" title="Embedded Systems RSS 2.0" href="/rss/feeds/embeddedsystems.xml" />
<link rel="alternate" type="application/rss+xml" title="Failure and Recovery RSS 2.0" href="/rss/feeds/failureandrecovery.xml" />
<link rel="alternate" type="application/rss+xml" title="File Systems and Storage RSS 2.0" href="/rss/feeds/filesystemsandstorage.xml" />
<link rel="alternate" type="application/rss+xml" title="Game Development RSS 2.0" href="/rss/feeds/gamedevelopment.xml" />
<link rel="alternate" type="application/rss+xml" title="Graphics RSS 2.0" href="/rss/feeds/graphics.xml" />
<link rel="alternate" type="application/rss+xml" title="HCI RSS 2.0" href="/rss/feeds/hci.xml" />
<link rel="alternate" type="application/rss+xml" title="Managing Megaservices RSS 2.0" href="/rss/feeds/managingmegaservices.xml" />
<link rel="alternate" type="application/rss+xml" title="Mobile Computing RSS 2.0" href="/rss/feeds/mobilecomputing.xml" />
<link rel="alternate" type="application/rss+xml" title="Networks RSS 2.0" href="/rss/feeds/networks.xml" />
<link rel="alternate" type="application/rss+xml" title="Object-Relational Mapping RSS 2.0" href="/rss/feeds/object-relationalmapping.xml" />
<link rel="alternate" type="application/rss+xml" title="Open Source RSS 2.0" href="/rss/feeds/opensource.xml" />
<link rel="alternate" type="application/rss+xml" title="Patching and Deployment RSS 2.0" href="/rss/feeds/patchinganddeployment.xml" />
<link rel="alternate" type="application/rss+xml" title="Performance RSS 2.0" href="/rss/feeds/performance.xml" />
<link rel="alternate" type="application/rss+xml" title="Power Management RSS 2.0" href="/rss/feeds/powermanagement.xml" />
<link rel="alternate" type="application/rss+xml" title="Privacy and Rights RSS 2.0" href="/rss/feeds/privacyandrights.xml" />
<link rel="alternate" type="application/rss+xml" title="Processors RSS 2.0" href="/rss/feeds/processors.xml" />
<link rel="alternate" type="application/rss+xml" title="Programming Languages RSS 2.0" href="/rss/feeds/programminglanguages.xml" />
<link rel="alternate" type="application/rss+xml" title="Purpose-built Systems RSS 2.0" href="/rss/feeds/purpose-builtsystems.xml" />
<link rel="alternate" type="application/rss+xml" title="Quality Assurance RSS 2.0" href="/rss/feeds/qualityassurance.xml" />
<link rel="alternate" type="application/rss+xml" title="RFID RSS 2.0" href="/rss/feeds/rfid.xml" />
<link rel="alternate" type="application/rss+xml" title="SIP RSS 2.0" href="/rss/feeds/sip.xml" />
<link rel="alternate" type="application/rss+xml" title="Search Engines RSS 2.0" href="/rss/feeds/searchengines.xml" />
<link rel="alternate" type="application/rss+xml" title="Security RSS 2.0" href="/rss/feeds/security.xml" />
<link rel="alternate" type="application/rss+xml" title="Semi-structured Data RSS 2.0" href="/rss/feeds/semi-structureddata.xml" />
<link rel="alternate" type="application/rss+xml" title="Social Computing RSS 2.0" href="/rss/feeds/socialcomputing.xml" />
<link rel="alternate" type="application/rss+xml" title="System Administration RSS 2.0" href="/rss/feeds/systemadministration.xml" />
<link rel="alternate" type="application/rss+xml" title="System Evolution RSS 2.0" href="/rss/feeds/systemevolution.xml" />
<link rel="alternate" type="application/rss+xml" title="Testing RSS 2.0" href="/rss/feeds/testing.xml" />
<link rel="alternate" type="application/rss+xml" title="Virtual Machines RSS 2.0" href="/rss/feeds/virtualmachines.xml" />
<link rel="alternate" type="application/rss+xml" title="Virtualization RSS 2.0" href="/rss/feeds/virtualization.xml" />
<link rel="alternate" type="application/rss+xml" title="Visualization RSS 2.0" href="/rss/feeds/visualization.xml" />
<link rel="alternate" type="application/rss+xml" title="VoIP RSS 2.0" href="/rss/feeds/voip.xml" />
<link rel="alternate" type="application/rss+xml" title="Web Development RSS 2.0" href="/rss/feeds/webdevelopment.xml" />
<link rel="alternate" type="application/rss+xml" title="Web Security RSS 2.0" href="/rss/feeds/websecurity.xml" />
<link rel="alternate" type="application/rss+xml" title="Web Services RSS 2.0" href="/rss/feeds/webservices.xml" />
<link rel="alternate" type="application/rss+xml" title="Workflow Systems RSS 2.0" href="/rss/feeds/workflowsystems.xml" />
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-6562869-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
<script type="text/javascript">
function plusone_vote( obj ) {
_gaq.push(['_trackEvent','plusone',obj.state]);
}
</script>
<style>
body {
	font-family: jaf-bernino-sans, 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Geneva, Verdana, sans-serif;
	color: #333;
	max-width: 100%;
}
div.container p {
	line-height: 1.65em;
}
h1 {
	font-size: 32px;
}
h3 {
	font-size: 18px;
}
h4 {
	font-size: 14px;
}

div.container {
	margin-left: auto;
	margin-right: auto;
}

div {
	margin: 64px;
//	max-width: 800px;
	position: relative;
}

@media only screen and (min-width: 1024px) {
	div {
		max-width: 800px;
	}
}

img {
    max-width: 100%;
    height: auto;
    width: auto\9; /* ie8 */
}
a {
	color: #009;
	text-decoration: none;
}
a:hover {
	text-decoration: underline;
}
hr {
	margin:64px;
}
label {
	font-size: 0.8em;
	color: #666;
}
input {
	color: #999;
}

/* NAVBAR */
.navbar {
//	position: fixed;
	background: #EEEEEE;
	top: -64px;
	z-index: 10000;
	width: 100%;
	clear: both;
	padding: 0px;
	margin: 0px;
	padding-top: 10px;
	padding-left: 10px;
	padding-right: 10px;
}

/*  SECTIONS  */
.section {
	clear: both;
	padding: 0px;
	margin: 0px;
}

/*  COLUMN SETUP  */
.col {
	display: block;
	float:left;
	margin: 1% 0 1% 1.6%;
}
.col:first-child { margin-left: 0; }


/*  GROUPING  */
.group:before,
.group:after {
	content:"";
	display:table;
}
.group:after {
	clear:both;
}
.group {
    zoom:1; /* For IE 6/7 */
}

/*  GRID OF THREE  */
.span_3_of_3 {
	width: 100%;
}
.span_2_of_3 {
	width: 66.1%;
}
.span_1_of_3 {
	width: 32.2%;
}

/*  GO FULL WIDTH AT LESS THAN 480 PIXELS */

@media only screen and (max-width: 480px) {
	.col {
		margin: 1% 0 1% 0%;
	}
}

@media only screen and (max-width: 480px) {
	.span_3_of_3 {
		width: 100%;
	}
	.span_2_of_3 {
		width: 100%;
	}
	.span_1_of_3 {
		width: 100%;
	}
}

.span_2_of_2 {
	width: 100%;
}

.span_1_of_2 {
	width: 49.2%;
}

/*  GO FULL WIDTH AT LESS THAN 480 PIXELS */

@media only screen and (max-width: 480px) {
	.span_2_of_2 {
		width: 100%;
	}
	.span_1_of_2 {
		width: 100%;
	}
}
</style>
<style>
body {
	font-size: 19px;
}
#form-search > .st-default-search-input {
	width: 170px;
  display: inline-block;
  height: 16px;
  padding: 7px 11px 7px 28px;
  border: 1px solid #bbb;
  border: 1px solid rgba(0,0,0,0.25);
  font-weight: 400;
  color: #3B454F;
  font-size: 14px;
  line-height: 16px;
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  font-family: system, -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Lucida Grande", sans-serif;
}


blockquote
{
    color: #666;
    font-size: 1.1em;
    background: none;
    border-left: .2rem solid #d3d3d3;

    display: block;
    padding: 20px 20px 10px 45px;
    margin: 20px 0;
    font-style: italic;

    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 40px;
    margin-inline-end: 40px;

	font-family: Georgia, Palatino, "Palatino Linotype", Times, "Times New Roman", serif;
}

.ldq {
	display: block;
    padding-left: 10px;
    content: "\201C";
    font-size: 60px;
    position: relative;
    left: -50px;
    top: 0;
    height: 0;
    color: #7a7a7a;
}
code {
//	font-size:1.25em;
}
a {overflow-wrap: break-word;}
</style>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>

<div class="container">
<div class="navbar">
<form id="form-search" name="searchform" onsubmit="return false;" style="float:right;">
<input type="text" class="st-default-search-input">
<script type="text/javascript">
  (function(w,d,t,u,n,s,e){w['SwiftypeObject']=n;w[n]=w[n]||function(){
  (w[n].q=w[n].q||[]).push(arguments);};s=d.createElement(t);
  e=d.getElementsByTagName(t)[0];s.async=1;s.src=u;e.parentNode.insertBefore(s,e);
  })(window,document,'script','//s.swiftypecdn.com/install/v2/st.js','_st');

  _st('install','UyYECD1kdsPnbHJtPyzG','2.0.0');
</script>
<br/>
<a href="issuedetail.cfm?issue=3695735" style="width:150px;font-size:0.7em;">Current Issue</a> &nbsp; <a href="pastissues.cfm" style="width:150px;font-size:0.7em;">Past Issues</a> &nbsp; <a href="topics.cfm" style="width:150px;font-size:0.7em;">Topics</a>
</form>
<a href="/"><img src="https://queue.acm.org/img/acmqueue_logo.gif" /></a>
</div>

<br/>
<h3><a href="/listing.cfm?typefilter=Thesoftsideofsoftware&sort=publication_date&order=desc&qc_type=Thesoftsideofsoftware&article_type=&item_topic=all&filter_type=topic&page_title=The%20Soft%20Side%20of%20Software&filter=all">The Soft Side of Software</a></h3>
<label>July 2, 2024<br/><b><a class="descriptor" href="issuedetail.cfm?issue=3676308">Volume 22, issue 3 </a></b></label>
<p>

&nbsp;
<a href="https://portal.acm.org/citation.cfm?id=3674114">
<img src="img/icon_pdf.png" alt="Download PDF version of this article" />
PDF
</a>
</p>
<h1 class="hidetitle">Working Models for Tackling Tech Debt</h1>
<h2>Understand the options to tailor an approach that suits your needs</h2>
<h3>Kate Matsudaira</h3>
<p>Tech debt is inevitable in any software project. If you lead a large software team, you need to figure out a way to relentlessly chip away at the cruft that accumulates on projects. No engineer wants to work in a messy, hard-to- understand codebase because it becomes harder to make changes, diagnose problems, and perform other essential functions. It's like living in a messy house: You might do it if you have no other choice, but no one really enjoys it.</p>
<p>As a leader, you must find ways to manage tech debt. There's no way around it. Luckily, there are models for tackling tech-debt reduction that you can leverage to improve your codebase.</p>
<p>Your goal is to deliver high-quality software as fast as you can. Accelerating delivery acts like compound interest for any project, since the faster you get features out, the sooner you can get feedback to make improvements, test for product-market fit, and deliver value to your customers. This need for speed, however, can also introduce some significant tradeoffs, since moving fast: </p>
<p>• Doesn't leave a lot of time to address tech debt or improve the codebase.</p>
<p>• May encourage shortcuts. Instead of taking the time to write clean, well-designed code, developers might choose to implement faster but suboptimal solutions just to meet deadlines. Like taking out a loan, these shortcuts come with an interest penalty. In the case of tech debt, that interest takes the form of all the extra time and effort required down the road to fix problems caused by the shortcuts that are taken now.</p>
<p>• Includes too many workarounds. Unforeseen challenges sometimes arise, and workarounds are implemented to get past them. The workarounds may yield short-term fixes, but they aren't ideal for the long-term health of the codebase. For example, messy code can be slow to run, difficult to understand, and prone to bugs. Beyond the most immediate difficulties, this can make it much harder and more time-consuming to add new features later or fix existing ones.</p>
<p>Another consideration is that a software system needs to constantly evolve by way of software upgrades, attention to security vulnerabilities, and the addition of new functionality. The added time and effort that comes with maintaining and using outdated technologies should also be considered part of your tech debt, since newer technologies typically offer better performance, security, and maintainability.</p>
<p>All of these requirements need to be balanced with finding ways to make progress on improving your products while also maintaining your current systems. The key is to be vigilant about identifying tech debt and have a plan for dealing with it. This may involve setting aside time specifically to refactor code or upgrade technologies.</p>
<h3>A Short Guide to Fixing Big Things</h3>
<p>When faced with complex problems, I always come back to the following mental model, since it follows the basics of any problem:</p>
<p>1. <b><i>Determine your baseline.</i></b> Before you can fix any problem, you need visibility. What is the current state of tech debt in your systems? Do you know what needs to be fixed? Have you assessed the effort, impact, and priority of those fixes? </p>
<p>2. <b><i>Using your list, figure out what work streams you need.</i></b> Can this be done in the gaps between other projects, or do you need to carve out dedicated time? Are the problems surfacing mostly in one area, or are they widespread?</p>
<p>3. <b><i>Have a plan for moving these work streams along.</i></b> Who is going to lead them? How will you track progress?</p>
<p>4. <b><i>Clear the blockers.</i></b> Communicate upward and outward so people are aware of the project, the progress you're making, and the anticipated impact. Address impediments as they arise.</p>
<p>Evaluate how things are going and continuously calibrate the priority and progress of your project.</p>
<p>Choosing the right staffing model for each work stream is also crucial. There are several factors to consider here, including the project's size, complexity, required expertise, and competing priorities. </p>
<p>&nbsp;</p>
<h3>Setting up the Work streams</h3>
<p>Many of the following mechanisms can be combined, and you can focus on the elements in each that best fit your work requirements. The examples here include process as well as tech debt-related tasks to illustrate both the work stream and model.</p>
<p>&nbsp;</p>
<h4>Iterate outward </h4>
<p>Start with a small scope. Get things working well. Then expand outward.</p>
<p>This model works well whenever changes promise to add incremental value to each area (as opposed to requiring everyone to adopt and onboard to some particular system in order to reap the potential value/benefit). This is especially useful for experimental ideas or riskier initiatives—or in those instances with a lot of inertia/resistance. With an iterative approach, you can show success and results with each iteration, which helps to build buy-in and reduce risk. This approach also works well when it comes to changes in process, since it allows you to focus your initial steps on the willing early adopters and tackle the more resistant parts of your organization later.</p>
<p>Here are some examples that fit well with this model:</p>
<p>• <b><i>Upgrading a database. </i></b>You can upgrade one instance at a time, starting with smaller, lower-risk ones to ensure a smooth transition.</p>
<p>• <b><i>Adopting a new framework or pattern for a codebase. </i></b>If you want to change the way that error handling is done, you could start by implementing the change in one repo (or system), then expanding to adjacent components/systems once you've realized success. With each successive iteration, you'll build out better templates, examples, scripts, and tests—all of which should make adoption easier with each expansion in scope.</p>
<p>• <b><i>Setting up a new on-call or incident-management process.</i></b> Focus initially on just one team before expanding to the parent group of that team, and then continue up the line. With each step, you'll learn about what works and what doesn't. What's more, your documentation, training, and best practices will continue to improve as you expand the scope.</p>
<p>&nbsp;</p>
<h4>Identify and track</h4>
<p>When you have "must-do" work or top-down initiatives to satisfy, one tried-and-true model is to identify all the work, set up a milestone/task/ticket to track progress against each requirement, and then methodically chase down each item in turn. This model can be quite effective whenever it's easy to identify all the work that needs to be done. It can prove challenging, however, to drive execution across a large scope.</p>
<p>If this seems familiar, that's because it's the very approach teams often use to track and resolve bugs. Each is opened as a ticket, and then all the tickets are prioritized team by team within their sprints/working model. It's all about divide and conquer—with each task being assigned to the most relevant team or person and then methodically tracking the progress being made to completion.</p>
<p>Here are some examples of where this model may prove useful:</p>
<p>• <b><i>API migration.</i></b> You can programmatically identify all the consumers of the old API and then create tickets for them to migrate to the new API.</p>
<p>• <b><i>Security vulnerabilities.</i></b> All the vulnerabilities that result from a scan can be opened as tickets and then tracked in the specified timeframe (or service-level agreement) according to the assigned risk/severity level.</p>
<p>• <b><i>Roadmap slides.</i></b> If you have a large organization, you'll want each team or area to update their roadmap for quarterly reviews. A good way to frame this is to provide a placeholder slide for each team and then have them follow a template to update their content by a specified date. </p>
<p>&nbsp;</p>
<h4>Set a cutover date </h4>
<p>For some projects—particularly those where you don't get the benefit without a critical mass (of the sort that a social network, chat client, videoconferencing software, or code repository might deliver)—simply instituting a cutover date can prove to be the most effective way to go. This tends to work especially well for projects where there is a clear end or start date—for example, the end of a vendor contract, at which point everything will need to be in place for a clean cutover. </p>
<p>The model works just as it sounds: You set a date, and everybody must comply. The challenges often have to do with communication (typically in terms of ensuring that all the impacted parties have received—and understood—the message) and adoption friction (in the sense that humans tend to resist change, meaning there always seem to be edge cases).</p>
<p>This model can also include a grace period or some amount of overlap time between the old approach and the new one. For example, it could be that people are encouraged to use the latest version of the software but aren't actually required to (yet). This can help to mitigate risk and remove some of the friction that comes with any change.</p>
<p>Examples of this type of project include:</p>
<p>• <b><i>IT application changes.</i></b> Say your company moves from Zoom to Google Meet, or you move from using chat to Slack.</p>
<p>• <b><i>A new build system.</i></b> Generally, you want only one build system pushing to production so you can run a uniform fleet—meaning this would need to be accomplished as a clean cutover, at least for certain applications.</p>
<p>&nbsp;</p>
<h4>All hands on deck</h4>
<p>At times, there are really urgent problems—a pressing security issue, for example—that call for an entirely different model where you run the project as you might handle an incident response. That is, whenever a project calls for "all hands on deck," an entirely different set of guidelines applies. Here's how to proceed:</p>
<p>• <b><i>Establish a leader.</i></b> This person acts as an incident manager, overseeing all aspects of the project.</p>
<p>• <b><i>Triage work.</i></b> The project leader should assess and prioritize tasks to ensure that the most critical issues are the first ones addressed.</p>
<p>• <b><i>Set up parallel work streams.</i></b> Break the project down into smaller, more manageable tasks that can be addressed concurrently by different teams or individuals.</p>
<p>• <b><i>Have regular status updates.</i></b> Schedule check-ins, war rooms, or other forms of communication that keep everyone promptly informed of progress and alert them to any obstacles that may arise.</p>
<p>This model works well when something is truly urgent and all other work needs to pause to let this goal be accomplished as soon as possible. That said, it's also an approach that should be used sparingly since it is quite disruptive.</p>
<p>Still, when it comes to tech debt or other challenges such as bug fixing, setting aside a week of focus (for example, a "Fix-it Week") can prove to be an effective way to parallelize a lot of work across your team for a fixed period of time. This approach tends to work best whenever the challenge is smaller in scope (can be completed in less than one week) and lends itself to easy parallelization across the entire team. </p>
<p>&nbsp;</p>
<h4>Carve out</h4>
<p>For certain types of projects, the best approach may be to dedicate a specific number of people to the task. Those people can be freed from the distractions of normal business to focus on the matter at hand. Generally, this is an approach used for skunkworks projects or small initiatives that don't require a lot of coordination or expertise. If your tech debt resides largely in one system and a small set of experts is required to address that, this model can be used to let them focus on just this problem alone for a period of time.</p>
<p>The downside is that work on carve-out projects can linger because it isn't carried along by the momentum of the larger team. If you choose this model, make sure you manage estimates, deadlines, and progress closely. Also, be sure to scope and define the work so the engineers doing the work gain recognition for their impact (since everyone loves to be able to take credit for new features when making a case for promotion).</p>
<p>&nbsp;</p>
<h3>Big picture</h3>
<p>As a leader, you should always understand the state of your systems, and have a plan for how to manage that. </p>
<p>Remember that not all debt is bad, and sometimes, in fact, strategic tech debt can even be used as a valuable tool to achieve certain business goals—just as financial debt can be taken on to obtain capital that can be invested in other profitable ventures. For example, taking a shortcut to get a product to market quickly could prove to be a wise decision if it allows the company to learn from customer feedback and then iterate accordingly on the product. But like barnacles on a ship, too much tech debt can slow you down, so be vigilant about managing it.</p>
<p>Effective management of tech debt is crucial for the long-term success of any software project. That's because, by understanding all the options afforded by these different working models, you can tailor an approach that best suits the requirements of your team and project. </p>
<p>&nbsp;</p>
<p><b>Kate Matsudaira</b>&nbsp;is VP of technology for SoFi's Money (checking and savings), credit card, Invest, insurance, At Work, and partnerships. Previously, she was a VP at Splunk, where she was responsible for the Observability product suite. She has also worked as an executive at Google and helped build several successful startups that were acquired by eBay, O'Reilly Media, and Limelight. She started her career as a software engineer and lead at Microsoft and Amazon. She is a keynote speaker and published author, and has been honored with recognitions such as the NCWIT Symons Innovator Award. She lives in Issaquah, Washington (outside of Seattle), with her husband, Garrett; three boys; and three dogs.</p>
<p>Copyright © 2024 held by owner/author. Publication rights licensed to ACM.</p>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'8cbe95e31d503976',t:'MTcyNzgwODA3Mi4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script>
<p>
<img class="floatLeft" src="img/q stamp_small.jpg" width="26" height="45" alt="acmqueue"><br><br>
<em>Originally published in Queue vol. 22, no. 3</em>&#8212;
<br>
Comment on this article in the <a href="http://portal.acm.org/citation.cfm?id=3674114">ACM Digital Library</a>
</p>
<br/>

<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
<br/>

<br/>
<div class="g-plusone" data-size="small" data-annotation="inline" data-width="120"></div>

<script type="text/javascript">
	addthis_pub             = 'acm';
	addthis_logo            = 'http://queue.acm.org/img/logo_queue_small.gif';
	addthis_logo_background = '#ffffff';
	addthis_logo_color      = '000000';
	addthis_brand           = 'ACM Queue';
	addthis_options         = 'reddit, slashdot, facebook, favorites, email, delicious, digg, technorati, blinklist, furl, myspace, google, live, more';
</script>




<hr noshade size="1" />
More related articles:
<p>
<span>Catherine Hayes, David Malone</span> - <a href="detail.cfm?id=3690759"><b>Questioning the Criteria for Evaluating Non-cryptographic Hash Functions</b></a>
<br/>
Although cryptographic and non-cryptographic hash functions are everywhere, there seems to be a gap in how they are designed. Lots of criteria exist for cryptographic hashes motivated by various security requirements, but on the non-cryptographic side there is a certain amount of folklore that, despite the long history of hash functions, has not been fully explored. While targeting a uniform distribution makes a lot of sense for real-world datasets, it can be a challenge when confronted by a dataset with particular patterns.
</p>
<br/>
<p>
<span>Nicole Forsgren, Eirini Kalliamvakou, Abi Noda, Michaela Greiler, Brian Houck, Margaret-Anne Storey</span> - <a href="detail.cfm?id=3639443"><b>DevEx in Action</b></a>
<br/>
DevEx (developer experience) is garnering increased attention at many software organizations as leaders seek to optimize software delivery amid the backdrop of fiscal tightening and transformational technologies such as AI. Intuitively, there is acceptance among technical leaders that good developer experience enables more effective software delivery and developer happiness. Yet, at many organizations, proposed initiatives and investments to improve DevEx struggle to get buy-in as business stakeholders question the value proposition of improvements.
</p>
<br/>
<p>
<span>Jo&#227;o Varaj&#227;o, Ant&#243;nio Trigo, Miguel Almeida</span> - <a href="detail.cfm?id=3631183"><b>Low-code Development Productivity</b></a>
<br/>
This article aims to provide new insights on the subject by presenting the results of laboratory experiments carried out with code-based, low-code, and extreme low-code technologies to study differences in productivity. Low-code technologies have clearly shown higher levels of productivity, providing strong arguments for low-code to dominate the software development mainstream in the short/medium term. The article reports the procedure and protocols, results, limitations, and opportunities for future research.
</p>
<br/>
<p>
<span>Ivar Jacobson, Alistair Cockburn</span> - <a href="detail.cfm?id=3631182"><b>Use Cases are Essential</b></a>
<br/>
While the software industry is a fast-paced and exciting world in which new tools, technologies, and techniques are constantly being developed to serve business and society, it is also forgetful. In its haste for fast-forward motion, it is subject to the whims of fashion and can forget or ignore proven solutions to some of the eternal problems that it faces. Use cases, first introduced in 1986 and popularized later, are one of those proven solutions.
</p>
<br/>
<hr noshade size="1" />
<hr noshade size="1" />
<p>
<a href="#"><img src="https://queue.acm.org/img/logo_acm.gif" /></a>
<br/>
&copy; ACM, Inc. All Rights Reserved.
</p>
</div>
</body>
</html>