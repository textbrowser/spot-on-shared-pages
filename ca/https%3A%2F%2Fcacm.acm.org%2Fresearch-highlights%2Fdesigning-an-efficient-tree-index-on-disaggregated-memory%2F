<!doctype html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="profile" href="https://gmpg.org/xfn/11">

	<script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="095b91a6-f087-4380-b01d-e44b1c2af358" data-blockingmode="auto" type="text/javascript"></script>
	<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XYTVD2CXR4"></script>
<script>
	window.dataLayer = window.dataLayer || [];
	function gtag(){dataLayer.push(arguments);}
	gtag('js', new Date());

	gtag('config', 'G-XYTVD2CXR4');
</script>

	<title>Designing an Efficient Tree Index on Disaggregated Memory &#8211; Communications of the ACM</title>
<meta name='robots' content='max-image-preview:large' />
	<style>img:is([sizes="auto" i], [sizes^="auto," i]) { contain-intrinsic-size: 3000px 1500px }</style>
	<link rel='dns-prefetch' href='//cdn.parsely.com' />
<link rel='dns-prefetch' href='//stats.wp.com' />
<link rel="alternate" type="application/rss+xml" title="Communications of the ACM &raquo; Feed" href="https://cacm.acm.org/feed/" />
<link rel="alternate" type="application/rss+xml" title="Communications of the ACM &raquo; Comments Feed" href="https://cacm.acm.org/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Communications of the ACM &raquo; Designing an Efficient Tree Index on Disaggregated Memory Comments Feed" href="https://cacm.acm.org/research-highlights/designing-an-efficient-tree-index-on-disaggregated-memory/feed/" />
<script class="wp-asset-manager usage-logger" type="text/javascript">window.amScripts = window.amScripts || {}; window.amScripts["usage-logger"] = {"nonce":"38f5f13aeb","id":766488,"type":"digital-library","doi":"10.1145\/3709647"}</script><style class="wp-asset-manager cacm-global-critical" type="text/css">@font-face{font-display:swap;font-family:Inter;font-style:normal;src:url(../be7cb18dc7caf47cf7e9.woff2) format("woff2"),url(../817c4274293e221c5076.woff) format("woff")}@font-face{font-display:swap;font-family:Inter;font-style:normal;font-weight:700;src:url(../54321e26b8bf4739a16d.woff2) format("woff2"),url(../7ad0df5561cc0933cead.woff) format("woff")}@font-face{font-display:swap;font-family:Work Sans;font-style:normal;font-weight:500;src:url(../2dd7c3c79fd1aa1d85ca.woff2) format("woff2"),url(../9a8cbe3b3bec955df411.woff) format("woff")}@font-face{font-display:swap;font-family:Work Sans;font-style:normal;font-weight:700;src:url(../ab8702255905c24de1c1.woff2) format("woff2"),url(../9ab52d2504cfe145b9bd.woff) format("woff")}@font-face{font-display:swap;font-family:Work Sans;font-style:normal;font-weight:800;src:url(../cef488e4e9f273a0a1e3.woff2) format("woff2"),url(../a99bf2b51c426338ae2c.woff) format("woff")}html{box-sizing:border-box}html *,html :after,html :before{box-sizing:inherit}a,abbr,address,article,aside,audio,b,blockquote,body,canvas,caption,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,menu,nav,section{display:block}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}fieldset{border:none;margin:0;padding:0}button,input,select,textarea{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:0;border-radius:0;font:inherit;margin:0}button{background-color:transparent;padding:0}body,html{font-family:var(--wp--preset--font-family--inter);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}html{scroll-padding-top:var(--wp--custom--siteheader-height)!important}body{overflow-x:hidden}a img{display:block}img{height:auto;max-width:100%}svg{display:block}.container{margin-left:auto;margin-right:auto;width:calc(min(100%,var(--wp--style--global--wide-size) + var(--wp--custom--site-edge)*2) - var(--wp--custom--site-edge)*2)}.screen-reader-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;padding:0;width:1px}.screen-reader-only,.skip-link{overflow:hidden;position:absolute}.skip-link{margin-left:auto;margin-right:auto;background-color:var(--wp--preset--color--white);color:inherit;left:0;opacity:0;padding:.625rem;right:0;text-align:center;text-decoration:none;top:0;transform:translateY(-100%);width:-moz-max-content;width:max-content;z-index:-1}.skip-link:focus{opacity:1;transform:translateY(0);z-index:2147483647}.site-content{padding-top:var(--wp--custom--siteheader-height)}@media(min-width:48rem){.site-content{padding-top:var(--wp--custom--siteheader-height)}}.site-header-hamburger-menu[aria-hidden=true]{display:none}.site-header-membership-nav{align-self:stretch;display:flex;position:relative}.site-header--expanded .site-header-membership-nav,.site-header:not(.site-header--member-logged-in) .site-header-membership-nav{display:none}.site-header{position:fixed;width:100%;z-index:7}.site-header--expanded{height:100%}.site-header--no-js{opacity:0}.site-header.headroom{transition:transform .2s linear;will-change:transform}.site-header.headroom--pinned{transform:translateY(0)}.site-header.headroom--unpinned{height:auto;transform:translateY(-100%)}.site-header-container{align-items:center;background-color:var(--wp--preset--color--white);border-bottom:var(--wp--custom--border-gray);display:flex;gap:1rem;height:var(--wp--custom--siteheader-height);justify-content:space-between;padding:0 1rem}.site-header-container a{text-decoration:none}.site-header-container a:active,.site-header-container a:focus,.site-header-container a:hover{text-decoration:underline;text-decoration-color:inherit;text-decoration-thickness:1px;text-underline-offset:2.5px}@media(min-width:37.5rem){.site-header-container{padding:0 1.5rem}}@media(min-width:48rem){.site-header-container{padding:0 0 0 1rem}}@media(min-width:64rem){.site-header-container{gap:2.25rem}}@media(min-width:80rem){.site-header-container{gap:3rem}}.site-header--member-logged-in .site-header-container{padding:0 0 0 1rem}@media(min-width:37.5rem){.site-header--member-logged-in .site-header-container{padding:0 0 0 1.5rem}}.site-header--expanded .site-header-container{background-color:var(--wp--preset--color--cacm-darker-blue)}@media(max-width:47.9375rem){.site-header-logo,.site-header-search{margin-left:auto}}.site-header-member-login-link{font-weight:var(--wp--custom--font-weight-bold)}.site-header-member-login-link[aria-hidden=true]{visibility:hidden}@media(max-width:47.9375rem){.site-header-member-login-link{display:none}}.site-header--member-logged-in .site-header-member-login-link{display:none}.site-header-magazine-menu,.site-header-topics-menu{position:relative}.site-header-magazine-menu-toggle,.site-header-topics-menu-toggle{font-size:.9375rem;font-weight:var(--wp--custom--font-weight-regular);line-height:1.21;align-items:center;cursor:pointer;display:flex;gap:.3333333333rem}@media(min-width:80rem){.site-header-magazine-menu-toggle,.site-header-topics-menu-toggle{font-size:1rem;font-weight:var(--wp--custom--font-weight-regular);line-height:1.21;gap:.65625rem}}.site-header-magazine-menu-toggle[aria-hidden=true],.site-header-topics-menu-toggle[aria-hidden=true]{visibility:hidden}.site-header-magazine-menu-toggle[aria-expanded=true]>svg,.site-header-topics-menu-toggle[aria-expanded=true]>svg{transform:rotate(180deg)}.site-header-magazine-menu-toggle:focus,.site-header-magazine-menu-toggle:hover,.site-header-topics-menu-toggle:focus,.site-header-topics-menu-toggle:hover{text-decoration:underline}.site-header-magazine-menu-expanded,.site-header-topics-menu-expanded{background-color:var(--wp--preset--color--white);border-radius:.3125rem;box-shadow:0 .125rem .25rem -.125rem rgba(24,39,75,.12),0 .25rem .25rem -.125rem rgba(24,39,75,.08);display:flex;gap:1.875rem;justify-content:space-between;padding:1.75rem 1.875rem 1.5rem;position:absolute;right:0;text-align:left;top:2.28125rem;white-space:nowrap;z-index:4}.site-header-magazine-menu-expanded[aria-hidden=true],.site-header-topics-menu-expanded[aria-hidden=true]{display:none}@media(max-width:47.9375rem){.site-header-magazine-menu,.site-header-topics-menu{display:none}}.site-header:not(.site-header--member-logged-in) .site-header-topics-menu-expanded{left:0;right:auto}</style><style class="wp-asset-manager cacm-article-critical" type="text/css">.article-header{left:50%;margin-left:-50vw;margin-right:-50vw;position:relative;right:50%;width:100vw;background-color:var(--cacm--article-header--background-color);border-bottom:1px solid var(--cacm--article-header--border-color);color:var(--cacm--article-header--text-color);margin-bottom:var(--wp--custom--gap)}@media(min-width:48rem){.article-header{grid-area:header;margin-bottom:1.5rem}}.article-header__inner{--wp--custom--vertical-block-rhythm:0.5rem;padding:2rem 0 0}@media(min-width:48rem){.article-header__inner{--wp--custom--vertical-block-rhythm:0.625rem;display:grid;gap:0 var(--cacm--article--gap);grid-template-columns:auto 1fr;padding:var(--cacm--article--gap) 0}}@media(min-width:64rem){.article-header__inner{grid-template-columns:var(--cacm--article--sidebarleft--width) 1fr}}.article-header__section{margin-bottom:var(--wp--custom--vertical-block-rhythm);display:inline-block}.article-header__section:last-child{margin-bottom:0}.article-header__section a{text-decoration:none}.article-header__section a:active,.article-header__section a:focus,.article-header__section a:hover{text-decoration:underline;text-decoration-color:inherit;text-decoration-thickness:1px;text-underline-offset:2.5px}@media(max-width:47.9375rem){.article-header__section{margin-right:.625rem}}@media(min-width:48rem){.article-header__section{grid-column:1/1;text-align:right}}.article-header__section>a{font-size:.875rem;font-weight:700;line-height:1.2142857143;background-color:var(--cacm--article-header--button--background-color);color:var(--cacm--article-header--button--text-color);display:inline-block;padding:.3125rem .625rem;text-transform:uppercase}@media(min-width:48rem){.article-header__figure,.article-header__meta,.article-header__share,.article-header__subtitle,.article-header__title,.article-header__topic-and-issue-section{grid-column:2/2}}.article-header__topic-and-issue-section{--wp--custom--vertical-block-rhythm:0.5rem;margin-bottom:var(--wp--custom--vertical-block-rhythm);font-size:.9375rem;line-height:1.5333333333;font-family:var(--wp--preset--font-family--inter);display:flex;flex-direction:column}.article-header__topic-and-issue-section:last-child{margin-bottom:0}@media(min-width:48rem){.article-header__topic-and-issue-section{--wp--custom--vertical-block-rhythm:1.25rem;align-items:center;flex-direction:row;gap:2rem}}.article-header__issue-section{color:var(--cacm--article-header--text-color)}.article-header__title{margin-bottom:var(--wp--custom--vertical-block-rhythm);font-family:var(--wp--preset--font-family--work-sans);font-size:var(--wp--preset--font-size--work-md);line-height:32.2px;font-weight:var(--wp--custom--font-weight-extrabold)}.article-header__title:last-child{margin-bottom:0}@media(min-width:48rem){.article-header__title{font-size:var(--wp--preset--font-size--work-xxxl);line-height:50.4px;font-weight:var(--wp--custom--font-weight-extrabold)}}@media(min-width:64rem){.article-header__title{font-size:var(--wp--preset--font-size--work-xxl);line-height:44.28px;font-weight:var(--wp--custom--font-weight-extrabold)}}.article-header__subtitle{font-family:var(--wp--preset--font-family--work-sans);font-size:var(--wp--preset--font-size--work-xxs);line-height:22.5px;font-weight:var(--wp--custom--font-weight-bold);font-size:1.3125rem;line-height:1.2380952381;letter-spacing:-.08px;font-weight:var(--wp--custom--font-weight-medium);letter-spacing:-.03125rem;margin-bottom:.125rem}.article-header__subtitle:last-child{margin-bottom:0}.article-header__subtitle a{word-break:break-word}.article-header__subtitle b,.article-header__subtitle strong{font-weight:var(--wp--custom--font-weight-bold)}.article-header__subtitle em,.article-header__subtitle i{font-style:italic}.article-header__subtitle del,.article-header__subtitle strike{text-decoration:line-through}.article-header__subtitle sub,.article-header__subtitle sup{font-size:75%;line-height:0;position:relative}.article-header__subtitle sub{bottom:-.25em}.article-header__subtitle sup{top:-.5em}.article-header__subtitle .monospace,.article-header__subtitle p code{font:var(--wp--custom--font-weight-regular) 90%/1.6 Courier,monospace}@media(min-width:48rem){.article-header__subtitle{--wp--custom--vertical-block-rhythm:1.25rem;font-family:var(--wp--preset--font-family--work-sans);font-size:var(--wp--preset--font-size--work-xs);line-height:25.2px;font-weight:var(--wp--custom--font-weight-bold);font-size:1.5625rem;line-height:1.2;letter-spacing:-.1px;font-weight:var(--wp--custom--font-weight-medium);letter-spacing:-.03125rem;margin:.5rem 0 .625rem}.article-header__subtitle:last-child{margin-bottom:0}}.article-header__meta{margin-bottom:var(--wp--custom--vertical-block-rhythm);font-size:.9375rem;line-height:1.5333333333;font-family:var(--wp--preset--font-family--inter);display:flex;flex-direction:column}.article-header__meta:last-child{margin-bottom:0}.article-header__meta>*{margin-bottom:var(--wp--custom--vertical-block-rhythm)}.article-header__meta>:last-child{margin-bottom:0}.article-header__byline{margin-top:.625rem}.article-header__byline>a{border-bottom:1px dotted var(--cacm--article-header--byline--text-color);color:var(--cacm--article-header--byline--text-color);text-decoration:none}@media(max-width:47.9375rem){.article-header__figure{left:50%;margin-left:-50vw;margin-right:-50vw;position:relative;right:50%;width:100vw}}@media(min-width:48rem){.article-header__figure{display:flex;flex-direction:column}}.article-header__figure .image-wrapper{margin-bottom:var(--wp--custom--vertical-block-rhythm)}.article-header__figure .image-wrapper:last-child{margin-bottom:0}@media(min-width:64rem){.article-header__figure .image-wrapper{grid-column:1/1}}.article-header__figure .image-wrapper>img{-o-object-fit:cover;object-fit:cover}.article-header__figure .video-wrapper{height:100%;overflow:hidden;position:relative;width:100%;padding-bottom:56.25%}.article-header__figure .video-wrapper>iframe{height:100%;left:0;-o-object-fit:contain;object-fit:contain;position:absolute;top:0;width:100%}.article-header__figure .video-wrapper>:not(iframe){display:none}.article-header__figure figcaption{font-size:.9375rem;line-height:1.4666666667;font-family:var(--wp--preset--font-family--inter);color:var(--cacm--article-header--caption--text-color)}@media(max-width:47.9375rem){.article-header__figure figcaption{margin:0 var(--wp--custom--site-edge)}}@media(min-width:64rem){.article-header__figure figcaption{grid-column:2/2;margin:0}}.article-header__figure figcaption>p.article-header--credit{font-style:italic}</style><link rel="preload" href="https://cacm.acm.org/wp-content/themes/cacm/client/src/fonts/inter-v12-latin-regular.woff2" class="wp-asset-manager cacm-font-inter-regular-woff2" as="font" media="all" type="font/woff2" crossorigin /><link rel="preload" href="https://cacm.acm.org/wp-content/themes/cacm/client/src/fonts/inter-v12-latin-700.woff2" class="wp-asset-manager cacm-font-inter-700-woff2" as="font" media="all" type="font/woff2" crossorigin /><link rel="preload" href="https://cacm.acm.org/wp-content/themes/cacm/client/src/fonts/work-sans-bold.woff2?ver=1.0.0" class="wp-asset-manager cacm-font-work-sans-700-woff2" as="style" media="all" type="font/woff2" /><link rel="preload" href="https://cacm.acm.org/wp-content/themes/cacm/client/src/fonts/work-sans-extrabold.woff2?ver=1.0.0" class="wp-asset-manager cacm-font-work-sans-800-woff2" as="style" media="all" type="font/woff2" /><script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/cacm.acm.org\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.7.2"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\u2b1b","\ud83d\udc26\u200b\u2b1b")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id='wp-emoji-styles-inline-css' type='text/css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='https://cacm.acm.org/wp-includes/css/dist/block-library/style.min.css?ver=6.7.2' type='text/css' media='all' />
<style id='wp-parsely-recommendations-style-inline-css' type='text/css'>
.parsely-recommendations-list-title{font-size:1.2em}.parsely-recommendations-list{list-style:none;padding:unset}.parsely-recommendations-cardbody{overflow:hidden;padding:.8em;text-overflow:ellipsis;white-space:nowrap}.parsely-recommendations-cardmedia{padding:.8em .8em 0}

</style>
<link rel='stylesheet' id='mediaelement-css' href='https://cacm.acm.org/wp-includes/js/mediaelement/mediaelementplayer-legacy.min.css?ver=4.2.17' type='text/css' media='all' />
<link rel='stylesheet' id='wp-mediaelement-css' href='https://cacm.acm.org/wp-includes/js/mediaelement/wp-mediaelement.min.css?ver=6.7.2' type='text/css' media='all' />
<style id='jetpack-sharing-buttons-style-inline-css' type='text/css'>
.jetpack-sharing-buttons__services-list{display:flex;flex-direction:row;flex-wrap:wrap;gap:0;list-style-type:none;margin:5px;padding:0}.jetpack-sharing-buttons__services-list.has-small-icon-size{font-size:12px}.jetpack-sharing-buttons__services-list.has-normal-icon-size{font-size:16px}.jetpack-sharing-buttons__services-list.has-large-icon-size{font-size:24px}.jetpack-sharing-buttons__services-list.has-huge-icon-size{font-size:36px}@media print{.jetpack-sharing-buttons__services-list{display:none!important}}.editor-styles-wrapper .wp-block-jetpack-sharing-buttons{gap:0;padding-inline-start:0}ul.jetpack-sharing-buttons__services-list.has-background{padding:1.25em 2.375em}
</style>
<style id='elasticpress-facet-style-inline-css' type='text/css'>
.widget_ep-facet input[type=search],.wp-block-elasticpress-facet input[type=search]{margin-bottom:1rem}.widget_ep-facet .searchable .inner,.wp-block-elasticpress-facet .searchable .inner{max-height:20em;overflow:scroll}.widget_ep-facet .term.hide,.wp-block-elasticpress-facet .term.hide{display:none}.widget_ep-facet .empty-term,.wp-block-elasticpress-facet .empty-term{opacity:.5;position:relative}.widget_ep-facet .empty-term:after,.wp-block-elasticpress-facet .empty-term:after{bottom:0;content:" ";display:block;left:0;position:absolute;right:0;top:0;width:100%;z-index:2}.widget_ep-facet .level-1,.wp-block-elasticpress-facet .level-1{padding-left:20px}.widget_ep-facet .level-2,.wp-block-elasticpress-facet .level-2{padding-left:40px}.widget_ep-facet .level-3,.wp-block-elasticpress-facet .level-3{padding-left:60px}.widget_ep-facet .level-4,.wp-block-elasticpress-facet .level-4{padding-left:5pc}.widget_ep-facet .level-5,.wp-block-elasticpress-facet .level-5{padding-left:75pt}.widget_ep-facet input[disabled],.wp-block-elasticpress-facet input[disabled]{cursor:pointer;opacity:1}.widget_ep-facet .term a,.wp-block-elasticpress-facet .term a{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;position:relative}.widget_ep-facet .term a:hover .ep-checkbox,.wp-block-elasticpress-facet .term a:hover .ep-checkbox{background-color:#ccc}.ep-checkbox{-webkit-box-align:center;-ms-flex-align:center;-ms-flex-negative:0;-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;background-color:#eee;display:-webkit-box;display:-ms-flexbox;display:flex;flex-shrink:0;height:1em;justify-content:center;margin-right:.25em;width:1em}.ep-checkbox:after{border:solid #fff;border-width:0 .125em .125em 0;content:"";display:none;height:.5em;-webkit-transform:rotate(45deg);transform:rotate(45deg);width:.25em}.ep-checkbox.checked{background-color:#5e5e5e}.ep-checkbox.checked:after{display:block}

</style>
<link rel='stylesheet' id='elasticpress-related-posts-block-css' href='https://cacm.acm.org/wp-content/mu-plugins/search/elasticpress/dist/css/related-posts-block-styles.min.css?ver=4.2.2' type='text/css' media='all' />
<style id='global-styles-inline-css' type='text/css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--color--cacm-blue: #337AB5;--wp--preset--color--cacm-link-blue: #015FAC;--wp--preset--color--cacm-dark-blue: #1E4A88;--wp--preset--color--cacm-darker-blue: #29303C;--wp--preset--color--cacm-light-blue: #B6DEFF;--wp--preset--color--cacm-peach: #F7ACA5;--wp--preset--color--cacm-beige: #F5F2DC;--wp--preset--color--cacm-brown: #8C6A54;--wp--preset--color--cacm-green: #5F7D05;--wp--preset--color--cacm-light-green: #EFF7F1;--wp--preset--color--cacm-black: #141414;--wp--preset--color--cacm-gray-100: #FBFCFC;--wp--preset--color--cacm-gray-200: #F8F9FA;--wp--preset--color--cacm-gray-300: #EBEDEF;--wp--preset--color--cacm-gray-500: #A9ACB1;--wp--preset--color--cacm-gray-600: #5A6875;--wp--preset--color--cacm-gray-700: #3D4550;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--gradient--primary-gradient: linear-gradient(90deg, #80C2EF 0%, #337AB5 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--font-size--work-xxxs: 16px;--wp--preset--font-size--work-xxs: 18px;--wp--preset--font-size--work-xs: 21px;--wp--preset--font-size--work-sm: 25px;--wp--preset--font-size--work-md: 28px;--wp--preset--font-size--work-lg: 33px;--wp--preset--font-size--work-xl: 37px;--wp--preset--font-size--work-xxl: 41px;--wp--preset--font-size--work-xxxl: 48px;--wp--preset--font-size--inter-xxxs: 15px;--wp--preset--font-size--inter-xxs: 18px;--wp--preset--font-size--inter-xs: 21px;--wp--preset--font-size--inter-sm: 24px;--wp--preset--font-size--inter-md: 28px;--wp--preset--font-size--inter-lg: 32px;--wp--preset--font-size--inter-xl: 36px;--wp--preset--font-size--inter-xxl: 41px;--wp--preset--font-size--inter-xxxl: 47px;--wp--preset--font-family--inter: 'Inter', helvetica, arial, sans-serif;--wp--preset--font-family--work-sans: 'Work Sans', helvetica, arial, sans-serif;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);--wp--custom--adminbar-height: 0px;--wp--custom--siteheader-height: 72px;--wp--custom--site-edge: 20px;--wp--custom--gap: 40px;--wp--custom--gap-half: calc(var(--wp--custom--gap) / 2);--wp--custom--section-background-color: transparent;--wp--custom--placeholder-background-color: var(--wp--preset--color--cacm-gray-200);--wp--custom--vertical-block-rhythm: 40px;--wp--custom--border-gray: 1px solid var(--wp--preset--color--cacm-gray-300);--wp--custom--font-weight-regular: 400;--wp--custom--font-weight-medium: 500;--wp--custom--font-weight-bold: 700;--wp--custom--font-weight-extrabold: 900;}.wp-block-heading{--wp--preset--font-size--work-xxs: 18px;--wp--preset--font-size--work-xs: 21px;--wp--preset--font-size--work-sm: 25px;--wp--preset--font-size--work-md: 28px;--wp--preset--font-size--work-lg: 33px;--wp--preset--font-size--work-xl: 41px;}:root { --wp--style--global--content-size: 1280px;--wp--style--global--wide-size: 1280px; }:where(body) { margin: 0; }.wp-site-blocks > .alignleft { float: left; margin-right: 2em; }.wp-site-blocks > .alignright { float: right; margin-left: 2em; }.wp-site-blocks > .aligncenter { justify-content: center; margin-left: auto; margin-right: auto; }:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}.is-layout-flow > .alignleft{float: left;margin-inline-start: 0;margin-inline-end: 2em;}.is-layout-flow > .alignright{float: right;margin-inline-start: 2em;margin-inline-end: 0;}.is-layout-flow > .aligncenter{margin-left: auto !important;margin-right: auto !important;}.is-layout-constrained > .alignleft{float: left;margin-inline-start: 0;margin-inline-end: 2em;}.is-layout-constrained > .alignright{float: right;margin-inline-start: 2em;margin-inline-end: 0;}.is-layout-constrained > .aligncenter{margin-left: auto !important;margin-right: auto !important;}.is-layout-constrained > :where(:not(.alignleft):not(.alignright):not(.alignfull)){max-width: var(--wp--style--global--content-size);margin-left: auto !important;margin-right: auto !important;}.is-layout-constrained > .alignwide{max-width: var(--wp--style--global--wide-size);}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}body{padding-top: 0px;padding-right: 0px;padding-bottom: 0px;padding-left: 0px;}a:where(:not(.wp-element-button)){text-decoration: underline;}:root :where(.wp-element-button, .wp-block-button__link){background-color: #32373c;border-width: 0;color: #fff;font-family: inherit;font-size: inherit;line-height: inherit;padding: calc(0.667em + 2px) calc(1.333em + 2px);text-decoration: none;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-cacm-blue-color{color: var(--wp--preset--color--cacm-blue) !important;}.has-cacm-link-blue-color{color: var(--wp--preset--color--cacm-link-blue) !important;}.has-cacm-dark-blue-color{color: var(--wp--preset--color--cacm-dark-blue) !important;}.has-cacm-darker-blue-color{color: var(--wp--preset--color--cacm-darker-blue) !important;}.has-cacm-light-blue-color{color: var(--wp--preset--color--cacm-light-blue) !important;}.has-cacm-peach-color{color: var(--wp--preset--color--cacm-peach) !important;}.has-cacm-beige-color{color: var(--wp--preset--color--cacm-beige) !important;}.has-cacm-brown-color{color: var(--wp--preset--color--cacm-brown) !important;}.has-cacm-green-color{color: var(--wp--preset--color--cacm-green) !important;}.has-cacm-light-green-color{color: var(--wp--preset--color--cacm-light-green) !important;}.has-cacm-black-color{color: var(--wp--preset--color--cacm-black) !important;}.has-cacm-gray-100-color{color: var(--wp--preset--color--cacm-gray-100) !important;}.has-cacm-gray-200-color{color: var(--wp--preset--color--cacm-gray-200) !important;}.has-cacm-gray-300-color{color: var(--wp--preset--color--cacm-gray-300) !important;}.has-cacm-gray-500-color{color: var(--wp--preset--color--cacm-gray-500) !important;}.has-cacm-gray-600-color{color: var(--wp--preset--color--cacm-gray-600) !important;}.has-cacm-gray-700-color{color: var(--wp--preset--color--cacm-gray-700) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-cacm-blue-background-color{background-color: var(--wp--preset--color--cacm-blue) !important;}.has-cacm-link-blue-background-color{background-color: var(--wp--preset--color--cacm-link-blue) !important;}.has-cacm-dark-blue-background-color{background-color: var(--wp--preset--color--cacm-dark-blue) !important;}.has-cacm-darker-blue-background-color{background-color: var(--wp--preset--color--cacm-darker-blue) !important;}.has-cacm-light-blue-background-color{background-color: var(--wp--preset--color--cacm-light-blue) !important;}.has-cacm-peach-background-color{background-color: var(--wp--preset--color--cacm-peach) !important;}.has-cacm-beige-background-color{background-color: var(--wp--preset--color--cacm-beige) !important;}.has-cacm-brown-background-color{background-color: var(--wp--preset--color--cacm-brown) !important;}.has-cacm-green-background-color{background-color: var(--wp--preset--color--cacm-green) !important;}.has-cacm-light-green-background-color{background-color: var(--wp--preset--color--cacm-light-green) !important;}.has-cacm-black-background-color{background-color: var(--wp--preset--color--cacm-black) !important;}.has-cacm-gray-100-background-color{background-color: var(--wp--preset--color--cacm-gray-100) !important;}.has-cacm-gray-200-background-color{background-color: var(--wp--preset--color--cacm-gray-200) !important;}.has-cacm-gray-300-background-color{background-color: var(--wp--preset--color--cacm-gray-300) !important;}.has-cacm-gray-500-background-color{background-color: var(--wp--preset--color--cacm-gray-500) !important;}.has-cacm-gray-600-background-color{background-color: var(--wp--preset--color--cacm-gray-600) !important;}.has-cacm-gray-700-background-color{background-color: var(--wp--preset--color--cacm-gray-700) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-cacm-blue-border-color{border-color: var(--wp--preset--color--cacm-blue) !important;}.has-cacm-link-blue-border-color{border-color: var(--wp--preset--color--cacm-link-blue) !important;}.has-cacm-dark-blue-border-color{border-color: var(--wp--preset--color--cacm-dark-blue) !important;}.has-cacm-darker-blue-border-color{border-color: var(--wp--preset--color--cacm-darker-blue) !important;}.has-cacm-light-blue-border-color{border-color: var(--wp--preset--color--cacm-light-blue) !important;}.has-cacm-peach-border-color{border-color: var(--wp--preset--color--cacm-peach) !important;}.has-cacm-beige-border-color{border-color: var(--wp--preset--color--cacm-beige) !important;}.has-cacm-brown-border-color{border-color: var(--wp--preset--color--cacm-brown) !important;}.has-cacm-green-border-color{border-color: var(--wp--preset--color--cacm-green) !important;}.has-cacm-light-green-border-color{border-color: var(--wp--preset--color--cacm-light-green) !important;}.has-cacm-black-border-color{border-color: var(--wp--preset--color--cacm-black) !important;}.has-cacm-gray-100-border-color{border-color: var(--wp--preset--color--cacm-gray-100) !important;}.has-cacm-gray-200-border-color{border-color: var(--wp--preset--color--cacm-gray-200) !important;}.has-cacm-gray-300-border-color{border-color: var(--wp--preset--color--cacm-gray-300) !important;}.has-cacm-gray-500-border-color{border-color: var(--wp--preset--color--cacm-gray-500) !important;}.has-cacm-gray-600-border-color{border-color: var(--wp--preset--color--cacm-gray-600) !important;}.has-cacm-gray-700-border-color{border-color: var(--wp--preset--color--cacm-gray-700) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-primary-gradient-gradient-background{background: var(--wp--preset--gradient--primary-gradient) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}.has-work-xxxs-font-size{font-size: var(--wp--preset--font-size--work-xxxs) !important;}.has-work-xxs-font-size{font-size: var(--wp--preset--font-size--work-xxs) !important;}.has-work-xs-font-size{font-size: var(--wp--preset--font-size--work-xs) !important;}.has-work-sm-font-size{font-size: var(--wp--preset--font-size--work-sm) !important;}.has-work-md-font-size{font-size: var(--wp--preset--font-size--work-md) !important;}.has-work-lg-font-size{font-size: var(--wp--preset--font-size--work-lg) !important;}.has-work-xl-font-size{font-size: var(--wp--preset--font-size--work-xl) !important;}.has-work-xxl-font-size{font-size: var(--wp--preset--font-size--work-xxl) !important;}.has-work-xxxl-font-size{font-size: var(--wp--preset--font-size--work-xxxl) !important;}.has-inter-xxxs-font-size{font-size: var(--wp--preset--font-size--inter-xxxs) !important;}.has-inter-xxs-font-size{font-size: var(--wp--preset--font-size--inter-xxs) !important;}.has-inter-xs-font-size{font-size: var(--wp--preset--font-size--inter-xs) !important;}.has-inter-sm-font-size{font-size: var(--wp--preset--font-size--inter-sm) !important;}.has-inter-md-font-size{font-size: var(--wp--preset--font-size--inter-md) !important;}.has-inter-lg-font-size{font-size: var(--wp--preset--font-size--inter-lg) !important;}.has-inter-xl-font-size{font-size: var(--wp--preset--font-size--inter-xl) !important;}.has-inter-xxl-font-size{font-size: var(--wp--preset--font-size--inter-xxl) !important;}.has-inter-xxxl-font-size{font-size: var(--wp--preset--font-size--inter-xxxl) !important;}.has-inter-font-family{font-family: var(--wp--preset--font-family--inter) !important;}.has-work-sans-font-family{font-family: var(--wp--preset--font-family--work-sans) !important;}.wp-block-heading.has-work-xxs-font-size{font-size: var(--wp--preset--font-size--work-xxs) !important;}.wp-block-heading.has-work-xs-font-size{font-size: var(--wp--preset--font-size--work-xs) !important;}.wp-block-heading.has-work-sm-font-size{font-size: var(--wp--preset--font-size--work-sm) !important;}.wp-block-heading.has-work-md-font-size{font-size: var(--wp--preset--font-size--work-md) !important;}.wp-block-heading.has-work-lg-font-size{font-size: var(--wp--preset--font-size--work-lg) !important;}.wp-block-heading.has-work-xl-font-size{font-size: var(--wp--preset--font-size--work-xl) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='qm-object-cache-style-css' href='https://cacm.acm.org/wp-content/mu-plugins/qm-plugins/qm-object-cache/css/style.css?ver=0.2' type='text/css' media='all' />
<link rel='stylesheet' id='cacm-global-css' href='https://cacm.acm.org/wp-content/themes/cacm/client/build/css/global.min.css?ver=917aa5edee76e173f6a5' type='text/css' media='all' />
<link rel='stylesheet' id='cacm-article-css' href='https://cacm.acm.org/wp-content/themes/cacm/client/build/css/article.min.css?ver=34500f5fcb3e83888a6c' type='text/css' media='all' />
<link rel="https://api.w.org/" href="https://cacm.acm.org/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://cacm.acm.org/wp-json/wp/v2/digital-library/766488" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://cacm.acm.org/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress 6.7.2" />
<link rel="canonical" href="https://cacm.acm.org/research-highlights/designing-an-efficient-tree-index-on-disaggregated-memory/" />
<link rel='shortlink' href='https://cacm.acm.org/?p=766488' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://cacm.acm.org/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fcacm.acm.org%2Fresearch-highlights%2Fdesigning-an-efficient-tree-index-on-disaggregated-memory%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://cacm.acm.org/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fcacm.acm.org%2Fresearch-highlights%2Fdesigning-an-efficient-tree-index-on-disaggregated-memory%2F&#038;format=xml" />
        <style>
        .getty.aligncenter {
            text-align: center;
        }
        .getty.alignleft {
            float: none;
            margin-right: 0;
        }
        .getty.alignleft > div {
            float: left;
            margin-right: 5px;
        }
        .getty.alignright {
            float: none;
            margin-left: 0;
        }
        .getty.alignright > div {
            float: right;
            margin-left: 5px;
        }
        </style>
        	<style>img#wpstats{display:none}</style>
		<script type="application/ld+json" class="wp-parsely-metadata">{"@context":"https:\/\/schema.org","@type":"NewsArticle","headline":"Designing an Efficient Tree Index on Disaggregated Memory","url":"http:\/\/cacm.acm.org\/research-highlights\/designing-an-efficient-tree-index-on-disaggregated-memory\/","mainEntityOfPage":{"@type":"WebPage","@id":"http:\/\/cacm.acm.org\/research-highlights\/designing-an-efficient-tree-index-on-disaggregated-memory\/"},"thumbnailUrl":"https:\/\/cacm.acm.org\/wp-content\/uploads\/2025\/04\/040825.RH-Designing-an-Efficient-G.jpg?w=150&h=150&crop=1","image":{"@type":"ImageObject","url":"https:\/\/cacm.acm.org\/wp-content\/uploads\/2025\/04\/040825.RH-Designing-an-Efficient-G.jpg"},"articleSection":"Architecture and Hardware","author":[{"@type":"Person","name":"David Roman"}],"creator":["David Roman"],"publisher":{"@type":"Organization","name":"Communications of the ACM","logo":""},"keywords":[],"dateCreated":"2025-04-15T17:00:51Z","datePublished":"2025-04-15T17:00:51Z","dateModified":"2025-04-25T19:44:00Z"}</script><link rel="icon" href="https://cacm.acm.org/wp-content/uploads/2023/11/cropped-cropped-cacm_favicon-1.png?w=32" sizes="32x32" />
<link rel="icon" href="https://cacm.acm.org/wp-content/uploads/2023/11/cropped-cropped-cacm_favicon-1.png?w=192" sizes="192x192" />
<link rel="apple-touch-icon" href="https://cacm.acm.org/wp-content/uploads/2023/11/cropped-cropped-cacm_favicon-1.png?w=180" />
<meta name="msapplication-TileImage" content="https://cacm.acm.org/wp-content/uploads/2023/11/cropped-cropped-cacm_favicon-1.png?w=270" />
</head>

<body class="digital-library-template-default single single-digital-library postid-766488">
<svg xmlns="http://www.w3.org/2000/svg" focusable="false" height="0" role="none" style="left:-9999px;overflow:hidden;position:absolute" viewBox="0 0 0 0" width="0"><symbol id="am-symbol-icon-arrow-left" viewBox="0 0 18 12"><path clip-rule="evenodd" d="M18 6a.643.643 0 0 1-.643.643H2.196l4.046 4.044a.644.644 0 0 1-.91.91L.188 6.456a.643.643 0 0 1 0-.91L5.33.402a.644.644 0 1 1 .91.91L2.197 5.358h15.161A.643.643 0 0 1 18 6Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-arrow-right" viewBox="0 0 14 9"><path clip-rule="evenodd" d="M0 4.5A.5.5 0 0 1 .5 4h11.793L9.146.854a.5.5 0 1 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 1 1-.708-.708L12.293 5H.5a.5.5 0 0 1-.5-.5Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-comment" viewBox="0 0 19 20"><path clip-rule="evenodd" d="M1.781 1.542a.693.693 0 0 0-.693.693v11.876a.693.693 0 0 0 .693.693h2.375c.273 0 .494.221.494.494v2.574l3.96-2.97a.494.494 0 0 1 .296-.098h8.313a.693.693 0 0 0 .693-.694V2.236a.693.693 0 0 0-.693-.693H1.78ZM.592 1.046a1.681 1.681 0 0 1 1.19-.492h15.437A1.681 1.681 0 0 1 18.9 2.235v11.876a1.681 1.681 0 0 1-1.681 1.681H9.07l-4.618 3.464a.494.494 0 0 1-.79-.396v-3.068H1.78A1.682 1.682 0 0 1 .1 14.111V2.235c0-.446.177-.873.492-1.189Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-digital-library" viewBox="43 0 40 40"><g clip-path="url(#a)">
    <path d="m95.468 15.585-1.58 1.579c-.262.263-.584.41-.964.41h-6.813V4.707h6.813c.38 0 .702.146.965.409l1.579 1.579c.263.263.41.585.41.965v6.959c0 .38-.118.702-.41.965zm-1.9-7.544c0-.088-.03-.205-.118-.263l-.76-.76c-.088-.088-.146-.117-.263-.117H88.42v8.45h4.006c.117 0 .205-.03.263-.117l.76-.76a.357.357 0 0 0 .117-.264V8.04zm5.877 9.532v-2.047h2.309V6.754h-2.31V4.708h6.93v2.046h-2.31v8.772h2.31v2.047h-6.93zm19.853 0-.292-1.637-1.228 1.228c-.263.263-.585.41-.965.41h-3.918c-.38 0-.702-.147-.965-.41l-1.579-1.58a1.326 1.326 0 0 1-.409-.964V7.66c0-.38.146-.7.409-.964l1.579-1.579c.263-.263.585-.41.965-.41h5c.38 0 .701.147.965.41l1.666 1.667-1.549 1.55-1.316-1.316c-.088-.088-.146-.117-.263-.117h-4.006c-.117 0-.205.029-.263.117l-.761.76a.36.36 0 0 0-.117.263v6.199c0 .088.03.204.117.263l.761.76c.087.088.146.117.263.117h3.041c.117 0 .204-.03.263-.117l1.754-1.754c.088-.088.117-.146.117-.263v-.995h-3.187V10.06h5.497v4.97l.497 2.573h-2.076v-.029zm5.38 0v-2.047h2.31V6.754h-2.31V4.708h6.93v2.046h-2.31v8.772h2.31v2.047h-6.93zM140.029 6.9v10.644h-2.31V6.9h-3.713V4.708h9.737V6.9h-3.714zm14.299 10.673-1.229-3.216h-5.117l-1.228 3.216h-2.31l4.767-12.865h2.748l4.708 12.865h-2.339zm-3.772-10.38-1.784 5.088h3.567l-1.783-5.088zM160 17.573V4.708h2.31V15.35h6.316v2.193H160v.03zM86.111 35.41V22.543h2.31v10.643h6.316v2.193H86.11v.03zm11.813 0v-2.047h2.31V24.59h-2.31v-2.047h6.93v2.047h-2.31v8.772h2.31v2.046h-6.93zm20.497-1.638-1.257 1.257a1.28 1.28 0 0 1-.936.38h-7.164V22.544h7.164c.38 0 .673.146.936.38l1.257 1.257c.263.263.409.585.409.965v1.755c0 .38-.146.701-.409.965l-1.111 1.11 1.111 1.112c.263.263.409.584.409.965v1.783c0 .322-.146.673-.409.936zm-1.901-8.216c0-.117-.029-.205-.116-.264l-.439-.438c-.088-.088-.146-.117-.263-.117h-4.328v3.129h3.86c.088 0 .205-.03.263-.117l.877-.878c.088-.087.117-.146.117-.263v-1.052h.029zm0 5.789c0-.117-.029-.205-.116-.263l-.936-.936c-.088-.088-.146-.117-.263-.117h-3.831v3.158h4.328c.087 0 .204-.03.263-.117l.439-.438c.087-.088.116-.147.116-.264v-1.023zm14.65 4.065-3.802-4.884a.402.402 0 0 0-.321-.175h-1.404v5.058h-2.31V22.544h7.164c.38 0 .673.146.936.38l1.257 1.257c.263.263.409.585.409.965v2.544c0 .38-.146.702-.409.965l-1.257 1.257c-.263.263-.556.38-.936.38h-.468l3.977 5.059h-2.836v.058zm-.381-9.854c0-.117-.029-.205-.116-.264l-.439-.438c-.088-.088-.146-.117-.263-.117h-4.328v3.392h4.328c.117 0 .204-.03.263-.117l.439-.41c.087-.087.116-.146.116-.263v-1.783zm15.117 9.854-1.228-3.217h-5.117l-1.228 3.216h-2.31l4.766-12.865h2.749l4.708 12.865h-2.34zm-3.772-10.38-1.783 5.087h3.538l-1.755-5.088zm17.106 10.38-3.801-4.884a.405.405 0 0 0-.322-.175h-1.404v5.058h-2.309V22.544h7.163c.38 0 .673.146.936.38l1.257 1.257c.263.263.41.585.41.965v2.544c0 .38-.147.702-.41.965l-1.257 1.257c-.263.263-.556.38-.936.38h-.468l3.977 5.059h-2.836v.058zm-.41-9.854c0-.117-.029-.205-.117-.264l-.438-.438c-.088-.088-.146-.117-.263-.117h-4.328v3.392h4.328c.117 0 .204-.03.263-.117l.438-.41c.088-.087.117-.146.117-.263v-1.783zm11.696 4.152v5.672h-2.31v-5.672l-4.356-7.164h2.514l3.012 5 2.982-5h2.486l-4.328 7.164zM12.193 26.199 7.485 13.363H4.737L0 26.199h2.31l1.199-3.216h5.117l1.199 3.216h2.368zm-4.327-5.263h-3.54l1.784-5.088 1.755 5.088zm15.818 3.187-1.55-1.55-1.315 1.316c-.088.088-.146.117-.263.117h-3.188c-.116 0-.204-.03-.263-.117l-.76-.76a.357.357 0 0 1-.117-.264v-6.17c0-.087.03-.204.117-.262l.76-.76c.088-.088.146-.117.263-.117h3.188c.116 0 .204.029.263.117l1.316 1.315 1.55-1.55-1.668-1.666a1.326 1.326 0 0 0-.964-.41H16.87c-.38 0-.701.147-.965.41l-1.579 1.579a1.326 1.326 0 0 0-.409.965v6.959c0 .38.146.702.41.965l1.578 1.579c.264.263.585.41.965.41h4.182c.38 0 .701-.147.964-.41l1.667-1.696zm15.79 2.076V13.363h-3.538l-3.041 9.941-3.041-9.941h-3.538v12.836h2.251V15.994L31.696 26.2h2.398l3.128-10.205V26.2h2.252zM58.246 3.421l-5.351-1.403-1.404 5.35 3.86-1.052 2.895-2.895zm-4.474 4.532-7.72 2.106 1.17 4.385 6.55-6.49zm26.17 6.988 1.432-5.467-5.35-1.375 1.081 4.065 2.837 2.777zm-33.1 10.205-1.433 5.38 5.351 1.375-1.052-3.89-2.866-2.865zM73.333 2.66 68.89 3.89l6.579 6.579-2.135-7.807zm-.409 29.416 7.836-2.134-1.228-4.474-6.608 6.608zM68.45 36.55l5.468 1.433 1.404-5.351-4.065 1.081-2.807 2.837zm-15 .79 4.386-1.17-6.462-6.492 2.076 7.661zm26.2-13.656L83.332 20 71.637 8.304l-4.561-4.561L63.333 0l-6.52 6.52-9.708 9.708L43.333 20l6.58 6.579 9.707 9.707L63.333 40l6.492-6.491 9.824-9.825zm-16.434-.643c0 .35-.117.672-.38.906l-1.491 1.492c-.263.263-.556.38-.906.38h-6.462V13.626h6.462c.35 0 .672.117.906.38l1.491 1.491c.263.263.38.556.38.907v6.637zm3.597-9.415h2.193v10.117H75v2.076h-8.187V13.626z"></path>
    <path d="M60.205 15.819a.37.37 0 0 0-.264-.117h-3.8v8.04h3.8c.117 0 .176-.029.264-.116l.701-.702c.059-.088.117-.175.117-.263v-5.877a.357.357 0 0 0-.117-.264l-.701-.701z"></path>
  </g><defs>
    <clipPath id="a">
      <path d="M0 0h174.854v40H0z"></path>
    </clipPath>
  </defs></symbol><symbol id="am-symbol-icon-pdf-download" viewBox="0 0 19 20"><path clip-rule="evenodd" d="M1.781 1.542a.693.693 0 0 0-.693.693v13.063a.693.693 0 0 0 .693.694h4.75a.494.494 0 1 1 0 .988h-4.75A1.682 1.682 0 0 1 .1 15.298V2.235A1.681 1.681 0 0 1 1.78.554h8.415c.446 0 .873.177 1.188.492l2.274 2.274c.315.315.492.743.492 1.188v2.477a.494.494 0 1 1-.988 0V4.508a.694.694 0 0 0-.203-.49m0 0-2.273-2.273a.694.694 0 0 0-.49-.203H1.78m11.875 8.312a4.256 4.256 0 1 0 0 8.512 4.256 4.256 0 0 0 0-8.512Zm-5.244 4.257a5.244 5.244 0 1 1 10.488 0 5.244 5.244 0 0 1-10.488 0Zm5.244-2.87c.273 0 .494.222.494.495v3.557l.938-.938a.494.494 0 0 1 .699.698l-1.782 1.782a.494.494 0 0 1-.698 0l-1.781-1.782a.494.494 0 0 1 .698-.698l.938.938v-3.557c0-.273.221-.495.494-.495Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-print" viewBox="0 0 19 20"><path clip-rule="evenodd" d="M5.344 1.541a.693.693 0 0 0-.694.693v3.069h9.7V2.234a.693.693 0 0 0-.694-.693H5.344Zm9.994 3.762V2.234A1.681 1.681 0 0 0 13.656.553H5.344a1.681 1.681 0 0 0-1.682 1.681v3.069h-1.88A1.682 1.682 0 0 0 .1 6.984v5.938a1.682 1.682 0 0 0 1.681 1.681h1.881v4.257c0 .272.221.494.494.494h10.688a.494.494 0 0 0 .494-.494v-4.256h1.88a1.682 1.682 0 0 0 1.682-1.682V6.984a1.681 1.681 0 0 0-1.681-1.681h-1.881ZM1.78 6.291a.693.693 0 0 0-.693.693v5.938a.694.694 0 0 0 .693.694h1.881v-3.069c0-.273.221-.494.494-.494h10.688c.273 0 .494.221.494.494v3.069h1.88a.694.694 0 0 0 .694-.694V6.984a.693.693 0 0 0-.693-.693H1.78Zm12.569 4.75h-9.7v7.325h9.7V11.04ZM2.475 8.172c0-.273.22-.494.494-.494h1.187a.494.494 0 1 1 0 .988H2.97a.494.494 0 0 1-.494-.494Zm3.562 4.75c0-.273.221-.494.494-.494h5.938a.494.494 0 1 1 0 .988H6.53a.494.494 0 0 1-.494-.494Zm0 2.375c0-.273.221-.494.494-.494h4.157a.494.494 0 1 1 0 .988H6.53a.494.494 0 0 1-.494-.494Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-share" viewBox="0 0 19 18"><path clip-rule="evenodd" d="M14.844 1.73a2.475 2.475 0 1 0 0 4.949 2.475 2.475 0 0 0 0-4.95ZM11.38 4.203a3.463 3.463 0 1 1 .447 1.703L7.531 7.58a3.473 3.473 0 0 1-.087 1.873l4.555 2.278a3.463 3.463 0 1 1-.442.883L7 10.335a3.463 3.463 0 1 1 .171-3.677l4.298-1.671a3.473 3.473 0 0 1-.089-.783Zm1.242 8.407a2.475 2.475 0 1 0 4.441 2.187 2.475 2.475 0 0 0-4.44-2.187ZM4.156 5.886a2.475 2.475 0 1 0 0 4.95 2.475 2.475 0 0 0 0-4.95Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-bookmark" viewBox="0 0 13 19"><path clip-rule="evenodd" d="M12.05.948c-.293-.32-.7-.494-1.114-.494H2.007c-.421 0-.821.175-1.121.494a1.73 1.73 0 0 0-.457 1.186v15.488c0 .198.05.388.142.563.1.167.236.304.408.395a.89.89 0 0 0 .535.122.956.956 0 0 0 .522-.19l2.464-1.84h.007l1.964-1.459 1.958 1.46h.014l2.464 1.839c.15.114.329.182.522.19a.89.89 0 0 0 .535-.122 1.03 1.03 0 0 0 .4-.395c.1-.175.15-.365.15-.563V2.134c0-.449-.164-.874-.464-1.186ZM3.771 16.011 1.5 17.7s-.029.015-.05.022c-.014 0-.029-.007-.043-.015-.021-.008-.028-.023-.043-.038-.007-.015-.007-.03-.007-.053V2.134a.74.74 0 0 1 .186-.494.639.639 0 0 1 .464-.198h1.764v14.57Zm4.465-.691-1.5-1.125a.462.462 0 0 0-.536 0L4.7 15.32V1.442h3.536V15.32Zm3.35 2.378v-.053s-.015.015-.015.023a.089.089 0 0 1-.035.038c-.015 0-.036.015-.05.015-.015-.007-.036-.007-.05-.023l-2.272-1.687V1.442h1.772c.171 0 .335.069.457.198a.747.747 0 0 1 .193.494v15.564Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-bookmarked" viewBox="0 0 17 25"><path clip-rule="evenodd" d="M16.27.65C15.86.23 15.29 0 14.71 0H2.21A2.201 2.201 0 0 0 0 2.21v20.38c0 .26.07.51.2.74.14.22.33.4.57.52.23.13.49.18.75.16.26-.01.51-.1.73-.25l3.45-2.42h.01l1.15-.8 1.6-1.12 1.6 1.12 1.14.8h.02l3.45 2.42c.21.15.46.24.73.25.26.02.52-.03.75-.16.23-.12.43-.3.56-.52.14-.23.21-.48.21-.74V2.21c0-.59-.23-1.15-.65-1.56ZM4.68 20.47 1.5 22.69s-.04.02-.07.03c-.02 0-.04-.01-.06-.02-.03-.01-.04-.03-.06-.05V2.21c0-.24.09-.47.26-.65.17-.17.41-.26.65-.26h2.47v19.17h-.01Zm10.94 2.22v-.07s-.02.02-.02.03a.12.12 0 0 1-.05.05c-.02 0-.05.02-.07.02-.02-.01-.05-.01-.07-.03l-3.18-2.22V1.3h2.48a.9.9 0 0 1 .64.26c.17.18.27.41.27.65v20.48Z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-chevron-down" viewBox="0 0 16 16"><path d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z" fill-rule="evenodd"></path></symbol><symbol id="am-symbol-icon-search" viewBox="0 0 24 24"><path d="m23 21.85-6.145-6.146a8.966 8.966 0 1 0-1.151 1.15L21.849 23 23 21.85ZM2.656 9.98a7.324 7.324 0 1 1 7.324 7.324A7.332 7.332 0 0 1 2.656 9.98Z" fill="#015FAC"></path></symbol><symbol id="am-symbol-cacm-logo-small"><path d="M48.75 24c0 13.255-10.745 24-24 24s-24-10.745-24-24 10.745-24 24-24 24 10.745 24 24Z" fill="#fff"></path><path d="m24.998 9-15 15 15 15 15-15-15-15Z" fill="#027BA3"></path><path d="M34.196 24A9.195 9.195 0 0 1 25 33.196 9.195 9.195 0 0 1 15.804 24 9.195 9.195 0 0 1 25 14.804 9.195 9.195 0 0 1 34.196 24Z" fill="#fff"></path><path d="M33.28 24A8.275 8.275 0 0 1 25 32.275 8.275 8.275 0 0 1 16.72 24c0-4.57 3.705-8.28 8.28-8.28A8.276 8.276 0 0 1 33.28 24Z" fill="#027BA3"></path><path d="M20.18 25.613c-.084.07-.163.133-.23.191a1.641 1.641 0 0 1-.596.292c-.104.025-.25.041-.441.041-.35 0-.642-.116-.875-.354a1.219 1.219 0 0 1-.35-.891c0-.296.058-.534.175-.717.116-.183.287-.325.508-.433.225-.109.492-.184.804-.225.313-.042.646-.075 1.004-.1v-.021c0-.221-.083-.371-.241-.454-.163-.084-.405-.125-.73-.125-.145 0-.316.025-.512.079s-.388.12-.571.204h-.104v-.967c.12-.037.32-.079.596-.125.275-.05.55-.075.829-.075.687 0 1.187.117 1.5.342.312.23.47.575.47 1.046v2.712h-1.241v-.42h.004Zm0-.621v-.825c-.21.02-.38.041-.505.054-.13.017-.258.046-.38.091a.561.561 0 0 0-.253.171.488.488 0 0 0-.088.305c0 .187.05.312.15.383.1.07.246.104.442.104a.802.802 0 0 0 .329-.075c.113-.05.212-.12.304-.208ZM24.154 26.137c-.329 0-.633-.041-.904-.125a1.897 1.897 0 0 1-.712-.383c-.2-.17-.355-.387-.467-.65a2.336 2.336 0 0 1-.167-.925c0-.379.058-.704.183-.97.121-.267.284-.488.492-.659.2-.167.433-.288.7-.367a2.98 2.98 0 0 1 1.504-.046c.221.05.442.134.667.242v1.067h-.158c-.05-.046-.113-.1-.184-.154a1.673 1.673 0 0 0-.237-.159 1.349 1.349 0 0 0-.683-.175c-.317 0-.563.109-.738.33-.175.22-.262.516-.262.891 0 .4.091.696.279.892.187.196.433.296.741.296.155 0 .296-.017.413-.055a1.27 1.27 0 0 0 .517-.28c.058-.049.112-.099.154-.14h.158v1.062l-.246.108a2.925 2.925 0 0 1-.629.175 2.776 2.776 0 0 1-.417.026h-.004ZM30.867 26.033v-1.991c0-.196 0-.363-.013-.496a1.102 1.102 0 0 0-.062-.33.386.386 0 0 0-.167-.187.715.715 0 0 0-.317-.058.665.665 0 0 0-.279.062 1.99 1.99 0 0 0-.304.175v2.83h-1.242v-1.992c0-.192 0-.358-.012-.496a1 1 0 0 0-.067-.333.386.386 0 0 0-.166-.188.707.707 0 0 0-.313-.058c-.1 0-.2.025-.3.07-.096.05-.192.105-.283.167v2.83H26.1v-3.984h1.242v.438c.204-.175.396-.309.575-.405a1.27 1.27 0 0 1 .604-.145c.246 0 .458.058.642.175.183.116.325.287.42.516.238-.22.467-.391.675-.512.213-.121.425-.18.642-.18.183 0 .35.03.496.088.146.058.27.146.37.267.113.129.197.279.25.454.055.175.084.408.084.692v2.596h-1.242l.009-.005Z" fill="#fff"></path></symbol><symbol id="am-symbol-cacm-logo" viewBox="30.79 34.55 548.86 88.05"><path d="M54.75 71.41c-.8.8-1.77 1.2-2.85 1.2H39.52c-1.08 0-2.05-.4-2.85-1.2l-4.68-4.68c-.8-.8-1.2-1.77-1.2-2.85v-20.6c0-1.08.4-2.05 1.2-2.85l4.68-4.68c.8-.8 1.77-1.2 2.85-1.2H51.9c1.08 0 2.05.4 2.85 1.2l4.96 4.96-4.62 4.56-3.88-3.88c-.23-.23-.46-.34-.8-.34H41c-.34 0-.57.11-.8.34l-2.23 2.23c-.23.23-.34.51-.34.8v18.31c0 .29.11.57.34.8l2.23 2.23c.23.23.46.34.8.34h9.41c.34 0 .57-.11.8-.34l3.88-3.88 4.62 4.56-4.96 4.97zm44.5-4.68-4.68 4.68c-.8.8-1.77 1.2-2.85 1.2H76.83c-1.08 0-2.05-.4-2.85-1.2l-4.68-4.68c-.8-.8-1.2-1.77-1.2-2.85v-20.6c0-1.08.4-2.05 1.2-2.85l4.68-4.68c.8-.8 1.77-1.2 2.85-1.2h14.89c1.08 0 2.05.4 2.85 1.2l4.68 4.68c.8.8 1.2 1.77 1.2 2.85v20.6c0 1.08-.4 2.05-1.2 2.85zM93.6 44.42c0-.29-.11-.57-.34-.8l-2.23-2.23c-.23-.23-.46-.34-.8-.34H78.31c-.34 0-.57.11-.8.34l-2.23 2.23c-.23.23-.34.51-.34.8v18.31c0 .29.11.57.34.8l2.23 2.23c.23.23.46.34.8.34h11.92c.34 0 .57-.11.8-.34l2.23-2.23c.23-.23.34-.51.34-.8V44.42zm50.44 28.19V42.37l-9.3 30.24h-7.07l-9.3-30.24v30.24h-6.68V34.55h10.5l9.01 29.5 9.01-29.5h10.5V72.6h-6.67zm52.65 0V42.37l-9.3 30.24h-7.07l-9.3-30.24v30.24h-6.68V34.55h10.5l9.01 29.5 9.01-29.5h10.5V72.6h-6.67zm46.66-5.88-4.68 4.68c-.8.8-1.77 1.2-2.85 1.2h-11.47c-1.08 0-2.05-.4-2.85-1.2l-4.68-4.68c-.8-.8-1.2-1.77-1.2-2.85V34.55h6.85v28.18c0 .29.11.57.34.8l2.23 2.23c.23.23.46.34.8.34h8.5c.34 0 .57-.11.8-.34l2.23-2.23c.23-.23.34-.51.34-.8V34.55h6.85v29.33c-.01 1.08-.41 2.05-1.21 2.85zm32.69 5.88-12.55-29.5v29.5h-6.67V34.55h9.7l12.55 29.5v-29.5h6.67V72.6h-9.7zm20.82 0v-6.05h6.85V40.6h-6.85v-6.05h20.54v6.05h-6.85v25.96h6.85v6.05h-20.54zm53.46-1.2c-.8.8-1.77 1.2-2.85 1.2h-12.38c-1.08 0-2.05-.4-2.85-1.2l-4.68-4.68c-.8-.8-1.2-1.77-1.2-2.85v-20.6c0-1.08.4-2.05 1.2-2.85l4.68-4.68c.8-.8 1.77-1.2 2.85-1.2h12.38c1.08 0 2.05.4 2.85 1.2l4.96 4.96-4.62 4.56-3.88-3.88c-.23-.23-.46-.34-.8-.34h-9.41c-.34 0-.57.11-.8.34l-2.22 2.23c-.23.23-.34.51-.34.8v18.31c0 .29.11.57.34.8l2.22 2.23c.23.23.46.34.8.34h9.41c.34 0 .57-.11.8-.34l3.88-3.88 4.62 4.56-4.96 4.97zm39.47 1.2-3.59-9.53h-15.18l-3.6 9.53h-6.85l14.09-38.05h8.1l13.98 38.05h-6.95zm-11.18-30.7-5.25 15.06h10.5l-5.25-15.06zm35.94-.85v31.55h-6.85V41.06h-11.01v-6.5h28.87v6.5h-11.01zm19.27 31.55v-6.05h6.85V40.6h-6.85v-6.05h20.54v6.05h-6.85v25.96h6.85v6.05h-20.54zm61.89-5.88-4.68 4.68c-.8.8-1.77 1.2-2.85 1.2h-14.89c-1.08 0-2.05-.4-2.85-1.2l-4.68-4.68c-.8-.8-1.2-1.77-1.2-2.85v-20.6c0-1.08.4-2.05 1.2-2.85l4.68-4.68c.8-.8 1.77-1.2 2.85-1.2h14.89c1.08 0 2.05.4 2.85 1.2l4.68 4.68c.8.8 1.2 1.77 1.2 2.85v20.6c0 1.08-.4 2.05-1.2 2.85zm-5.64-22.31c0-.29-.11-.57-.34-.8l-2.22-2.23c-.23-.23-.46-.34-.8-.34h-11.92c-.34 0-.57.11-.8.34l-2.22 2.23c-.23.23-.34.51-.34.8v18.31c0 .29.12.57.34.8l2.22 2.23c.23.23.46.34.8.34h11.92c.34 0 .57-.11.8-.34l2.22-2.23c.23-.23.34-.51.34-.8V44.42zm37.65 28.19-12.55-29.5v29.5h-6.68V34.55h9.7l12.55 29.5v-29.5h6.68V72.6h-9.7zm50.72-5.88-4.68 4.68c-.8.8-1.77 1.2-2.85 1.2h-15.92c-1.08 0-2.05-.4-2.85-1.2l-4.85-4.85 4.56-4.62 3.82 3.82c.23.23.46.34.8.34h12.95c.34 0 .57-.11.8-.34l2.22-2.23c.23-.23.34-.51.34-.8v-3.65c0-.57-.51-1.08-1.08-1.14l-20.48-2.74c-2.23-.29-3.94-2.28-3.94-4.45v-7.47c0-1.08.4-2.05 1.2-2.85l4.68-4.68c.8-.8 1.77-1.2 2.85-1.2h15.92c1.08 0 2.05.4 2.85 1.2l4.85 4.85-4.56 4.62-3.82-3.82c-.23-.23-.46-.34-.8-.34H557.5c-.34 0-.57.11-.8.34l-2.22 2.23c-.23.23-.34.51-.34.8v3.65c0 .57.46 1.08 1.03 1.14l20.54 2.74c2.22.29 3.94 2.28 3.94 4.45v7.47c-.01 1.08-.41 2.05-1.21 2.85zM263.05 90.51l-.88.88c-.15.15-.33.22-.54.22h-2.79a.79.79 0 0 1-.54-.22l-.88-.88a.732.732 0 0 1-.22-.54v-3.86c0-.2.07-.38.22-.54l.88-.88c.15-.15.33-.22.54-.22h2.79c.2 0 .39.07.54.22l.88.88c.15.15.22.33.22.54v3.86c0 .2-.07.39-.22.54zm-1.06-4.19a.22.22 0 0 0-.06-.15l-.42-.42a.204.204 0 0 0-.15-.06h-2.24c-.06 0-.11.02-.15.06l-.42.42a.22.22 0 0 0-.06.15v3.43c0 .05.02.11.06.15l.42.42c.04.04.09.06.15.06h2.24c.06 0 .11-.02.15-.06l.42-.42c.04-.04.06-.1.06-.15v-3.43zm5.41 2.33v2.96h-1.28v-7.13h4.78v1.22h-3.5v1.73h3.5v1.22h-3.5zm12.04-2.96v5.92h-1.28v-5.92h-2.06v-1.22h5.41v1.22h-2.07zm8.45 5.92v-2.96h-2.86v2.96h-1.28v-7.13h1.28v2.95h2.86v-2.95h1.28v7.13h-1.28zm4.43 0v-7.13h4.78v1.22h-3.5v1.73h3.5v1.22h-3.5v1.74h3.5v1.22h-4.78zm30.16 30.99-3.59-9.53h-15.18l-3.59 9.53h-6.85l14.09-38.05h8.1l13.98 38.05h-6.96zM311.3 91.91l-5.25 15.06h10.5l-5.25-15.06zm49.12 29.49c-.8.8-1.77 1.2-2.85 1.2h-12.38c-1.08 0-2.05-.4-2.85-1.2l-4.68-4.68c-.8-.8-1.2-1.77-1.2-2.85v-20.6c0-1.08.4-2.05 1.2-2.85l4.68-4.68c.8-.8 1.77-1.2 2.85-1.2h12.38c1.08 0 2.05.4 2.85 1.2l4.96 4.96-4.62 4.56-3.88-3.88c-.23-.23-.46-.34-.8-.34h-9.41c-.34 0-.57.11-.8.34l-2.22 2.23c-.23.23-.34.51-.34.8v18.31c0 .29.12.57.34.8l2.22 2.23c.23.23.46.34.8.34h9.41c.34 0 .57-.12.8-.34l3.88-3.88 4.62 4.56-4.96 4.97zm47.51 1.2V92.36l-9.3 30.24h-7.07l-9.3-30.24v30.24h-6.68V84.55h10.5l9.01 29.5 9.01-29.5h10.5v38.05h-6.67z"></path></symbol><symbol id="am-symbol-icon-social-facebook"><path d="m22.723 20 .445-2.896h-2.779v-1.879c0-.792.388-1.564 1.633-1.564h1.263v-2.465S22.139 11 21.043 11c-2.289 0-3.784 1.387-3.784 3.898v2.206h-2.544V20h2.544v7h3.13v-7h2.334Z"></path></symbol><symbol id="am-symbol-icon-social-twitter"><path d="M27.613 13.657a7.057 7.057 0 0 1-2.03.557 3.54 3.54 0 0 0 1.555-1.955 7.08 7.08 0 0 1-2.245.857A3.53 3.53 0 0 0 22.313 12c-2.282 0-3.958 2.13-3.442 4.34a10.033 10.033 0 0 1-7.285-3.694 3.54 3.54 0 0 0 1.093 4.72 3.52 3.52 0 0 1-1.6-.442c-.038 1.637 1.135 3.169 2.835 3.51a3.542 3.542 0 0 1-1.596.06 3.538 3.538 0 0 0 3.301 2.454 7.106 7.106 0 0 1-5.232 1.465A10.006 10.006 0 0 0 15.804 26c6.562 0 10.27-5.542 10.046-10.513a7.195 7.195 0 0 0 1.763-1.83Z"></path></symbol><symbol id="am-symbol-icon-social-linkedin"><path d="M14.117 12.74c0 .96-.773 1.738-1.726 1.738a1.732 1.732 0 0 1-1.725-1.739c0-.96.772-1.739 1.725-1.739.953 0 1.726.78 1.726 1.74Zm.013 3.13h-3.478V27h3.479V15.87Zm5.553 0h-3.456V27h3.457v-5.843c0-3.248 4.194-3.514 4.194 0V27h3.47v-7.048c0-5.481-6.207-5.282-7.665-2.583v-1.5Z"></path></symbol><symbol id="am-symbol-icon-social-reddit"><path d="M27.764 21.071v.613c0 3.368-3.879 6.022-8.676 6.022-4.797 0-8.676-2.654-8.676-6.022v-.613c-1.122-.51-1.53-1.735-1.122-2.857.306-.817 1.123-1.327 1.939-1.225.612 0 1.123.204 1.531.612 1.735-1.122 3.776-1.837 5.818-1.837l1.122-5.103c0-.102.102-.204.102-.204.102-.102.205-.102.307-.102l3.572.816c.408-.714 1.327-1.123 2.041-.714.715.408 1.123 1.326.715 2.04-.409.715-1.327 1.124-2.042.715-.51-.204-.816-.714-.816-1.326l-3.164-.715-1.02 4.593c2.245.102 4.286.817 5.715 1.837.816-.816 2.245-.816 3.062 0 .408.408.612.919.612 1.531.306.919-.306 1.633-1.02 1.94Zm-11.942 1.123c.816 0 1.53-.714 1.53-1.53 0-.817-.714-1.532-1.53-1.532-.817 0-1.531.715-1.531 1.531 0 .817.612 1.531 1.53 1.531Zm7.042 1.94c-.204-.205-.408-.205-.51 0-.612.714-2.041.918-3.062.918-1.02 0-2.45-.204-3.062-.919-.204-.204-.408-.204-.51 0-.204.204-.204.409 0 .51 1.02 1.021 3.062 1.123 3.674 1.123.613 0 2.552-.102 3.675-1.122-.102-.102-.102-.306-.205-.51Zm1.225-3.47c0-.817-.714-1.532-1.53-1.532-.817 0-1.532.715-1.532 1.531 0 .817.715 1.531 1.531 1.531.817 0 1.531-.714 1.531-1.53Z"></path></symbol><symbol id="am-symbol-cacm-avatar-blank" viewBox="0 0 40 40"><g>
		<circle cx="20" cy="20" fill="var(--wp--preset--color--cacm-link-blue)" r="19" stroke="var(--wp--preset--color--cacm-link-blue)" stroke-width="2"></circle>
		<path clip-rule="evenodd" d="M5 33.23v-.73c0-4.987 9.994-7.5 15-7.5s15 2.513 15 7.5v.73A19.952 19.952 0 0 1 20 40a19.952 19.952 0 0 1-15-6.77ZM20 8.333a7.498 7.498 0 0 0-7.5 7.5c0 4.143 3.356 7.5 7.5 7.5s7.5-3.357 7.5-7.5c0-4.144-3.356-7.5-7.5-7.5Z" fill="var(--wp--preset--color--cacm-gray-200)" fill-rule="evenodd"></path>
	</g></symbol></svg><div id="page" class="site">
	<a class="skip-link" href="#content">Skip to content</a>

	<div class="site-header-wrapper" data-component="siteHeader">
		<header id="masthead" class="site-header site-header--no-js">
			<div class="site-header-container">
				
<button class="site-header-hamburger" aria-label="Main Menu">
	<span class="site-header-hamburger-closed">
		<svg xmlns="http://www.w3.org/2000/svg" version="1.2" viewBox="0 0 25 25">
	<path d="M.2.2h24.6v2.6H.2zm0 11h24.6v2.7H.2zm0 11h24.6v2.6H.2z" style="fill:#1a1a1a"/>
</svg>
 
	</span>
	<span class="site-header-hamburger-open">
		<svg xmlns="http://www.w3.org/2000/svg" version="1.2" viewBox="0 0 25 25">
	<path d="M1.7.9 24 23.8m-23 0L23.3.9" style="fill:none;stroke:#fff;stroke-width:1.3"/>
</svg>
 
	</span>
</button>
				<a class="site-header-logo" aria-label="Home" href="https://cacm.acm.org">
					<svg aria-hidden="true" focusable="false" width="548" height="88" fill="#000"><use href="#am-symbol-cacm-logo"></use></svg>					<svg aria-hidden="true" focusable="false" width="548" height="88" fill="#FFF"><use href="#am-symbol-cacm-logo"></use></svg>				</a>
				
<div class="site-header-topics-menu">
	<button class="site-header-topics-menu-toggle">
		Explore Topics		<svg xmlns="http://www.w3.org/2000/svg" width="14" height="8" fill="none">
	<path stroke="#1A1A1A" stroke-width="1.5" d="m1.5 1.5 5.5 5 5.5-5"/>
</svg>
 
	</button>
	<nav role="navigation" aria-label="Topics Menu" class="site-header-topics-menu-expanded" aria-hidden="true">
		<ul class="site-header-topics-menu-list">
																<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/architecture-and-hardware/">
							Architecture and Hardware						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/artificial-intelligence-machine-learning/">
							Artificial Intelligence and Machine Learning						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/computer-history/">
							Computer History						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/computing-applications/">
							Computing Applications						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/computing-profession/">
							Computing Profession						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/data-and-information/">
							Data and Information						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/education/">
							Education						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/hci/">
							HCI						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/philosophy-of-computing/">
							Philosophy of Computing						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/security-and-privacy/">
							Security and Privacy						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/society/">
							Society						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/software-engineering-and-programming-languages/">
							Software Engineering and Programming Languages						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/systems-and-networking/">
							Systems and Networking						</a>
					</li>
																				<li class="site-header-topics-menu-list-item">
						<a href="https://cacm.acm.org/category/theory/">
							Theory						</a>
					</li>
									</ul>
	</nav>
</div>
				
<div class="site-header-magazine-menu">
	<button class="site-header-magazine-menu-toggle">
		Latest Issue		<svg xmlns="http://www.w3.org/2000/svg" width="14" height="8" fill="none">
	<path stroke="#1A1A1A" stroke-width="1.5" d="m1.5 1.5 5.5 5 5.5-5"/>
</svg>
	</button>
	<nav role="navigation" aria-label="Magazine Menu" class="site-header-magazine-menu-expanded" aria-hidden="true">
					<a href="https://cacm.acm.org/issue/april-2025/">
				<figure class="site-header-magazine-menu-expanded-image">
					<div class="image-wrapper"><img width="1000" height="1338" src="https://cacm.acm.org/wp-content/uploads/2025/03/April-2025-Cover-1000x1338-1.jpg?w=1000" class="attachment-original size-original" alt="April 2025 CACM cover" loading="lazy" decoding="async" srcset="https://cacm.acm.org/wp-content/uploads/2025/03/April-2025-Cover-1000x1338-1.jpg 1000w, https://cacm.acm.org/wp-content/uploads/2025/03/April-2025-Cover-1000x1338-1.jpg?resize=224,300 224w, https://cacm.acm.org/wp-content/uploads/2025/03/April-2025-Cover-1000x1338-1.jpg?resize=768,1028 768w, https://cacm.acm.org/wp-content/uploads/2025/03/April-2025-Cover-1000x1338-1.jpg?resize=765,1024 765w" sizes="auto, (max-width: 1000px) 100vw, 1000px" /></div>				</figure>
			</a>
				<div class="site-header-magazine-menu-expanded-text">
							<div class="site-header-magazine-menu-expanded-current">
					<h2 class="site-header-magazine-menu-expanded-heading">
						Latest Issue					</h2>
					<a href="https://cacm.acm.org/issue/april-2025/" class="site-header-magazine-menu-expanded-issue"><b>April 2025</b>, Vol. 68 No. 4</a>
				</div>
										<div class="site-header-magazine-menu-expanded-previous">
					<h2 class="site-header-magazine-menu-expanded-heading">
						Previous Issue					</h2>
					<a href="https://cacm.acm.org/issue/march-2025/" class="site-header-magazine-menu-expanded-issue"><b>March 2025</b>, Vol. 68 No. 3</a>
				</div>
						<a href="https://cacm.acm.org/issues" class="site-header-magazine-menu-expanded-link">
				Explore the archive				<svg xmlns="http://www.w3.org/2000/svg" width="12" height="10" fill="none" aria-hidden="true" tabindex="-1">
	<path fill="#000" d="m7 0-.715.697 3.79 3.803H0v1h10.075l-3.79 3.787L7 10l5-5-5-5Z"/>
</svg>
			</a>
		</div>
	</nav>
</div>
				
<a href="https://cacm.acm.org/?s=" aria-label="Search" class="site-header-search">
	<span class="site-header-search-text">
		Search	</span>
	<svg aria-hidden="true" focusable="false" width="24" height="24" class="site-header-search-icon"><use href="#am-symbol-icon-search"></use></svg></a>
				<nav class="site-header-membership-nav">
	<button class="site-header-membership-nav__button">
		<span
			class="site-header-membership-nav__button-text">Open Membership Navigation</span>
		<span class="site-header-membership-nav__button-icon">
			<svg aria-hidden="true" focusable="false" width="40" height="40" tabindex="-1"><use href="#am-symbol-cacm-avatar-blank"></use></svg>		</span>
	</button>
	<div class="site-header-membership-nav__menu-container" aria-hidden="true">
		<ul class="site-header-membership-nav__menu">
			<li class="site-header-membership-nav__menu-item">
				<a href="https://cacm.acm.org/account/settings">Settings</a>
			</li>
						<li class="site-header-membership-nav__menu-item">
				<a href="https://cacm.acm.org/logout/">Sign Out</a>
			</li>
		</ul>
	</div>
</nav>
<a class="site-header-member-login-link" href="https://cacm.acm.org/wp-login.php?saml_sso">Sign In</a>
<a href="https://cacm.acm.org/join-acm" class="site-header-cta-membership">
	<div class="site-header-cta-membership-container">
		<div class="site-header-cta-membership-text">
			Join ACM			<svg xmlns="http://www.w3.org/2000/svg" width="12" height="10" fill="none" aria-hidden="true" tabindex="-1">
	<path fill="#000" d="m7 0-.715.697 3.79 3.803H0v1h10.075l-3.79 3.787L7 10l5-5-5-5Z"/>
</svg>
		</div>
		<div class="site-header-cta-membership-logo">
			<svg aria-hidden="true" focusable="false" width="48" height="48"><use href="#am-symbol-cacm-logo-small"></use></svg>		</div>
	</div>
</a>
			</div>
			
<nav role="navigation" aria-label="Main Menu" class="site-header-hamburger-menu" aria-hidden="true">

	<!-- Search bar -->
	<form role="search" action="https://cacm.acm.org" method="get" class="site-header-hamburger-menu-search">
		<label for="site-navigation-expanded-search">
			<span class="site-header-hamburger-menu-search-icon">
					<svg xmlns="http://www.w3.org/2000/svg" width="21" height="21" fill="none">
		<path fill="#4C4C4C" d="m21 19.902-5.866-5.867a8.558 8.558 0 1 0-1.099 1.099L19.902 21 21 19.902ZM1.581 8.572a6.99 6.99 0 1 1 6.99 6.99 6.999 6.999 0 0 1-6.99-6.99Z"/>
	</svg>
			</span>
			<input type="text" name="s" id="site-navigation-expanded-search" class="site-header-hamburger-menu-search-input" placeholder="Search" value="" />
		</label>
	</form>

	<!-- Topics menu -->
	<div class="site-header-hamburger-menu-topics site-header-hamburger-menu-topics--expanded">
					<h2 class="site-header-hamburger-menu-heading">
				Topics				<span class="site-header-hamburger-menu-accordion-icon">
					<svg aria-hidden="true" focusable="false" width="16" height="16"><use href="#am-symbol-icon-chevron-down"></use></svg>				</span>
			</h2>
			<ul class="site-header-hamburger-menu-topics-menu">
																<li>
						<a href="https://cacm.acm.org/category/architecture-and-hardware/">
							Architecture and Hardware						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/artificial-intelligence-machine-learning/">
							Artificial Intelligence and Machine Learning						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/computer-history/">
							Computer History						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/computing-applications/">
							Computing Applications						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/computing-profession/">
							Computing Profession						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/data-and-information/">
							Data and Information						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/education/">
							Education						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/hci/">
							HCI						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/philosophy-of-computing/">
							Philosophy of Computing						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/security-and-privacy/">
							Security and Privacy						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/society/">
							Society						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/software-engineering-and-programming-languages/">
							Software Engineering and Programming Languages						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/systems-and-networking/">
							Systems and Networking						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/category/theory/">
							Theory						</a>
					</li>
										</ul>
			</div>

	<!-- Sections menu -->
	<div class="site-header-hamburger-menu-sections">
					<h2 class="site-header-hamburger-menu-heading">
				Sections				<span class="site-header-hamburger-menu-accordion-icon">
					<svg aria-hidden="true" focusable="false" width="16" height="16"><use href="#am-symbol-icon-chevron-down"></use></svg>				</span>
			</h2>
			<ul class="site-header-hamburger-menu-sections-menu">
																<li>
						<a href="https://cacm.acm.org/section/research/">
							Research and Advances						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/section/opinion/">
							Opinion						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/section/practice/">
							Practice						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/section/news/">
							News						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/section/research-highlights/">
							Research Highlights						</a>
					</li>
																				<li>
						<a href="https://cacm.acm.org/section/careers/">
							Careers						</a>
					</li>
										</ul>
			</div>

	<!-- Magazine menu -->
	<div class="site-header-hamburger-menu-magazine">
		<h2 class="site-header-hamburger-menu-heading">
			Magazine			<span class="site-header-hamburger-menu-accordion-icon">
				<svg aria-hidden="true" focusable="false" width="16" height="16"><use href="#am-symbol-icon-chevron-down"></use></svg>			</span>
		</h2>
		<ul id="menu-magazine-header" class="site-header-hamburger-menu-magazine-menu"><li id="menu-item-217988" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217988"><a href="/issue/latest/" id="menu-link-1">Latest Issue</a></li>
<li id="menu-item-217989" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217989"><a href="/issues/" id="menu-link-2">Magazine Archive</a></li>
<li id="menu-item-224644" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224644"><a href="https://cacm.acm.org/editorial-staff-board/" id="menu-link-3">Editorial Staff and Board</a></li>
<li id="menu-item-751386" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-751386"><a href="https://cacm.acm.org/author-guidelines#CACMsubmission" id="menu-link-4">Submit an Article</a></li>
<li id="menu-item-224585" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224585"><a href="https://cacm.acm.org/feeds-2/" id="menu-link-5">Alerts &#038; Feeds</a></li>
<li id="menu-item-224645" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224645"><a href="https://cacm.acm.org/author-guidelines/" id="menu-link-6">Author Guidelines</a></li>
</ul>	</div>

	<div class="site-header-hamburger-menu-membership">
		<span class="site-header-hamburger-menu-membership-logo">
			<svg aria-hidden="true" focusable="false" width="49" height="48"><use href="#am-symbol-cacm-logo-small"></use></svg>		</span>
		<h2 class="site-header-hamburger-menu-heading site-header-hamburger-menu-membership-heading">
			CACM Web Account		</h2>
		<p class="site-header-hamburger-menu-membership-text">Membership in ACM includes a subscription to Communications of the ACM (CACM), the computing industry&#039;s most trusted source for staying connected to the world of advanced computing.</p>
		<div class="site-header-hamburger-menu-membership-buttons">
			<a href="https://cacm.acm.org/wp-login.php?saml_sso" class="site-header-hamburger-menu-membership-buttons-log-in">
				Sign In			</a>
			<a href="https://accounts.acm.org/" class="site-header-hamburger-menu-membership-buttons-sign-up">
				Sign Up			</a>
		</div>
	</div>

	<!-- Communications menu -->
	<div class="site-header-hamburger-menu-communications">
		<h2 class="site-header-hamburger-menu-heading">
			Communications of the ACM			<span class="site-header-hamburger-menu-accordion-icon">
				<svg aria-hidden="true" focusable="false" width="16" height="16"><use href="#am-symbol-icon-chevron-down"></use></svg>			</span>
		</h2>
		<ul id="menu-communications-header" class="site-header-hamburger-menu-communications-menu"><li id="menu-item-224641" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224641"><a href="https://cacm.acm.org/about-us/" id="menu-link-7">About Us</a></li>
<li id="menu-item-224663" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224663"><a href="https://cacm.acm.org/faq/" id="menu-link-8">Frequently Asked Questions</a></li>
<li id="menu-item-224640" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224640"><a href="https://cacm.acm.org/contact-us/" id="menu-link-9">Contact Us</a></li>
</ul>	</div>

	<div class="site-header-hamburger-menu-social">
		<h2 class="site-header-hamburger-menu-heading">
			Follow Us		</h2>
		<ul class="site-header-hamburger-menu-social-menu">
			<li>
				<a href="https://twitter.com/cacmmag">
					<span class="screen-reader-only">CACM on Twitter</span>
					<svg xmlns="http://www.w3.org/2000/svg" width="38" height="38" fill="none">
	<path fill="#1DA1F2" d="M27.613 13.657a7.057 7.057 0 0 1-2.03.557 3.54 3.54 0 0 0 1.555-1.955 7.08 7.08 0 0 1-2.245.857A3.53 3.53 0 0 0 22.313 12c-2.282 0-3.958 2.13-3.442 4.34a10.033 10.033 0 0 1-7.285-3.694 3.54 3.54 0 0 0 1.093 4.72 3.52 3.52 0 0 1-1.6-.442c-.038 1.637 1.135 3.169 2.835 3.51a3.542 3.542 0 0 1-1.596.06 3.538 3.538 0 0 0 3.301 2.454 7.106 7.106 0 0 1-5.232 1.465A10.006 10.006 0 0 0 15.804 26c6.562 0 10.27-5.542 10.046-10.513a7.195 7.195 0 0 0 1.763-1.83Z"/>
	<path fill="#000" d="M27.613 13.657a7.057 7.057 0 0 1-2.03.557 3.54 3.54 0 0 0 1.555-1.955 7.08 7.08 0 0 1-2.245.857A3.53 3.53 0 0 0 22.313 12c-2.282 0-3.958 2.13-3.442 4.34a10.033 10.033 0 0 1-7.285-3.694 3.54 3.54 0 0 0 1.093 4.72 3.52 3.52 0 0 1-1.6-.442c-.038 1.637 1.135 3.169 2.835 3.51a3.542 3.542 0 0 1-1.596.06 3.538 3.538 0 0 0 3.301 2.454 7.106 7.106 0 0 1-5.232 1.465A10.006 10.006 0 0 0 15.804 26c6.562 0 10.27-5.542 10.046-10.513a7.195 7.195 0 0 0 1.763-1.83Z"/>
	<rect width="37" height="37" x=".5" y=".5" stroke="#D8D8D8" rx="18.5"/>
</svg>
				</a>
			</li>
			<li>
				<a href="https://www.reddit.com/user/TheOfficialACM">
					<span class="screen-reader-only">CACM on Reddit</span>
					<svg xmlns="http://www.w3.org/2000/svg" width="38" height="38" fill="none">
	<path fill="#FF4500" d="M27.764 21.071v.613c0 3.368-3.879 6.022-8.676 6.022-4.797 0-8.676-2.654-8.676-6.022v-.613c-1.122-.51-1.53-1.735-1.122-2.857.306-.817 1.123-1.327 1.939-1.225.612 0 1.123.204 1.531.612 1.735-1.122 3.776-1.837 5.818-1.837l1.122-5.103c0-.102.102-.204.102-.204.102-.102.205-.102.307-.102l3.572.816c.408-.714 1.327-1.123 2.041-.714.715.408 1.123 1.326.715 2.04-.409.715-1.327 1.124-2.042.715-.51-.204-.816-.714-.816-1.326l-3.164-.715-1.02 4.593c2.245.102 4.286.817 5.715 1.837.816-.816 2.245-.816 3.062 0 .408.408.612.919.612 1.531.306.919-.306 1.633-1.02 1.94Zm-11.942 1.123c.816 0 1.53-.714 1.53-1.53 0-.817-.714-1.532-1.53-1.532-.817 0-1.531.715-1.531 1.531 0 .817.612 1.531 1.53 1.531Zm7.042 1.94c-.204-.205-.408-.205-.51 0-.612.714-2.041.918-3.062.918-1.02 0-2.45-.204-3.062-.919-.204-.204-.408-.204-.51 0-.204.204-.204.409 0 .51 1.02 1.021 3.062 1.123 3.674 1.123.613 0 2.552-.102 3.675-1.122-.102-.102-.102-.306-.205-.51Zm1.225-3.47c0-.817-.714-1.532-1.53-1.532-.817 0-1.532.715-1.532 1.531 0 .817.715 1.531 1.531 1.531.817 0 1.531-.714 1.531-1.53Z"/>
	<path fill="#000" d="M27.764 21.071v.613c0 3.368-3.879 6.022-8.676 6.022-4.797 0-8.676-2.654-8.676-6.022v-.613c-1.122-.51-1.53-1.735-1.122-2.857.306-.817 1.123-1.327 1.939-1.225.612 0 1.123.204 1.531.612 1.735-1.122 3.776-1.837 5.818-1.837l1.122-5.103c0-.102.102-.204.102-.204.102-.102.205-.102.307-.102l3.572.816c.408-.714 1.327-1.123 2.041-.714.715.408 1.123 1.326.715 2.04-.409.715-1.327 1.124-2.042.715-.51-.204-.816-.714-.816-1.326l-3.164-.715-1.02 4.593c2.245.102 4.286.817 5.715 1.837.816-.816 2.245-.816 3.062 0 .408.408.612.919.612 1.531.306.919-.306 1.633-1.02 1.94Zm-11.942 1.123c.816 0 1.53-.714 1.53-1.53 0-.817-.714-1.532-1.53-1.532-.817 0-1.531.715-1.531 1.531 0 .817.612 1.531 1.53 1.531Zm7.042 1.94c-.204-.205-.408-.205-.51 0-.612.714-2.041.918-3.062.918-1.02 0-2.45-.204-3.062-.919-.204-.204-.408-.204-.51 0-.204.204-.204.409 0 .51 1.02 1.021 3.062 1.123 3.674 1.123.613 0 2.552-.102 3.675-1.122-.102-.102-.102-.306-.205-.51Zm1.225-3.47c0-.817-.714-1.532-1.53-1.532-.817 0-1.532.715-1.532 1.531 0 .817.715 1.531 1.531 1.531.817 0 1.531-.714 1.531-1.53Z"/>
	<rect width="37" height="37" x=".5" y=".5" stroke="#D8D8D8" rx="18.5"/>
</svg>
				</a>
			</li>
			<li>
				<a href="https://www.linkedin.com/groups/36836/">
					<span class="screen-reader-only">CACM on LinkedIn</span>
					<svg xmlns="http://www.w3.org/2000/svg" width="38" height="38" fill="none">
	<path fill="#000" d="M14.117 12.74c0 .96-.773 1.738-1.726 1.738a1.732 1.732 0 0 1-1.725-1.739c0-.96.772-1.739 1.725-1.739.953 0 1.726.78 1.726 1.74Zm.013 3.13h-3.478V27h3.479V15.87Zm5.553 0h-3.456V27h3.457v-5.843c0-3.248 4.194-3.514 4.194 0V27h3.47v-7.048c0-5.481-6.207-5.282-7.665-2.583v-1.5Z"/>
	<rect width="37" height="37" x=".5" y=".5" stroke="#D8D8D8" rx="18.5"/>
</svg>
				</a>
			</li>
		</ul>
	</div>

</nav>
		</header>
	</div>

	<div id="content" class="site-content container">
		<div id="primary" class="content-area">
			<main id="main" class="site-main">

				
<article id="post-766488" class="post-766488 digital-library type-digital-library status-publish has-post-thumbnail hentry category-architecture-and-hardware category-software-engineering-and-programming-languages category-systems-and-networking section-research-highlights">

			
<header class="article-header article-header--default">
	<div class="article-header__inner container">
		<div class="article-header__section"><a href="https://cacm.acm.org/section/research-highlights/">Research Highlights</a></div>
		<div class="article-header__topic-and-issue-section">
			<span class="article-header__topic">
			<a href="https://cacm.acm.org/category/architecture-and-hardware/">Architecture and Hardware</a>			</span>
			<span class="article-header__issue-section">
							</span>
		</div>
		<h1 class="article-header__title">Designing an Efficient Tree Index on Disaggregated Memory</h1>
					<div class="article-header__subtitle"><p>Designing a high-performance tree index, a key pillar of datacenter systems, on disaggregated memory.</p>
</div>
		
		<div class="article-header__meta">
			<div class="article-header__byline">
				By <a href="https://cacm.acm.org/author/qing-wang/" title="Posts by Qing Wang" class="author url fn" rel="author">Qing Wang</a>, <a href="https://cacm.acm.org/author/youyou-lu/" title="Posts by Youyou Lu" class="author url fn" rel="author">Youyou Lu</a>, and <a href="https://cacm.acm.org/author/jiwu-shu/" title="Posts by Jiwu Shu" class="author url fn" rel="author">Jiwu Shu</a>			</div>
			<div class="article-header__posted-on">
				<span class="posted-on">Posted <time datetime="2025-04-15T13:00:51-04:00">Apr 15 2025</time></span>			</div>
		</div>

			<figure class="article-header__figure article-header__figure--has-credit">
			<div class="image-wrapper image-wrapper--widescreen"><img width="1024" height="576" src="https://cacm.acm.org/wp-content/uploads/2025/04/040825.RH-Designing-an-Efficient-G.jpg" class="attachment-full size-full" alt="tree graph" loading="eager" decoding="async" srcset="https://cacm.acm.org/wp-content/uploads/2025/04/040825.RH-Designing-an-Efficient-G.jpg 2400w, https://cacm.acm.org/wp-content/uploads/2025/04/040825.RH-Designing-an-Efficient-G.jpg?resize=300,169 300w, https://cacm.acm.org/wp-content/uploads/2025/04/040825.RH-Designing-an-Efficient-G.jpg?resize=768,432 768w, https://cacm.acm.org/wp-content/uploads/2025/04/040825.RH-Designing-an-Efficient-G.jpg?resize=1024,576 1024w, https://cacm.acm.org/wp-content/uploads/2025/04/040825.RH-Designing-an-Efficient-G.jpg?resize=1536,864 1536w, https://cacm.acm.org/wp-content/uploads/2025/04/040825.RH-Designing-an-Efficient-G.jpg?resize=2048,1152 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></div>			<figcaption><p class="article-header--credit">Credit: khvost / Getty Images</p></figcaption>
		</figure>

		<div class="article-header__share">
			
<ul class="share">
	
<li class="share-link" data-component="share">
	<a href="#" class="share-toggle">
		<svg aria-hidden="true" focusable="false" width="19" height="18" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-share"></use></svg>		<span class="share-link-text">
			Share		</span>
	</a>
	<ul class="share-menu" aria-hidden="true">
		<li>
			<a href="https://twitter.com/intent/tweet?url=https://cacm.acm.org/research-highlights/designing-an-efficient-tree-index-on-disaggregated-memory/&#038;text=Designing%20an%20Efficient%20Tree%20Index%20on%20Disaggregated%20Memory" target="_blank">
				Twitter			</a>
		</li>
		<li>
			<a href="http://www.reddit.com/submit?url=https://cacm.acm.org/research-highlights/designing-an-efficient-tree-index-on-disaggregated-memory/&#038;title=Designing%20an%20Efficient%20Tree%20Index%20on%20Disaggregated%20Memory" target="_blank">
				Reddit			</a>
		</li>
		<li>
			<a href="https://news.ycombinator.com/submitlink?u=https://cacm.acm.org/research-highlights/designing-an-efficient-tree-index-on-disaggregated-memory/&#038;t=Designing%20an%20Efficient%20Tree%20Index%20on%20Disaggregated%20Memory" target="_blank">
				Hacker News			</a>
		</li>
	</ul>
</li>

<li class="share-link share-link-print" data-component="print">
	<a href="#" class="print">
		<svg aria-hidden="true" focusable="false" width="19" height="20" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-print"></use></svg>		<span class="share-link-text">
			Print		</span>
	</a>
</li>

	<li class="share-link share-link-discussion" data-component="share">
		<a class="share-link-comments" href="#comments">
			<svg aria-hidden="true" focusable="false" width="19" height="20" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-comment"></use></svg>			<span class="share-link-text">Join the Discussion</span>
		</a>
	</li>

<li class="share-link share-link-dl">
	<a href="https://dl.acm.org/doi/10.1145/3709647">
		<svg aria-hidden="true" focusable="false" width="21" height="21" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-digital-library"></use></svg>		<span class="share-link-text">
			View in the ACM Digital Library		</span>
		<svg aria-hidden="true" focusable="false" width="14" height="9" fill="var(--cacm--symbol--fill)" class="icon-dl"><use href="#am-symbol-icon-arrow-right"></use></svg>	</a>
</li>
</ul>
		</div>
	</div>
</header>

<section class="article-table-of-contents" data-component="articleToc">
			<ol class="article-table-of-contents__list">
			<ul>
<li><a href="#sec1">Introduction</a></li>
<li><a href="#sec2">Background</a></li>
<li><a href="#sec5">Motivation</a></li>
<li><a href="#sec13">Design</a></li>
<li><a href="#sec29">Evaluation</a></li>
<li><a href="#sec37">Related Work</a></li>
<li><a href="#sec38">Conclusion</a></li>
<li><a href="#sec39">Acknowledgements</a></li>
<li><a href="#references">References</a></li>
</ul>
		</ol>
	</section>
		<div class="article-contents">
			
<a class="article-connected-content" href="https://cacm.acm.org/research-highlights/technical-perspective-a-write-optimized-distributed-btree-index-on-disaggregated-memory/">
	Read the related Technical Perspective	<svg aria-hidden="true" focusable="false" width="24.88" height="16" fill="var(--wp--preset--color--cacm-link-blue)"><use href="#am-symbol-icon-arrow-right"></use></svg></a>

<div class="article-content entry-content">
		<div style="background: #F5CBA7;"><h2>Abstract</h2><p>Memory disaggregation architecture physically separates CPU and memory into independent components, which are connected via high-speed networks (for example, RDMA), greatly improving resource utilization of datacenter systems. However, such an architecture poses unique challenges to data indexing due to limited memory access semantics and near-zero computation power at memory side. Existing indexes supporting disaggregated memory either suffer from low write performance or require hardware modification.</p><p>We present Sherman, a write-optimized <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span> index on RDMA-enabled disaggregated memory. Sherman combines RDMA hardware features and RDMA-friendly software techniques to boost index write performance from three angles. First, to reduce round trips, Sherman coalesces dependent RDMA commands by leveraging in-order delivery property of RDMA. Second, to accelerate concurrent accesses, Sherman introduces a hierarchical lock that exploits on-chip memory of RDMA NICs. Finally, to mitigate write amplification, Sherman tailors the data structure layout of <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span> with a two-level version mechanism. Our evaluation shows that Sherman is one order of magnitude faster compared with state-of-the-art designs in terms of both throughput and 99th percentile latency on typical write-intensive workloads.</p></div><article><section class="sec"><h2 class="heading"><span class="caption-label">1. </span>Introduction</h2><p id="p-1">The popularity of in-memory databases and in-memory computing catalyzes ever-increasing demands for memory in modern datacenters. However, datacenters today suffer from low memory utilization (&lt; 65%),<a class="reference-link xref xref-bibr" href="#B6" data-jats-ref-type="bibr" data-jats-rid="B6"><sup>6</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B15" data-jats-ref-type="bibr" data-jats-rid="B15"><sup>15</sup></a> which results from imbalanced memory usages across a sea of servers. In response, academia and industry are working toward a new hardware architecture called <i>memory disaggregation</i>, where CPU and memory are <i>physically</i> separated into two network-attached components—compute servers and memory servers.<a class="reference-link xref xref-bibr" href="#B15" data-jats-ref-type="bibr" data-jats-rid="B15"><sup>15</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B18" data-jats-ref-type="bibr" data-jats-rid="B18"><sup>18</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B22" data-jats-ref-type="bibr" data-jats-rid="B22"><sup>22</sup></a> With memory disaggregation, CPU and memory can scale independently and different applications share a global memory pool efficiently.</p><p id="p-2">Since almost all CPU resources are assembled on compute servers under the memory disaggregation architecture, memory servers have near-zero computation power, which highlights the challenge of how compute servers access disaggregated memory residing on memory servers. Fortunately, remote direct memory access (RDMA), a fast network technique, allows compute servers to <i>directly access</i> disaggregated memory unmediated by memory servers’ computation power with low latency, becoming an essential building block of memory disaggregation architecture.<a class="reference-link xref xref-bibr" href="#B15" data-jats-ref-type="bibr" data-jats-rid="B15"><sup>15</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B18" data-jats-ref-type="bibr" data-jats-rid="B18"><sup>18</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B22" data-jats-ref-type="bibr" data-jats-rid="B22"><sup>22</sup></a></p><p id="p-3">In this work, we explore how to design a high-performance tree index, a key pillar of datacenter systems, on disaggregated memory. We first revisit existing RDMA-based tree indexes and examine their applicability on disaggregated memory. Several RDMA-based tree indexes rely on remote procedure calls (RPCs) to handle write operations;<a class="reference-link xref xref-bibr" href="#B12" data-jats-ref-type="bibr" data-jats-rid="B12"><sup>12</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B14" data-jats-ref-type="bibr" data-jats-rid="B14"><sup>14</sup></a> they are ill-suited for disaggregated memory due to near-zero computation power of memory servers. For tree indexes that can be deployed on disaggregated memory, they also have some critical limitations. Some indexes use RDMA one-sided verbs for all index operation<a class="reference-link xref xref-bibr" href="#B25" data-jats-ref-type="bibr" data-jats-rid="B25"><sup>25</sup></a> (we call it <i>one-sided approach</i>); they can deliver high performance for read operations but suffer from low throughput and high latency in terms of write operations, especially in high-contention scenarios. Other indexes bake write operations into Smart-NICs or customized hardware,<a class="reference-link xref xref-bibr" href="#B1" data-jats-ref-type="bibr" data-jats-rid="B1"><sup>1</sup></a> which brings high total cost of ownership (TCO) and cannot be deployed in datacenters on a large scale immediately.</p><p id="p-4">Our goal is designing a tree index on disaggregated memory that can <i>deliver high performance for both read and write operations with commodity RDMA NICs</i>. To this end, we further analyze what makes one-sided approach inefficient in write operations, and find out three major causes. First, due to limited semantics of one-sided RDMA verbs, modifying an index node (for example, tree node in <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span>) always requires multiple round trips (that is, lock, read, write, and unlock), inducing high latency and further making conflicting requests more likely to be blocked. Second, the locks used for resolving write-write conflicts are slow and experience performance collapse under high-contention scenarios. This is because at the hardware level, NICs adopt expensive concurrency control to ensure atomicity between RDMA atomic commands, where each command needs two PCIe transactions. At the software level, such locks often trigger unnecessary retries, which consumes RDMA IOPS, and do not provide fairness, which leads to high tail latency. Third, the layout of index data structure incurs severe write amplification. Due to coarse-grained consistency check mechanisms (for example, using checksum to protect a whole tree node), a small piece of modification will result in large-sized write-back across the network.</p><p id="p-5">Motivated by the above analysis, we propose <em><span class="sc">Sherman</span></em>, a write-optimized distributed <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span> index on disaggregated memory. The key idea of <span class="sc">Sherman</span> is <i>combining RDMA hardware features and RDMA-friendly software techniques to reduce round trips, accelerate lock operations, and mitigate write amplification</i>. <span class="sc">Sherman</span> spreads <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span> nodes across a set of memory servers, and compute servers perform all index operations via RDMA one-sided verbs purely. <span class="sc">Sherman</span> uses a classic approach for concurrency control: lock-free search with versions to resolve read-write conflicts and exclusive locks to resolve write-write conflicts.</p><p id="p-6">To reduce round trips, <span class="sc">Sherman</span> introduces a command combination technique. Based on the observation that commodity RDMA NICs already provide in-order delivery property, this technique allows client threads to issue dependent RDMA commands (for example, write-back and lock release) simultaneously, letting NICs at memory servers reflect them into disaggregated memory in order.</p><p id="p-7">To accelerate lock operations, we design a <i>hierarchical on-chip lock (HOCL)</i> for <span class="sc">Sherman</span>. HOCL is structured into two parts: global lock tables on memory servers and local lock tables on compute servers. Global lock tables and local lock tables coordinate conflicting lock requests between compute servers and within a compute server, respectively. Global lock tables are stored in the on-chip memory of RDMA NICs, thus eliminating PCIe transactions of memory servers and further delivering extremely high throughput for RDMA atomic commands (<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>∼</mo></math></span>110Mops). Within a compute server, before trying to acquire a global lock on memory servers, a thread must acquire the associated local lock to avoid a large amount of unnecessary remote retries. Moreover, by adopting wait queues, local lock tables improve fairness between conflicting lock requests. Based on local lock tables, a thread can hand its acquired lock over to another thread directly, reducing at least one round trip for acquiring remote global locks.</p><p id="p-8">To mitigate write amplification, <span class="sc">Sherman</span> tailors the leaf node layout of <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span>. First, entries in leaf node are <i>unsorted</i> to eschew shift operations upon insertion/deletion. Second, to support lock-free search while avoiding write amplification, we introduce a <i>two-level version mechanism</i>. In addition to using a pair of <i>node-level versions</i> to detect the inconsistency of the whole leaf node, we embed a pair of <i>entry-level versions</i> into each entry, which ensures entry-level integrity. For insertion/deletion operations without split/merging events, only entry-sized data is written back, thus saving network bandwidth and making the most of the extremely high IOPS of small RDMA messages.</p><p id="p-9">To demonstrate its efficacy, we evaluate <span class="sc">Sherman</span> using a set of benchmarks. Under write-intensive workloads, <span class="sc">Sherman</span> achieves much better performance than FG,<a class="reference-link xref xref-bibr" href="#B25" data-jats-ref-type="bibr" data-jats-rid="B25"><sup>25</sup></a> a state-of-the-art distributed <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span> supporting disaggregated memory. Specifically, in common skewed workloads, <span class="sc">Sherman</span> delivers one order of magnitude performance improvement in terms of both throughput and 99<sup>th</sup> percentile latency. For read-intensive workloads (that is, 95% read operations), <span class="sc">Sherman</span> exhibits slightly higher throughput with 25% lower 99<sup>th</sup> percentile latency.</p><figure id="F1" class="fig" data-jats-position="float"><div class="image-container"><figure id="attachment_767348" aria-describedby="caption-attachment-767348" class="wp-caption aligncenter"><a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2025/04/dis-mem.jpg" data-type="image" data-caption="" href="https://cacm.acm.org/wp-content/uploads/2025/04/dis-mem.jpg">
				<img decoding="async" class="wp-image-767348" src="https://cacm.acm.org/wp-content/uploads/2025/04/dis-mem.jpg?w=1024" alt="Architecture of memory disaggregation." width="881" height="559" srcset="https://cacm.acm.org/wp-content/uploads/2025/04/dis-mem.jpg 1339w, https://cacm.acm.org/wp-content/uploads/2025/04/dis-mem.jpg?resize=300,191 300w, https://cacm.acm.org/wp-content/uploads/2025/04/dis-mem.jpg?resize=768,488 768w, https://cacm.acm.org/wp-content/uploads/2025/04/dis-mem.jpg?resize=1024,651 1024w" sizes="(max-width: 881px) 100vw, 881px" />
			</a><figcaption id="caption-attachment-767348" class="wp-caption-text">Figure 1. Architecture of memory disaggregation.</figcaption></figure></div></figure><p id="p-10">This work makes three main contributions. First, we analyze existing RDMA-based tree indexes on disaggregated memory (§<a class="xref xref-sec" href="#sec5" data-jats-ref-type="sec" data-jats-rid="sec5">3</a>). Second, we design and implement <span class="sc">Sherman</span>, a write-optimized <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span> index on disaggregated memory (§<a class="xref xref-sec" href="#sec11" data-jats-ref-type="sec" data-jats-rid="sec11">4</a>). Finally, we use a set of evaluations to demonstrate the high performance of <span class="sc">Sherman</span> (§<a class="xref xref-sec" href="#sec17" data-jats-ref-type="sec" data-jats-rid="sec17">5</a>).</p></section><section id="sec2" class="sec"><h2 class="heading"><span class="caption-label">2. </span>Background</h2><p id="p-11">In this section, we provide the background on memory disaggregation and RDMA network briefly.</p><section id="sec3" class="sec"><h3 class="heading"><span class="caption-label">2.1 </span>Memory disaggregation.</h3><p id="p-12">Traditional datacenters pack CPU and memory into the same hardware units (that is, monolithic servers), leading to low memory utilization (&lt; 65%)<a class="reference-link xref xref-bibr" href="#B6" data-jats-ref-type="bibr" data-jats-rid="B6"><sup>6</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B15" data-jats-ref-type="bibr" data-jats-rid="B15"><sup>15</sup></a> and further increasing the TCO of datacenters. To attack this problem, academia and industry are exploring a new hardware architecture called <i>memory disaggregation</i>.<a class="reference-link xref xref-bibr" href="#B15" data-jats-ref-type="bibr" data-jats-rid="B15"><sup>15</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B18" data-jats-ref-type="bibr" data-jats-rid="B18"><sup>18</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B22" data-jats-ref-type="bibr" data-jats-rid="B22"><sup>22</sup></a> In such an architecture, CPU and memory are physically separated into two different hardware units: compute servers (CSs) and memory servers (MSs). Compute servers own a mass of CPU cores (tens to hundreds), but MSs host high-volume memory (hundreds to thousands of gigabytes) with near-zero computation power. CPUs in CSs can directly access the disaggregated memory in MSs via high-speed networks (for example, RDMA). In this article, we focus on RDMA-enabled memory disaggregation, since RDMA is currently widely deployed and more mature than other memory-semantic networks such as CXL. With memory disaggregation, CPU and memory can scale independently and applications can pack resources in a more flexible manner, boosting resource utilization significantly.</p><p id="p-13">To reduce remote accesses from CSs to MSs, CSs are always equipped with a small piece of memory as the local cache (one to ten gigabytes). Moreover, MSs own a small set of wimpy CPU cores (one to two) to support lightweight management tasks, such as network connection management.</p></section><section id="sec4" class="sec"><h3 class="heading"><span class="caption-label">2.2 </span>RDMA network.</h3><p id="p-14">RDMA network is the key enabler of memory disaggregation architecture. It provides two types of verbs, namely <i>two-sided verbs</i> and <i>one-sided verbs</i>, to applications. Two-sided verbs— <code class="monospace">RDMA_SEND</code> and <code class="monospace">RDMA_RECV</code>—are the same as traditional Linux socket interface. One-sided verbs, that is, <code class="monospace">RDMA_WRITE</code>, <code class="monospace">RDMA_READ</code>, and <code class="monospace">RDMA_ATOMIC</code> (<code class="monospace">RDMA_FAA</code> and <code class="monospace">RDMA_CAS</code>) operate directly on remote memory without involving the CPUs of receivers. The direct-access feature of one-sided verbs makes memory servers with near-zero computation power possible.</p><p id="p-15">RDMA hosts communicate via queue pairs (QPs): A QP consists of a send queue and a receive queue. A sender performs an RDMA command by posting the request to the send queue. RDMA supports three transport types: reliable connected (RC), unreliable connected (UC), and unreliable datagram (UD). <span class="sc">Sherman</span> uses RC, since it supports all one-sided verbs and is reliable.</p></section></section><section id="sec5" class="sec"><h2 class="heading"><span class="caption-label">3. </span>Motivation</h2><p id="p-16">Designing a fast distributed tree index on disaggregated memory poses unique challenges. In this section, we first revisit two existing approaches—using one-sided verbs purely and extending RDMA interfaces—and reveal their respective issues. Then, we analyze why using one-sided verbs is slow, which motivates the design of <span class="sc">Sherman</span>.</p><section id="sec6" class="sec"><h3 class="heading"><span class="caption-label">3.1 </span>Existing approaches.</h3><p id="p-17">With near-zero computation power at MS side, we cannot delegate index operations to CPUs of MSs via remote procedure calls (RPCs), which is the main difference between memory disaggregation and traditional architectures. Existing work enables efficient lookup operations via lock-free search and caching mechanisms,<a class="reference-link xref xref-bibr" href="#B4" data-jats-ref-type="bibr" data-jats-rid="B4"><sup>4</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B12" data-jats-ref-type="bibr" data-jats-rid="B12"><sup>12</sup></a> leading to a single <code class="monospace">RDMA_READ</code> in the ideal situation (that is, cache hit). However, write operations are in a quandary due to their complex semantics; specifically, there are two avenues to design write operations, each of which has its own issues.</p><section id="sec7" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>Approach #1: Using one-sided verbs purely.</strong>  FG,<a class="reference-link xref xref-bibr" href="#B25" data-jats-ref-type="bibr" data-jats-rid="B25"><sup>25</sup></a> an RDMA-based <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span>, completely leverages one-sided verbs to perform index write operations (so it can be deployed on disaggregated memory). For write operations, it adopts a lock-based approach, where tree node modification is protected by RDMA-based spinning locks (<code class="monospace">RDMA_CAS</code> for acquisition and <code class="monospace">RDMA_FAA</code> for release). For read operation, FG follows a lock-free search scheme, where threads fetch tree nodes via <code class="monospace">RDMA_READ</code> without holding locks and then check the consistency using checksum. We conduct an experiment to evaluate FG’s performance. Since FG is not open source, we implement it from scratch; we also cache internal tree nodes to reduce remote accesses. Table <a class="xref xref-table" href="#T1" data-jats-ref-type="table" data-jats-rid="T1">1</a> shows the result, and we make two observations. First, in read-intensive workload (95% lookup and 5% insert/update), FG can achieve high throughput (&gt; 30Mops) and low 99<sup>th</sup> percentile latency (&lt; 16<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mi>μ</mi></math></span>s). Second, in write-intensive workload (50% lookup and 50% insert/update), FG delivers 18Mops with 19<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mi>μ</mi></math></span>s tail latency under the <i>uniform</i> setting; yet, its performance collapses in case of skew setting, where the key popularity follows a Zipfian popularity with skewness 0.99: Throughput is only 0.34Mops and tail latency is close to 20ms.</p><figure id="T1" class="table-wrap" data-jats-position="float"><div class="caption"><span class="caption-label">Table 1. </span><div class="title">Index performance in one-sided approach (100Gbps ConnectX-5 NICs, eight MSs, eight CSs with 176 client threads, 8/8b key/value, 1 billion key space). The performance collapses under <i>write-intensive and skew</i> setting.</div></div><div class="table-container"><table class="table table-bordered table-condensed table-hover" data-jats-frame="hsides" data-jats-rules="rows"><colgroup> <col align="center" valign="top" /> <col align="center" valign="top" /> <col align="center" valign="top" /> <col align="center" valign="top" /> <col align="center" valign="top" /> <col align="center" valign="top" /> </colgroup><thead><tr><th style="text-align: center;" colspan="2" rowspan="2"> </th><th style="text-align: center;" colspan="2">Read-intensive</th><th style="text-align: center;" colspan="2">Write-intensive</th></tr><tr><th style="text-align: center;">Uniform</th><th style="text-align: right;">Skew</th><th style="text-align: right;">Uniform</th><th style="text-align: right;">Skew</th></tr></thead><tbody><tr><td style="text-align: center;" colspan="2"><b>Throughput (Mops)</b></td><td style="text-align: right;">31.8</td><td style="text-align: right;">32.9</td><td style="text-align: right;">18.7</td><td style="text-align: right;">0.34</td></tr><tr><td style="text-align: center;" rowspan="3"><b>Latency (<i>μ</i>s)</b></td><td style="text-align: center;"><b>50<sup>th</sup></b></td><td style="text-align: right;">4.9</td><td style="text-align: right;">4.7</td><td style="text-align: right;">9.5</td><td style="text-align: right;">10</td></tr><tr><td style="text-align: center;"><b>90<sup>th</sup></b></td><td style="text-align: right;">6.4</td><td style="text-align: right;">6.2</td><td style="text-align: right;">14.3</td><td style="text-align: right;">68.7</td></tr><tr><td style="text-align: center;"><b>99<sup>th</sup></b></td><td style="text-align: right;">14.9</td><td style="text-align: right;">15.3</td><td style="text-align: right;">19</td><td style="text-align: right;">19890</td></tr></tbody></table></div></figure></section><section id="sec8" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>Approach #2: Extending RDMA interfaces.</strong>  Another approach to designing indexes on disaggregated memory is extending RDMA interfaces. This approach offloads index write operations into memory servers’ NICs via SmartNICs or other customized hardware.<a class="reference-link xref xref-bibr" href="#B1" data-jats-ref-type="bibr" data-jats-rid="B1"><sup>1</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B16" data-jats-ref-type="bibr" data-jats-rid="B16"><sup>16</sup></a> For example, by exploiting interface extensions (that is, indirect addressing and notification), researchers propose HT-Tree (without implementation),<a class="reference-link xref xref-bibr" href="#B1" data-jats-ref-type="bibr" data-jats-rid="B1"><sup>1</sup></a> a hybrid index combining the hash table and tree. Yet, compared with commodity RDMA NICs, SmartNICs come at the price of higher TCO and lower performance. More specifically, SmartNICs have much higher market price (<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>∼</mo></math></span>5<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span>) than that of commodity RDMA NICs at present.<a class="reference-link xref xref-bibr" href="#B18" data-jats-ref-type="bibr" data-jats-rid="B18"><sup>18</sup></a> As for performance, at 100Gbps network environment, StRoM,<a class="reference-link xref xref-bibr" href="#B16" data-jats-ref-type="bibr" data-jats-rid="B16"><sup>16</sup></a> the state-of-the-art RDMA extensions using FPGA, has 2<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> higher round-trip latency (4<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mi>μ</mi></math></span>s) against commodity RDMA NICs (<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>∼</mo></math></span>2<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mi>μ</mi></math></span>s).</p></section></section><section id="sec9" class="sec"><h3 class="heading"><span class="caption-label">3.2 </span>Why one-sided approach is slow?</h3><p id="p-20">The inefficiency of write operations using one-sided verbs stems from <i>excessive round trips</i>, <i>slow synchronization primitives</i>, and <i>write amplification</i>.</p><section id="sec10" class="sec"><h4 class="heading"><span class="caption-label">3.2.1 </span>Excessive round trips.</h4><p id="p-21">The most obvious cause of slow write operations is excessive round trips. For example, when modifying a tree node (not consider node split/merging), a client thread needs four round trips: acquiring associated exclusive lock, reading the tree node, writing back the modified tree node, and finally releasing the lock. Excessive round trips negatively impact write performance in two aspects. First, the latency of a single write operation is proportional to the number of round trips. Second, more round trips lead to the longer critical path, so conflicting write operations (that is, requests targeting the same tree nodes) are more likely to be blocked, degrading the concurrency performance.</p></section><section id="sec11" class="sec"><h4 class="heading"><span class="caption-label">3.2.2 </span>Slow synchronization primitives.</h4><p id="p-22">RDMA-based locks used in these indexes cannot provide sustainable performance under a variety of workloads. We conduct an experiment to demonstrate it. In the experiment, 154 threads across seven CSs acquire/release 10,240 locks residing in an MS; we choose RDMA verbs used by FG,<a class="reference-link xref xref-bibr" href="#B25" data-jats-ref-type="bibr" data-jats-rid="B25"><sup>25</sup></a> where <code class="monospace">RDMA_CAS</code> for lock acquisition and <code class="monospace">RDMA_FAA</code> for release. The access pattern follows Zipfian distribution and we vary Zipfian parameters to control the contention degree (0 is uniform setting and 0.99 is the most common real-world scenario). Figure <a class="xref xref-fig" href="#F2" data-jats-ref-type="fig" data-jats-rid="F2">2</a> shows the result: The system experiences performance collapse under high-contention settings.</p><figure id="F2" class="fig" data-jats-position="float"><div class="image-container">
			<a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2025/03/3709647_fig02.jpg" data-type="image" data-caption="Figure 2. Performance of RDMA-based exclusive locks (ConnectX-5 NICs, 100Gbps)." href="https://cacm.acm.org/wp-content/uploads/2025/03/3709647_fig02.jpg">
				<img decoding="async" class="graphic" title="Figure 2. Performance of RDMA-based exclusive locks (ConnectX-5 NICs, 100Gbps)." src="https://cacm.acm.org/wp-content/uploads/2025/03/3709647_fig02.jpg" alt="Performance of RDMA-based exclusive locks (ConnectX-5 NICs, 100Gbps)." data-image-id="F2" data-image-type="figure" />
			</a>
		</div><figcaption><span class="caption-label">Figure 2. </span> <span class="title">Performance of RDMA-based exclusive locks (ConnectX-5 NICs, 100Gbps).</span><div class="figcaption-footer"> </div></figcaption></figure><p id="p-23">The main reason behind the performance collapse is expensive in-NIC concurrency control. To guarantee correct atomicity semantic between <code class="monospace">RDMA_ATOMIC</code> commands targeting the same addresses, RDMA NICs adopt an internal locking scheme.<a class="reference-link xref xref-bibr" href="#B8" data-jats-ref-type="bibr" data-jats-rid="B8"><sup>8</sup></a> More specifically, a NIC maintains a certain number of buckets (for example, 4,096) and puts <code class="monospace">RDMA_ATOMIC</code> commands having the same certain bits in their destination addresses (for example, 12 LSBs) into the same bucket. Commands in the same bucket are considered conflicting. An <code class="monospace">RDMA_ATOMIC</code> cannot be executed until the previous conflicting commands are finished. Unfortunately, a single <code class="monospace">RDMA_ATOMIC</code> needs two PCIe transactions: fetching data from CPU memory into the NIC and writing back after modification (can be omitted for failed <code class="monospace">RDMA_CAS</code>). These PCIe transactions stretch the queueing time of conflicting <code class="monospace">RDMA_ATOMIC</code> commands and thus degrade concurrency performance, especially in high-contention workloads.</p><p id="p-24">Moreover, in the software design, existing locks in RDMA-based indexes blindly retie when conflicts appear, squandering limited throughput of NICs in both CSs and MSs. And they do not guarantee fairness between conflicting lock acquisition, thus causing starvation and high tail latency.</p></section><section id="sec12" class="sec"><h4 class="heading"><span class="caption-label">3.2.3 </span>Write amplification.</h4><p id="p-25">Existing RDMA-based indexes always trigger large-sized <code class="monospace">RDMA_WRITE</code>, suffering from write amplification. This issue stems from two causes. First, a <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span> keeps entries in each tree node sorted. When an entry is inserted/deleted to/from a node, all the entries on the right side of the insertion/deletion position need to be shifted. The shift operations cause extra data to be written via <code class="monospace">RDMA_WRITE</code>.</p><p id="p-26">Second, two existing consistency check mechanisms, which are proposed to detect concurrent writes for lock-free lookup, induce write amplification. In the first mechanism, each tree node includes a checksum covering the whole node area (except the checksum itself);<a class="reference-link xref xref-bibr" href="#B25" data-jats-ref-type="bibr" data-jats-rid="B25"><sup>25</sup></a> the checksum is recalculated when modifying the associated node and is verified when reading the node. The other mechanism, namely version-based consistency check, stores a version number at the start and end of each node;<a class="reference-link xref xref-bibr" href="#B12" data-jats-ref-type="bibr" data-jats-rid="B12"><sup>12</sup></a> when modifying a node via <code class="monospace">RDMA_WRITE</code>, the associated two versions are incremented; a node’s content obtained via <code class="monospace">RDMA_READ</code> is consistent only when the two versions are the same. Since the granularity of the above two mechanisms is tree node, any modification to part of the node area requires to write back the whole node (including the metadata, for example, checksum and version), leading to severe write amplification.</p></section></section></section><section id="sec13" class="sec"><h2 class="heading"><span class="caption-label">4. </span>Design</h2><p id="p-27">Motivated by our observations about root causes of inefficient write operations (§<a class="xref xref-sec" href="#sec7" data-jats-ref-type="sec" data-jats-rid="sec7">3.2</a>), we design <span class="sc">Sherman</span>. In this section, we begin by presenting our design principles (§<a class="xref xref-sec" href="#sec12" data-jats-ref-type="sec" data-jats-rid="sec12">4.1</a>), provide an overview of <span class="sc">Sherman</span> (§<a class="xref xref-sec" href="#sec13" data-jats-ref-type="sec" data-jats-rid="sec13">4.2</a>), and then describe our key techniques (§<a class="xref xref-sec" href="#sec14" data-jats-ref-type="sec" data-jats-rid="sec14">4.3</a>-§<a class="xref xref-sec" href="#sec16" data-jats-ref-type="sec" data-jats-rid="sec16">4.5</a>).</p><section id="sec14" class="sec"><h3 class="heading"><span class="caption-label">4.1 </span>Design principles.</h3><p id="p-28"><b>1) Seeking solutions from hardware first.</b> There are unexploited features of RDMA NICs that pose opportunities for index design. In <span class="sc">Sherman</span>, we use on-chip memory exposed by NICs to accelerate lock operations, and in-order delivery guarantee of RC QP to reduce round trips.</p><p id="p-29"><b>2) Applying CS-side optimization when possible.</b> In the current multicore era, each compute server (CS) usually launches a mass of client threads (10s–100s) to manipulate an index concurrently, leaving a lot of design space for CS-side optimization. Within a CS, we leverage local lock tables to coordinate conflicting lock requests between threads, and locks can be handed over from a thread to another quickly. Besides, <span class="sc">Sherman</span> maintains a CS-side index cache to reduce network accesses for tree traversal.</p><p id="p-30"><b>3) Tailoring data-structure layout to improve RDMA friendliness.</b> Disaggregated memory has a unique profile: It is accessed via a network (that is, RDMA) rather than a cache-coherent memory bus. Thus, it is necessary to tailor data-structure layout of indexes to reap RDMA’s full potential. To this end, <span class="sc">Sherman s</span>eparates locks from the tree structure to put them into NICs’ on-chip memory, and adopts entry-level versions as well as unsorted leaf nodes to reduce IO size of <code class="monospace">RDMA_WRITE</code> commands.</p></section><section id="sec15" class="sec"><h3 class="heading"><span class="caption-label">4.2 </span>Overview.</h3><p id="p-31">Figure <a class="xref xref-fig" href="#F3" data-jats-ref-type="fig" data-jats-rid="F3">3</a> shows the overall architecture and interactions of <span class="sc">Sherman</span>, which consists of a set of MSs and CSs. MSs are equipped with massive memory where <span class="sc">Sherman</span> tree resides. CSs run client threads that manipulate <span class="sc">Sherman</span> via specific interfaces (that is, lookup, range query, insert and delete). Since the number of CPU cores continues to increase, we assume there are a host of client threads running within a CS (dozens or even hundreds). These client threads cooperatively execute system services (for example, RDMA-based transaction processing), which needs <span class="sc">Sherman</span> for data indexing.</p><figure id="F3" class="fig" data-jats-position="float"><div class="image-container"> </div><figcaption><figure id="attachment_767353" aria-describedby="caption-attachment-767353" class="wp-caption aligncenter"><a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2025/04/overview.jpg" data-type="image" data-caption="" href="https://cacm.acm.org/wp-content/uploads/2025/04/overview.jpg">
				<img decoding="async" class="wp-image-767353 size-large" src="https://cacm.acm.org/wp-content/uploads/2025/04/overview.jpg?w=1024" alt="Sherman’s architecture and interactions." width="1024" height="672" srcset="https://cacm.acm.org/wp-content/uploads/2025/04/overview.jpg 1717w, https://cacm.acm.org/wp-content/uploads/2025/04/overview.jpg?resize=300,197 300w, https://cacm.acm.org/wp-content/uploads/2025/04/overview.jpg?resize=768,504 768w, https://cacm.acm.org/wp-content/uploads/2025/04/overview.jpg?resize=1024,672 1024w, https://cacm.acm.org/wp-content/uploads/2025/04/overview.jpg?resize=1536,1007 1536w" sizes="(max-width: 1024px) 100vw, 1024px" />
			</a><figcaption id="caption-attachment-767353" class="wp-caption-text">Figure 3. Sherman’s architecture and interactions.</figcaption></figure></figcaption></figure><section id="sec16" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>B+Tree structure.</strong>  <span class="sc">Sherman</span> is a <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span>, where values are stored in leaf nodes. We record a sibling pointer for every leaf node and internal node as in the B-link tree. Client threads can always reach a targeted node by following these sibling pointers in the presence of node split/merging, thus supporting concurrent operations efficiently. Every pointer in <span class="sc">Sherman</span> (that is, child/sibling pointers) is 64bit, which includes two parts: 16bit MS unique identifier and 48bit memory address within corresponding MS.</p></section><section id="sec17" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>Concurrency control.</strong>  <span class="sc">Sherman</span> adopts lock-based write operations and lock-free read operations.</p><p id="p-34"><u><i>Write-write conflicts</i></u>. <span class="sc">Sherman</span> uses <i>node-grained</i> exclusive locks to resolve write-write conflicts: Before modifying a tree node, the client thread must acquire the associated exclusive lock. These exclusive locks are hierarchical: <i>local lock tables</i> at CS-side and <i>global lock tables</i> in on-chip memory of MSs’ NICs (§<a class="xref xref-sec" href="#sec14" data-jats-ref-type="sec" data-jats-rid="sec14">4.3</a>). Such a hierarchical structure provides high concurrency performance.</p><p id="p-35"><u><i>Read-write conflicts</i></u>. <span class="sc">Sherman</span> supports lock-free search, which leverages <code class="monospace">RDMA_READ</code> to fetch data residing in MSs without holding any lock. Moreover, <span class="sc">Sherman</span> uses versions to detect inconsistent data caused by concurrent writes. However, different from traditional mechanisms that use node-level versions, <span class="sc">Sherman</span> proposes a two-level version mechanism, which combines entry-level and node-level versions, to mitigate write amplification (§<a class="xref xref-sec" href="#sec15" data-jats-ref-type="sec" data-jats-rid="sec15">4.4</a>).</p></section><section id="sec18" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>Cache mechanism.</strong>  To reduce remote accesses in the tree traversal, <span class="sc">Sherman</span> adopts a cache mechanism. Each CS maintains an <i>index cache</i>, which only makes two types of internal nodes’ copies: nodes above the leaf nodes (level 1 in Figure <a class="xref xref-fig" href="#F3" data-jats-ref-type="fig" data-jats-rid="F3">3</a>), and the highest two levels of nodes (including root). A client thread firstly searches type cache. On hit, it fetches the targeted leaf node directly from MSs; otherwise, it searches type cache and then traverses to leaf nodes via remote accesses. The index cache never induces data inconsistency issues; detailed reasons are available in our original SIGMOD paper.<a class="reference-link xref xref-bibr" href="#B20" data-jats-ref-type="bibr" data-jats-rid="B20"><sup>20</sup></a></p></section><section id="sec19" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>Memory management.</strong>  In each MS, we reserve a dedicated <i>memory thread</i> to manage disaggregated memory. The memory thread divides memory residing in corresponding MS into fixed-length chunks (that is, 8MB). Client threads use a two-stage memory allocation scheme to obtain memory from MSs. A client thread first chooses an MS in a round-robin manner, and requests a free chunk from the MS’s memory thread via RPCs. Then, it allocates memory space for tree nodes locally within the chunk.</p></section></section><section id="sec20" class="sec"><h3 class="heading"><span class="caption-label">4.3 </span>Hierarchical on-chip lock.</h3><p id="p-38"><span class="sc">Sherman</span> proposes hierarchical on-chip lock (HOCL) to improve concurrency performance. HOCL leverages the on-chip memory of NICs to avoid PCIe transactions at MS side; It also maintains local locks at CS side to form a hierarchical structure, reduce retries, and improve fairness. Moreover, locks can be handed over between client threads within the same CSs, thus saving at least one round trip.</p><section id="sec21" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>On-chip lock table.</strong>  Current RDMA verbs support <i>device memory programming</i>. Specifically, an RDMA NIC can expose a piece of its on-chip memory (SRAM) to the upper applications, which can be allocated and read/written by RDMA commands. The on-chip memory eliminates PCIe transaction at the receiver side, thus providing extremely high throughput <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>∼</mo></math></span>110Mops <code class="monospace">RDMA_CAS</code>). <span class="sc">Sherman</span> separates locks from tree nodes and stores locks into on-chip memory at MS side; each tree node is in the <i>same</i> MS as the lock protecting it. These locks in each MS are structured as an array, namely <i>global lock table</i> (GLT). When locking a tree node, the client thread first hashes the address of the tree node into a position number in the associated GLT and then issues an <code class="monospace">RDMA_CAS</code> command to the lock, which tries to change it from <code class="monospace">0</code> to the 16bit CS identifier atomically. For lock release, the thread clears the lock via an <code class="monospace">RDMA_WRITE</code>.</p><p id="p-40">An important consideration of GLT is the on-chip memory size. In the NIC we use (ConnectX-5), 256kB on-chip memory is available. To accommodate more locks, we make the granularity of <code class="monospace">RDMA_CAS</code> finer (16bit rather than 64bit), by applying an infrequently used RDMA verb called <i>masked compare and swap</i>, which allows us to select a portion of 64bit for <code class="monospace">RDMA_CAS</code>. Thus, an MS can maintain 131,072 locks in its GLT, enabling extremely high concurrency, particularly considering that we only lock at most one tree node at a time for a single write operation. To the best of our knowledge, <span class="sc">Sherman</span> is the first RDMA-based system that leverages on-chip memory of RDMA NICs.</p></section><section id="sec22" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>Hierarchical structure.</strong>  <span class="sc">Sherman</span> maintains a <i>local lock table</i> (LLT) in each CS to coordinate conflicting lock requests within the same CSs. The LLT stores a <i>local lock</i> for each lock of all GLTs. When a thread needs to lock a tree node, it first acquires the associated local lock in LLT, and then acquires the associated lock in GLT; thus, conflicting lock requests from the same CSs are queued on the LLT at CS side, avoiding unnecessary remote retries and thus saving RDMA IOPS. Moreover, each local lock in LLT is associated with a <i>wait queue</i>. A thread that cannot acquire a local lock in LLT pushes itself into the corresponding queue; the thread can learn if its turn has arrived by checking whether it is at the head of the queue. The queue provides first-come first-served fairness among threads within the same CSs. For lock release, the thread first releases the lock in GLT and then the local lock in LLT.</p></section><section id="sec23" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>Handover mechanism.</strong>  The hierarchical structure of HOCL enables a handover mechanism: handing over a lock from one client thread to another. When releasing a lock, if a thread finds out the lock’s wait queue is not empty, it will hand the lock over to the one at the head of the wait queue. To avoid starving threads at other CSs, we limit the maximum number of consecutive handovers to four. The thread that is handed over a lock no longer needs remote accesses for acquiring the lock, thus saving at least one round trip.</p></section></section><section id="sec24" class="sec"><h3 class="heading"><span class="caption-label">4.4 </span>Two-level version.</h3><p id="p-43">To address the write amplification issue, <span class="sc">Sherman</span> incorporates a <i>two-level version mechanism</i>. First, <span class="sc">Sherman</span> uses unsorted leaf nodes so that shift operations upon insertion/deletion can be avoided. Unsorted leaf nodes complicate write operations in two aspects: (<i>i</i>) When looking up a key, the client thread needs to traverse the entire targeted leaf node; (<i>ii</i>) Before splitting a leaf node, the client thread must sort the entries in it. Given the microsecond-level network latency, the added overhead is slight.</p><p id="p-44">Second, <span class="sc">Sherman</span> introduces <i>entry-level versions</i> to enable fine-grained consistency check, as shown in Figure <a class="xref xref-fig" href="#F4" data-jats-ref-type="fig" data-jats-rid="F4">4</a>. Specifically, in leaf nodes, each entry is surrounded by a pair of 4bit <i>entry-level</i> versions (that is, FEV and REV). In case of insertion without splitting, the associated entry-level versions are incremented and only the modified entry (includes FEV and REV) is written back via <code class="monospace">RDMA_WRITE</code>, thus evading write amplification. Also, a pair of 4bit <i>node-level versions</i> (that is, FNV and RNV) is stored at the beginning and end of each leaf node, protecting the consistency at the node granularity. When splitting a leaf node, the client thread increments associated FNV and RNV, and writes back the whole node via <code class="monospace">RDMA_WRITE</code>. Since internal nodes have a much lower modification frequency than leaf nodes; their format is standard: two node-level versions with a sorted layout. The extra memory space occupied by entry-level versions is acceptable: considering a <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span> storing 8byte key and 8byte value, each key-value pair at leaf nodes needs an extra 1byte memory space for entry-level versions, consuming about 6% memory of all leaf nodes.</p><figure id="F4" class="fig" data-jats-position="float"><div class="image-container"><figure id="attachment_767354" aria-describedby="caption-attachment-767354" class="wp-caption aligncenter"><a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2025/04/node_format.jpg" data-type="image" data-caption="" href="https://cacm.acm.org/wp-content/uploads/2025/04/node_format.jpg">
				<img decoding="async" class="wp-image-767354 size-large" src="https://cacm.acm.org/wp-content/uploads/2025/04/node_format.jpg?w=1024" alt="The format of internal nodes and leaf nodes in Sherman. FNV/RNV is 4bit front/rear-node version; FEV/REV is 4bit front/rear-entry version." width="1024" height="330" srcset="https://cacm.acm.org/wp-content/uploads/2025/04/node_format.jpg 1103w, https://cacm.acm.org/wp-content/uploads/2025/04/node_format.jpg?resize=300,97 300w, https://cacm.acm.org/wp-content/uploads/2025/04/node_format.jpg?resize=768,247 768w, https://cacm.acm.org/wp-content/uploads/2025/04/node_format.jpg?resize=1024,330 1024w" sizes="(max-width: 1024px) 100vw, 1024px" />
			</a><figcaption id="caption-attachment-767354" class="wp-caption-text">Figure 4. The format of internal nodes and leaf nodes in Sherman. <strong>FNV/RNV</strong> is 4bit front/rear-node version; <strong>FEV/REV</strong> is 4bit front/rear-entry version.</figcaption></figure></div></figure><section id="sec25" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>Lookup operation.</strong>  Two-level version mechanism makes the lookup operation different from the standard one. After reading a leaf node from MSs, a client thread compares the two node-level versions first; mismatched versions indicate the read must be retried. Then, the client thread locates the targeted entry and compares the two associated entry-level versions; if the comparison fails, the client thread needs to re-read the leaf node via <code class="monospace">RDMA_READ</code>. Wraparounds of these 4bit versions may cause inconsistency to be undetected: two versions match but one wraps around. To handle wraparounds, we measure the time of each <code class="monospace">RDMA_READ</code> command: If it takes more than 8<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mi>μ</mi></math></span>s (that is, <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mn>2</mn><mn>4</mn></msup><mo>×</mo><mn>0</mn><mo>.</mo><mn>5</mn></mrow></math></span>, where <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><mn>0</mn><mo>.</mo><mn>5</mn><mi>μ</mi><mi>s</mi><mo>≪</mo></mrow></math></span> the time of a single write operation), a retry is needed.</p></section><section id="sec26" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>Range query.</strong>  For a range query, the client thread issues multiple <code class="monospace">RDMA_READ</code> in parallel to fetch targeted leaf nodes, and then checks leaf nodes’ consistency in the same way as the lookup operation. Of note, <span class="sc">Sherman</span> does not guarantee that a range query is atomic with concurrent write operations. If upper applications (for example, a transaction engine) need snapshot semantics for range queries, they must use other mechanisms to avoid phantom problems.</p></section><section id="sec27" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>Discussion.</strong>  Our two-level version mechanism assumes that an <code class="monospace">RDMA_READ</code> is performed in increasing address order. However, a recent work<a class="reference-link xref xref-bibr" href="#B24" data-jats-ref-type="bibr" data-jats-rid="B24"><sup>24</sup></a> shows that this assumption does not always hold true: for 512B data blocks, 0.396% <code class="monospace">RDMA_READ</code> operations are executed in an out-of-order manner. This means that the two-level version mechanism may induce data inconsistency in some cases of concurrent access. We have fixed the issue in our recent work.<a class="reference-link xref xref-bibr" href="#B19" data-jats-ref-type="bibr" data-jats-rid="B19"><sup>19</sup></a></p></section></section><section id="sec28" class="sec"><h3 class="heading"><span class="caption-label">4.5 </span>Command combination.</h3><p id="p-48">To enforce ordering between dependent RDMA commands (for example, writing back a node and then releasing the lock), existing RDMA-based indexes use an expensive approach: issuing the following RDMA command only after receiving the acknowledgement of the preceding one.<a class="reference-link xref xref-bibr" href="#B25" data-jats-ref-type="bibr" data-jats-rid="B25"><sup>25</sup></a> Yet, we observe that RDMA already provides a strong ordering property at the hardware level: In a reliable connected (RC) queue pair, <code class="monospace">RDMA_WRITE</code> commands are transmitted in the order they are posted, and the NIC at receiver side executes these commands in order.<a class="reference-link xref xref-bibr" href="#B7" data-jats-ref-type="bibr" data-jats-rid="B7"><sup>7</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B21" data-jats-ref-type="bibr" data-jats-rid="B21"><sup>21</sup></a> By leveraging this ordering property, <span class="sc">Sherman</span> combines multiple <code class="monospace">RDMA_WRITE</code> commands in a write operation to reduce round trips.</p><p id="p-49">There are two cases that <span class="sc">Sherman</span> combines multiple <code class="monospace">RDMA_WRITE</code> commands. First, since a tree node and its associated lock co-locate at the same MS, the write-back of tree node and lock release can be combined through a QP, as opposed to issuing an unlock request after receiving acknowledgement of write-back. Thus, one round trip is saved and the critical path shortens. Second, when a node (we call it <code class="monospace">A</code> here) splits, we check whether the newly allocated sibling node belongs to the same MS as <code class="monospace">A</code>. If so, three <code class="monospace">RDMA_WRITE</code> commands can be combined together: write-back of the sibling node, write-back of <code class="monospace">A</code>, and release of <code class="monospace">A</code>’s lock.</p></section></section><section id="sec29" class="sec"><h2 class="heading"><span class="caption-label">5. </span>Evaluation</h2><p id="p-50">In this section, we evaluate <span class="sc">Sherman</span> using a set of benchmarks to demonstrate its efficacy.</p><section id="sec30" class="sec"><h3 class="heading"><span class="caption-label">5.1 </span>Setup.</h3><p id="p-51"><b>Hardware Platform.</b> Since memory disaggregation hardware is unavailable, we use a cluster of commodity, off-the-shelf servers to emulate MSs and CSs by limiting their usages of CPUs and memory.<a class="reference-link xref xref-bibr" href="#B15" data-jats-ref-type="bibr" data-jats-rid="B15"><sup>15</sup></a> Our cluster consists of eight servers, each of which is equipped with 128GB DRAM, two 2.2GHz Intel Xeon E5-2650 v4 CPUs (24 cores in total), and one 100Gbps Mellanox ConnectX-5 NIC, installed with CentOS 7.7.1908. All these servers are connected with a Mellanox MSB7790-ES2F switch. For Mellanox ConnectX-5 NICs, the versions of driver and firmware are OFED 4.7-3.2.9.0 and 16.26.4012, respectively. Due to the limited size of our cluster, we emulate each server as one MS and one CS. Each MS owns 64GB DRAM and two CPU cores, and each CS owns 1GB DRAM and 22 CPU cores.</p><section id="sec31" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>Compared systems.</strong>  FG<a class="reference-link xref xref-bibr" href="#B25" data-jats-ref-type="bibr" data-jats-rid="B25"><sup>25</sup></a> is a <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span> that supports disaggregated memory. Since FG is not open source, we implement it from scratch. For fair comparison, we add necessary optimizations to it: (<i>i</i>) index cache for reducing remote accesses, (<i>ii</i>) using <code class="monospace">RDMA_WRITE</code> to release lock rather than expensive atomic verb <code class="monospace">RDMA_FAA</code>. To distinguish our modified version of FG from the original one, we call it FG+ in the evaluation. The performance of FG+ is higher than that reported in FG paper.<a class="reference-link xref xref-bibr" href="#B25" data-jats-ref-type="bibr" data-jats-rid="B25"><sup>25</sup></a></p></section><section id="sec32" class="inline-headings-section"><p data-jats-content-type="inline-heading"><strong>Workloads.</strong>  We explore different aspects of the systems by using YCSB workloads.<a class="reference-link xref xref-bibr" href="#B3" data-jats-ref-type="bibr" data-jats-rid="B3"><sup>3</sup></a> We use five types of read-write ratio, as shown in Table <a class="xref xref-table" href="#T2" data-jats-ref-type="table" data-jats-rid="T2">2</a>. Note that insert operations include updating existing keys (about 2/3 of all insert operations). There are two types of key popularity: <i>uniform</i> and <i>skewed</i>. In uniform workloads, all keys have the same probability of being accessed. Skewed workloads follow a Zipfian access distribution (Zipfian parameter, that is., skewness, is 0.99 by default), which is common in production environments.<a class="reference-link xref xref-bibr" href="#B3" data-jats-ref-type="bibr" data-jats-rid="B3"><sup>3</sup></a> Unless otherwise stated, all the experiments are conducted with eight MSs and eight CSs. Each CS owns 500MB index cache, and launches 22 client threads (176 in total in our cluster). For each experiment, we bulkload the tree with one billion entries (8byte key, 8byte value) 80% full, then perform specified workloads. The size of a tree node (that is, internal node and leaf node) is 1KB.</p><figure id="T2" class="table-wrap" data-jats-position="float"><div class="caption"><span class="caption-label">Table 2. </span><div class="title">Workloads.</div></div><div class="table-container"><table class="table table-bordered table-condensed table-hover" data-jats-frame="hsides" data-jats-rules="rows"><colgroup> <col align="center" valign="top" /> <col align="center" valign="top" /> <col align="center" valign="top" /> <col align="center" valign="top" /> </colgroup><thead><tr><th style="text-align: center;">Workload</th><th style="text-align: center;">Insert</th><th style="text-align: center;">Lookup</th><th style="text-align: center;">Range Query</th></tr></thead><tbody><tr><td style="text-align: center;"><i>write-only</i></td><td style="text-align: right;">100%</td><td style="text-align: right;"> </td><td style="text-align: right;"> </td></tr><tr><td style="text-align: center;"><i>write-intensive</i></td><td style="text-align: right;">50%</td><td style="text-align: right;">50%</td><td style="text-align: right;"> </td></tr><tr><td style="text-align: center;"><i>read-intensive</i></td><td style="text-align: right;">5%</td><td style="text-align: right;">95%</td><td style="text-align: right;"> </td></tr><tr><td style="text-align: center;"><i>range-only</i></td><td style="text-align: right;"> </td><td style="text-align: right;"> </td><td style="text-align: right;">100%</td></tr><tr><td style="text-align: center;"><i>range-write</i></td><td style="text-align: right;">50%</td><td style="text-align: right;"> </td><td style="text-align: right;">50%</td></tr></tbody></table></div></figure></section></section><section id="sec33" class="sec"><h3 class="heading"><span class="caption-label">5.2 </span>Overall performance.</h3><p id="p-54">To analyze <span class="sc">Sherman</span>’s performance, we break down the performance gap between FG+ and <span class="sc">Sherman</span> through applying each technique one by one. Figures <a class="xref xref-fig" href="#F5" data-jats-ref-type="fig" data-jats-rid="F5">5</a> and <a class="xref xref-fig" href="#F6" data-jats-ref-type="fig" data-jats-rid="F6">6</a> show the results under skewed and uniform workloads, respectively. In these two figures, <b><i>+Combine</i></b> stands for command combination technique. <b><i>+On-Chip</i></b> and <b><i>+Hierarchical</i></b> are two design parts of HOCL: leveraging on-chip memory of NICs to store locks, and hierarchical structure with handover mechanism, respectively. <b><i>+2-Level Ver</i></b> represents two-level version mechanism, and shows the final performance of <span class="sc">Sherman</span>.</p><figure id="F5" class="fig" data-jats-position="float"><div class="image-container">
			<a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2025/03/3709647_fig05.jpg" data-type="image" data-caption="Figure 5. Contributions of techniques to performance (skewed workloads, skewness=0.99)." href="https://cacm.acm.org/wp-content/uploads/2025/03/3709647_fig05.jpg">
				<img decoding="async" class="graphic" title="Figure 5. Contributions of techniques to performance (skewed workloads, skewness=0.99)." src="https://cacm.acm.org/wp-content/uploads/2025/03/3709647_fig05.jpg" alt="Contributions of techniques to performance (skewed workloads, skewness=0.99)." data-image-id="F5" data-image-type="figure" />
			</a>
		</div><figcaption><span class="caption-label">Figure 5. </span> <span class="title">Contributions of techniques to performance (skewed workloads, skewness=0.99).</span><div class="figcaption-footer"> </div></figcaption></figure><figure id="F6" class="fig" data-jats-position="float"><div class="image-container">
			<a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2025/03/3709647_fig06.jpg" data-type="image" data-caption="Figure 6. Contributions of techniques to performance (uniform workloads)." href="https://cacm.acm.org/wp-content/uploads/2025/03/3709647_fig06.jpg">
				<img decoding="async" class="graphic" title="Figure 6. Contributions of techniques to performance (uniform workloads)." src="https://cacm.acm.org/wp-content/uploads/2025/03/3709647_fig06.jpg" alt="Contributions of techniques to performance (uniform workloads)." data-image-id="F6" data-image-type="figure" />
			</a>
		</div><figcaption><span class="caption-label">Figure 6. </span> <span class="title">Contributions of techniques to performance (uniform workloads).</span><div class="figcaption-footer"> </div></figcaption></figure><section id="sec34" class="sec"><h4 class="heading"><span class="caption-label">5.2.1 </span>Skewed workloads.</h4><p id="p-55">We make the following observations from Figure <a class="xref xref-fig" href="#F5" data-jats-ref-type="fig" data-jats-rid="F5">5</a>. First, in both write-only and write-intensive workloads, <span class="sc">Sherman</span> has much higher throughput and lower latency against FG+. In write-only workloads, <span class="sc">Sherman</span> achieves 24.7<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> higher throughput with 1.2<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> lower median latency (50p latency) and 35.8<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> lower 99<sup>th</sup> percentile latency (99p latency). In write-intensive workloads, <span class="sc">Sherman</span> achieves 23.6<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> higher throughput with 1.4<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span>/30.2<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> lower 50p/99p latency.</p><p id="p-56">Second, all techniques contribute to the high write efficiency of <span class="sc">Sherman</span>. Here we analyze each technique for write-intensive workloads (write-only workloads have the same conclusions): Command combination improves throughput by 3.37<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> and reduces 50p/99p latency by 1.14<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span>/3.18<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span>, since it saves at least one round trip for each insert operation and further shortens the critical paths—decreasing the probability that conflicting requests are blocked. By putting locks into on-chip memory of NICs, <span class="sc">Sherman</span> gains 3.06<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> and 3.48<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> improvement in terms of throughput and 99p latency, respectively. This is because on-chip memory avoids PCIe transactions of lock operations at MS side, which provides extremely high throughput for RDMA atomic verbs and thus can absorb more failed <code class="monospace">RDMA_CAS</code> for retries. Introducing hierarchical lock structure to <span class="sc">Sherman</span> brings 2.22<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> higher throughput, 1.12<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> lower 50p latency and 2.68<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> lower 99p latency. This is because unnecessary <code class="monospace">RDMA_CAS</code> retries from the same CSs are avoided and the handover mechanism saves one round trip opportunistically. Two-level version mechanism does not bring considerable throughput improvement (only 3%), since the major bottleneck is concurrent conflicts rather than RDMA IOPS at this time; the 50p latency is reduced by 400ns (from 7.3<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mi>μ</mi></math></span>s to 6.9<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mi>μ</mi></math></span>s), since smaller <code class="monospace">RDMA_WRITE</code> IO size has shorter PCIe DMA time at both CS side and MS side.</p><p id="p-57">Third, in read-intensive workloads (Figure <a class="xref xref-fig" href="#F5" data-jats-ref-type="fig" data-jats-rid="F5">5(c)</a>), <span class="sc">Sherman</span> does not present considerable performance improvement, as expected, since all techniques we propose aim to boost performance of write operations. Yet, there are still two points worth noting: By saving round trips for 5% insert operations, command combination reduces 99p latency from 15.3<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mi>μ</mi></math></span>s to 12.9<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mi>μ</mi></math></span>s; <span class="sc">Sherman</span> increases the 50p latency by 100ns (2%), we contribute it to unsorted leaf node layout, which causes traversal of the entire leaf node even for non-existing keys.</p></section><section id="sec35" class="sec"><h4 class="heading"><span class="caption-label">5.2.2 </span>Uniform workloads.</h4><p id="p-58">As shown in Figure <a class="xref xref-fig" href="#F6" data-jats-ref-type="fig" data-jats-rid="F6">6</a>, compared with FG+, <span class="sc">Sherman</span> delivers 1.24<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> and 1.15<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> higher throughput in write-only and write-intensive workloads, respectively. These improvements mainly come from command combination and two-level version. Command combination saves round trips, so each client thread can execute more insert operations per second; two-level version reduces IO size of <code class="monospace">RDMA_WRITE</code> from node size to entry size, thus giving full play to the RDMA’s characteristics of extremely high small IO rate. HOCL is designed for high-contention scenarios (that is, skewed workloads), so it does not increase throughput in uniform workloads. As for latency, <span class="sc">Sherman</span> reduces 50p/99p latency by 1.24<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span>/2.01<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> and 1.19<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span>/1.27<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span> in write-only and write-intensive workloads, respectively, which mainly is contributed to command combination and HOCL: Command combination saves round trips, and HOCL saves PCIe transaction time at MS side.</p></section></section><section id="sec36" class="sec"><h3 class="heading"><span class="caption-label">5.3 </span>Range query performance.</h3><p id="p-59">In this experiment, we evaluate the performance of range query by using range-only and range-write workloads. The targeted range follows the skewed access pattern. Table <a class="xref xref-table" href="#T3" data-jats-ref-type="table" data-jats-rid="T3">3</a> shows the results, from which we make three observations. First, in range-only workloads, when the range size equals 100, FG+ outperforms <span class="sc">Sherman</span> by 2%. This is because the unsorted leaf layout in <span class="sc">Sherman</span> leads to unnecessary scans when targeted leaf nodes are partially occupied. Second, in range-only workloads, as range size grows (that is., 1,000), the throughput of <span class="sc">Sherman</span> and FG+ drops and is almost the same, since network bandwidth becomes the bottleneck. Third, in range-write workloads, <span class="sc">Sherman</span> outperforms FG+ by up to 1.82<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mo>×</mo></math></span>. This is because <span class="sc">Sherman</span>’s write operations save a considerable quantity of network resources for range query operations.</p><figure id="T3" class="table-wrap" data-jats-position="float"><div class="caption"><span class="caption-label">Table 3. </span><div class="title">Performance of range query.</div></div><div class="table-container"><table class="table table-bordered table-condensed table-hover" data-jats-frame="hsides" data-jats-rules="rows"><colgroup> <col align="center" valign="top" /> <col align="center" valign="top" /> <col align="center" valign="top" /> <col align="center" valign="top" /> </colgroup><thead><tr><th style="text-align: center;"> </th><th style="text-align: center;" colspan="2">Range-only</th><th style="text-align: center;" colspan="2">Range-write</th></tr></thead><tbody><tr><td style="text-align: center;"><b>Range size</b></td><td style="text-align: center;">100</td><td style="text-align: center;">1,000</td><td style="text-align: center;">100</td><td style="text-align: center;">1,000</td></tr><tr><td style="text-align: center;">FG+</td><td style="text-align: center;">26.09Mops</td><td style="text-align: center;">5.77Mops</td><td style="text-align: center;">7.74Mops</td><td style="text-align: center;">2.49Mops</td></tr><tr><td style="text-align: center;"><span class="sc">Sherman</span></td><td style="text-align: center;">25.55Mops</td><td style="text-align: center;">5.76Mops</td><td style="text-align: center;">14.08Mops</td><td style="text-align: center;">3.12Mops</td></tr></tbody></table></div></figure></section></section><section id="sec37" class="sec"><h2 class="heading"><span class="caption-label">6. </span>Related Work</h2><p id="p-60">Memory disaggregation is not a new idea: Lim et al.<a class="reference-link xref xref-bibr" href="#B11" data-jats-ref-type="bibr" data-jats-rid="B11"><sup>11</sup></a> proposed it more than a decade ago to attack the problem of a growing imbalance in compute-to-memory-capacity ratio. Recently, memory disaggregation regains attention for two reasons. First, large-scale companies report the low memory utilization in datacenters.<a class="reference-link xref xref-bibr" href="#B6" data-jats-ref-type="bibr" data-jats-rid="B6"><sup>6</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B15" data-jats-ref-type="bibr" data-jats-rid="B15"><sup>15</sup></a><sup>,</sup><a class="reference-link xref xref-bibr" href="#B17" data-jats-ref-type="bibr" data-jats-rid="B17"><sup>17</sup></a> Second, high-speed networks, such as RDMA and CXL, make performance of remote accesses close to that of local accesses. Gao et al.<a class="reference-link xref xref-bibr" href="#B5" data-jats-ref-type="bibr" data-jats-rid="B5"><sup>5</sup></a> find that, under a memory disaggregation architecture, 40–100Gbps network bandwidth and 3–5<span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mi>μ</mi></math></span>s network latency can maintain application-level performance.</p><p id="p-61">Many recent academic efforts have been devoted to making memory disaggregation practical. LegoOS<a class="reference-link xref xref-bibr" href="#B15" data-jats-ref-type="bibr" data-jats-rid="B15"><sup>15</sup></a> designs a distributed operating system to manage disaggregated resources. pDPM<a class="reference-link xref xref-bibr" href="#B18" data-jats-ref-type="bibr" data-jats-rid="B18"><sup>18</sup></a> explores how to deploy disaggregated persistent memory (PM) in an efficient manner. LegoBase<a class="reference-link xref xref-bibr" href="#B23" data-jats-ref-type="bibr" data-jats-rid="B23"><sup>23</sup></a> co-designs database and memory disaggregation, achieving faster failure recovery speed than traditional architectures. <span class="sc">Sherman</span> focuses on building a fast <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span> index on disaggregated memory.</p><p id="p-62">Industry is proposing memory disaggregation hardware. HPE’s “The Machine”<a class="reference-link xref xref-bibr" href="#B9" data-jats-ref-type="bibr" data-jats-rid="B9"><sup>9</sup></a> connects a set of SoCs to a shared memory pool via a photonic network. IBM’s ThymesisFlow<a class="reference-link xref xref-bibr" href="#B13" data-jats-ref-type="bibr" data-jats-rid="B13"><sup>13</sup></a> leverages OpenCAPI to enable CPUs to directly access remote disaggregated memory without software involvement. VMware researchers use cache coherence mechanisms to track applications’ memory accesses, reducing data amplification of disaggregated memory.<a class="reference-link xref xref-bibr" href="#B2" data-jats-ref-type="bibr" data-jats-rid="B2"><sup>2</sup></a> Microsoft builds the CXL-based disaggregated memory pool for cloud deployment.<a class="reference-link xref xref-bibr" href="#B10" data-jats-ref-type="bibr" data-jats-rid="B10"><sup>10</sup></a></p></section><section id="sec38" class="sec"><h2 class="heading"><span class="caption-label">7. </span>Conclusion</h2><p id="p-63">We proposed and evaluated <span class="sc">Sherman</span>, an RDMA-based <span class="inline-formula"><math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow><msup><mi>B</mi><mo>+</mo></msup><mi>Tree</mi></mrow></math></span> index on disaggregated memory. <span class="sc">Sherman</span> introduces a set of techniques to boost write performance and outperforms existing solutions. We believe <span class="sc">Sherman</span> demonstrates that combining RDMA hardware features and RDMA-friendly software designs can enable a high-performance index on disaggregated memory.</p></section><section id="sec39" class="sec"><h2 class="heading">Acknowledgements</h2><p id="p-64">This work is supported the National Natural Science Foundation of China (U22B2023, 62472242, 62332011), Young Elite Scientists Sponsorship Program by CAST (2023QNRC001), and Postdoctoral Fellowship Program of CPSF (GZC20231296).</p></section><footer class="back"></footer></article>
</div>
		</div>
		<footer class="article-footer">
			
<section class="article-references" data-component="accordion" data-slide-to-refs="true">
	<a name="references"></a>
	<button class="accordion-controller" aria-expanded="false">
		<span class="article-references__title">
			References		</span>
		<span class="accordion-controller-icon">
			<svg aria-hidden="true" focusable="false" width="16" height="16" fill="var(--wp--preset--color--cacm-blue)"><use href="#am-symbol-icon-chevron-down"></use></svg>		</span>
	</button>
	<ul class="article-references__text accordion-content">
		<section id="references" class="ref-list-container">
<h2 class="heading">References</h2>
<ul id="reflist1" class="ref-list">
<li class="ref">
<div id="B1" class="citation"><span class="label">1.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Aguilera</span>, <span class="given-names">M.K.</span></span>, <span class="string-name"><span class="surname">Keeton</span>, <span class="given-names">K.</span></span>, <span class="string-name"><span class="surname">Novakovic</span>, <span class="given-names">S.</span></span>, and <span class="string-name"><span class="surname">Singhal</span>, <span class="given-names">S.</span></span> </span><span class="chapter-title">Designing far memory data structures: Think outside the box</span>. In <span class="source"><em>Proceedings of HotOS ’19</em></span>. <span class="publisher-name">ACM</span> (<span class="year">2019)</span>, <span class="fpage">120</span>–<span class="lpage">126</span>.</span></div>
</li>
<li class="ref">
<div id="B2" class="citation"><span class="label">2.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Calciu</span>, <span class="given-names">I. </span></span><span class="etal">et al.</span> </span><span class="chapter-title">Rethinking software runtimes for disaggregated memory</span>. In <em><span class="source">Proceedings of ASPLOS ’21</span></em>. <span class="person-group" data-jats-person-group-type="editor"><span class="string-name"><span class="given-names">T.</span><span class="surname">Sherwood</span></span>, <span class="string-name"><span class="given-names">E.</span><span class="surname">Berger</span></span>, and <span class="string-name"><span class="given-names">C.</span><span class="surname">Kozyrakis</span></span> (E<span class="role">ds.</span>)</span>. <span class="publisher-name">ACM</span> (<span class="year">2021)</span>, <span class="fpage">79</span>–<span class="lpage">92</span>.</span></div>
</li>
<li class="ref">
<div id="B3" class="citation"><span class="label">3.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Cooper</span>, <span class="given-names">B.F. </span></span><span class="etal">et al.</span> </span><span class="chapter-title">Benchmarking cloud serving systems with YCSB</span>. In <em><span class="source">Proceedings of SOCC ’10</span></em>. <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, (<span class="year">2010)</span>, <span class="fpage">143</span>–<span class="lpage">154</span>.</span></div>
</li>
<li class="ref">
<div id="B4" class="citation"><span class="label">4.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Dragojević</span>, <span class="given-names">A.</span></span>, <span class="string-name"><span class="surname">Narayanan</span>, <span class="given-names">D.</span></span>, <span class="string-name"><span class="surname">Hodson</span>, <span class="given-names">O.</span></span>, and <span class="string-name"><span class="surname">Castro</span>, <span class="given-names">M.</span></span> </span><span class="chapter-title">Fast remote memory</span>. In <em><span class="source">Proceedings of NSDI ’14</span></em>. <span class="publisher-name">USENIX Association</span>, <span class="publisher-loc">USA</span>, <span class="year">(2014)</span>, <span class="fpage">401</span>–<span class="lpage">414</span>.</span></div>
</li>
<li class="ref">
<div id="B5" class="citation"><span class="label">5.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Gao</span>, <span class="given-names">P.X. </span></span><span class="etal">et al.</span> </span><span class="chapter-title">Network requirements for resource disaggregation</span>. In <em><span class="source">Proceedings of OSDI ’16</span></em>. <span class="publisher-name">USENIX Association</span>, <span class="publisher-loc">USA</span>, (<span class="year">2016)</span>, <span class="fpage">249</span>–<span class="lpage">264</span>.</span></div>
</li>
<li class="ref">
<div id="B6" class="citation"><span class="label">6.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Guo</span>, <span class="given-names">J. </span></span><span class="etal">et al.</span> </span><span class="chapter-title">Who limits the resource efficiency of my datacenter: An analysis of Alibaba datacenter traces</span>. In <em><span class="source">Proceedings of IWQoS ’19</span></em>. <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, (<span class="year">2019)</span>.</span></div>
</li>
<li class="ref">
<div id="B7" class="citation"><span class="label">7.</span> <span class="mixed-citation" data-jats-publication-type="other"><span class="article-title">InfiniBand Architecture Specification Volume 1 Release 1.3 (General Specifications)</span>, <span class="institution">InfiniBand Trade Association</span> (<span class="year">2015)</span>.</span></div>
</li>
<li class="ref">
<div id="B8" class="citation"><span class="label">8.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Kalia</span>, <span class="given-names">A.</span></span>, <span class="string-name"><span class="surname">Kaminsky</span>, <span class="given-names">M.</span></span>, and <span class="string-name"><span class="surname">Andersen</span>, <span class="given-names">D.G.</span></span> </span><span class="chapter-title">Design guidelines for high-performance RDMA systems</span>. In <em><span class="source">Proceedings of ATC ’16</span></em>. <span class="publisher-name">USENIX Association</span>, <span class="publisher-loc">USA</span>, (<span class="year">2016)</span>, <span class="fpage">437</span>–<span class="lpage">450</span>.</span></div>
</li>
<li class="ref">
<div id="B9" class="citation"><span class="label">9.</span> <span class="mixed-citation" data-jats-publication-type="journal"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Keeton</span>, <span class="given-names">K.</span></span> </span><span class="article-title">The machine: An architecture for memory-centric computing</span>. In <em><span class="source">Workshop on Runtime and Operating Systems for Supercomputers (ROSS) </span><span class="volume">10</span></em>, (<span class="year">2015</span>).</span></div>
</li>
<li class="ref">
<div id="B10" class="citation"><span class="label">10.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Li</span>, <span class="given-names">H. </span></span><span class="etal">et al.</span> </span><span class="chapter-title">Pond: CXL-based memory pooling systems for cloud platforms</span>. In <span class="source"><em>Proceedings of the 28th ACM Intern. Conf. on Architectural Support for Programming Languages and Operating Systems 2</em></span>. <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, (<span class="year">2023)</span>, <span class="fpage">574</span>–<span class="lpage">587</span>.</span></div>
</li>
<li class="ref">
<div id="B11" class="citation"><span class="label">11.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Lim</span>, <span class="given-names">K. </span></span><span class="etal">et al.</span> </span><span class="chapter-title">Disaggregated memory for expansion and sharing in blade servers</span>. In <em><span class="source">Proceedings of ISCA ’09</span></em>. <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, (<span class="year">2009)</span>, <span class="fpage">267</span>–<span class="lpage">278</span>.</span></div>
</li>
<li class="ref">
<div id="B12" class="citation"><span class="label">12.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Mitchell</span>, <span class="given-names">C. </span></span><span class="etal">et al.</span> </span><span class="chapter-title">Balancing CPU and network in the cell distributed B-Tree store</span>. In <em><span class="source">Proceedings of ATC ’16</span></em>. <span class="publisher-name">USENIX Association</span>, <span class="publisher-loc">USA</span>, <span class="year">(2016)</span>, <span class="fpage">451</span>–<span class="lpage">464</span>.</span></div>
</li>
<li class="ref">
<div id="B13" class="citation"><span class="label">13.</span> <span class="mixed-citation" data-jats-publication-type="other"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Pinto</span>, <span class="given-names">C. </span></span><span class="etal">et al.</span> </span><span class="article-title">ThymesisFlow: A software-defined, HW/SW co-designed interconnect stack for rack-scale memory disaggregation</span>. In <em><span class="source">MICRO ’20</span></em>, (<span class="year">2020)</span>, <span class="fpage">868</span>–<span class="lpage">880</span>.</span></div>
</li>
<li class="ref">
<div id="B14" class="citation"><span class="label">14.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Shamis</span>, <span class="given-names">A. </span></span><span class="etal">et al.</span> </span><span class="chapter-title">Fast general distributed transactions with opacity</span>. In <em><span class="source">Proceedings of SIGMOD ’19</span></em>. <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, (<span class="year">2019)</span>, <span class="fpage">433</span>–<span class="lpage">448</span>.</span></div>
</li>
<li class="ref">
<div id="B15" class="citation"><span class="label">15.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Shan</span>, <span class="given-names">Y.</span></span>, <span class="string-name"><span class="surname">Huang</span>, <span class="given-names">Y.</span></span>, <span class="string-name"><span class="surname">Chen</span>, <span class="given-names">Y.</span></span>, and <span class="string-name"><span class="surname">Zhang</span>, <span class="given-names">Y.</span></span> </span><span class="chapter-title">LegoOS: A disseminated, distributed OS for hardware resource disaggregation</span>. In <em><span class="source">Proceedings of OSDI ’18</span></em>. <span class="publisher-name">USENIX Association</span>, <span class="publisher-loc">USA</span>, (<span class="year">2018)</span>, <span class="fpage">69</span>–<span class="lpage">87</span>.</span></div>
</li>
<li class="ref">
<div id="B16" class="citation"><span class="label">16.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Sidler</span>, <span class="given-names">D. </span></span><span class="etal">et al.</span> </span><span class="chapter-title">StRoM: Smart remote memory</span>. In <em><span class="source">Proceedings of EuroSys ’20</span></em>. <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, <span class="year">(2020)</span>.</span></div>
</li>
<li class="ref">
<div id="B17" class="citation"><span class="label">17.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Tirmazi</span>, <span class="given-names">M. </span></span><span class="etal">et al.</span> </span><span class="chapter-title">Borg: the next generation</span>. In <em><span class="source">Proceedings of EuroSys ’20</span></em>. <span class="publisher-name">ACM</span> (<span class="year">2020)</span>, <span class="fpage">30:1</span>–<span class="lpage">30:14</span>.</span></div>
</li>
<li class="ref">
<div id="B18" class="citation"><span class="label">18.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Tsai</span>, <span class="given-names">S.-Y.</span></span>, <span class="string-name"><span class="surname">Shan</span>, <span class="given-names">Y.</span></span>, and <span class="string-name"><span class="surname">Zhang</span>, <span class="given-names">Y.</span></span> </span><span class="chapter-title">Disaggregating persistent memory and controlling them remotely: An exploration of passive disaggregated key-value stores</span>. In <em><span class="source">Proceedings of ATC ’20</span></em>. <span class="publisher-name">USENIX Association</span>, <span class="publisher-loc">USA</span>, (<span class="year">2020)</span>, <span class="fpage">33</span>–<span class="lpage">48</span>.</span></div>
</li>
<li class="ref">
<div id="B19" class="citation"><span class="label">19.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Wang</span>, <span class="given-names">J.</span></span>, <span class="string-name"><span class="surname">Wang</span>, <span class="given-names">Q.</span></span>, <span class="string-name"><span class="surname">Zhang</span>, <span class="given-names">Y.</span></span>, and <span class="string-name"><span class="surname">Shu</span>, <span class="given-names">J.</span></span> </span><span class="chapter-title">Deft: A scalable tree index for disaggregated memory</span>. In <em><span class="source">Proceedings of EuroSys ’25</span></em>. <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, (<span class="year">2025)</span>.</span></div>
</li>
<li class="ref">
<div id="B20" class="citation"><span class="label">20.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Wang</span>, <span class="given-names">Q.</span></span>, <span class="string-name"><span class="surname">Lu</span>, <span class="given-names">Y.</span></span>, and <span class="string-name"><span class="surname">Shu</span>, <span class="given-names">J.</span></span> </span><span class="chapter-title">Sherman: A write-optimized distributed B+Tree index on disaggregated memory</span>. In <em><span class="source">Proceedings of SIGMOD ’22</span></em>. <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, <span class="year">(2022)</span>, <span class="fpage">1033</span>–<span class="lpage">1048</span>.</span></div>
</li>
<li class="ref">
<div id="B21" class="citation"><span class="label">21.</span> <span class="mixed-citation" data-jats-publication-type="journal"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Zamanian</span>, <span class="given-names">E.</span></span>, <span class="string-name"><span class="surname">Yu</span>, <span class="given-names">X.</span></span>, <span class="string-name"><span class="surname">Stonebraker</span>, <span class="given-names">M.</span></span>, and <span class="string-name"><span class="surname">Kraska</span>, <span class="given-names">T.</span></span> </span><span class="article-title">Rethinking database high availability with RDMA networks</span>. In <em><span class="source">Proc. VLDB Endow.</span>, <span class="volume">12</span></em>, <span class="issue">11</span> (<span class="year">2019</span>), <span class="fpage">1637</span>–<span class="lpage">1650</span>.</span></div>
</li>
<li class="ref">
<div id="B22" class="citation"><span class="label">22.</span> <span class="mixed-citation" data-jats-publication-type="journal"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Zhang</span>, <span class="given-names">Q. </span></span><span class="etal">et al.</span> </span><span class="article-title">Understanding the effect of data center resource disaggregation on production DBMSs</span>. In <em><span class="source">Proc. VLDB Endow.</span>, <span class="volume">13</span></em>, <span class="issue">9</span> (<span class="year">2020</span>), <span class="fpage">1568</span>–<span class="lpage">1581</span>.</span></div>
</li>
<li class="ref">
<div id="B23" class="citation"><span class="label">23.</span> <span class="mixed-citation" data-jats-publication-type="journal"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Zhang</span>, <span class="given-names">Y. </span></span><span class="etal">et al.</span> </span><span class="article-title">Towards cost-effective and elastic cloud database deployment via memory disaggregation</span>. <em><span class="source">Proc. VLDB Endow.</span>, <span class="volume">14</span></em> (<span class="year">2021</span>), <span class="fpage">1900</span>–<span class="lpage">1912</span>.</span></div>
</li>
<li class="ref">
<div id="B24" class="citation"><span class="label">24.</span> <span class="mixed-citation" data-jats-publication-type="journal"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Ziegler</span>, <span class="given-names">T.</span></span>, <span class="string-name"><span class="surname">Nelson-Slivon</span>, <span class="given-names">J.</span></span>, <span class="string-name"><span class="surname">Leis</span>, <span class="given-names">V.</span></span>, and <span class="string-name"><span class="surname">Binnig</span>, <span class="given-names">C.</span></span> </span><span class="article-title">Design guidelines for correct, efficient, and scalable synchronization using one-sided RDMA</span>. In <em><span class="source">Proc. ACM Manag. Data</span>, <span class="volume">1</span></em>, <span class="issue">2</span> (<span class="year">June 2023</span>).</span></div>
</li>
<li class="ref">
<div id="B25" class="citation"><span class="label">25.</span> <span class="mixed-citation" data-jats-publication-type="book"><span class="person-group" data-jats-person-group-type="author"><span class="string-name"><span class="surname">Ziegler</span>, <span class="given-names">T. </span></span><span class="etal">et al.</span> </span><span class="chapter-title">Designing distributed tree-based index structures for fast RDMA-capable networks</span>. In <em><span class="source">Proceedings of SIGMOD ’19</span></em>. <span class="publisher-name">ACM</span>, <span class="publisher-loc">New York, NY, USA</span>, <span class="year">(2019)</span>, <span class="fpage">741</span>–<span class="lpage">758</span>.</span></div>
</li>
</ul>
</section>
	</ul>
</section>
<section id="authors" class="article-authors" data-component="accordion">
	<button class="accordion-controller" aria-expanded="false">
		<span class="article-authors__title">
			About the Authors		</span>
		<span class="accordion-controller-icon">
			<svg aria-hidden="true" focusable="false" width="16" height="16" fill="var(--wp--preset--color--cacm-blue)"><use href="#am-symbol-icon-chevron-down"></use></svg>		</span>
	</button>
	<div class="article-authors__info accordion-content">
		<div class="article-authors__info-text">
			<section id="sec40" class="biography">
<p id="p-1"><b>Qing Wang</b> is a postdoctoral researcher at Tsinghua University, Beijing, China.</p>
<p id="p-2"><b>Youyou Lu</b> is an associate professor at Tsinghua University, Beijing, China.</p>
<p id="p-3"><b>Jiwu Shu</b> is a professor at Tsinghua University, Beijing, China.</p>
</section>
		</div>
	</div>
</section>

<ul class="share">
	
<li class="share-link" data-component="share">
	<a href="#" class="share-toggle">
		<svg aria-hidden="true" focusable="false" width="19" height="18" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-share"></use></svg>		<span class="share-link-text">
			Share		</span>
	</a>
	<ul class="share-menu" aria-hidden="true">
		<li>
			<a href="https://twitter.com/intent/tweet?url=https://cacm.acm.org/research-highlights/designing-an-efficient-tree-index-on-disaggregated-memory/&#038;text=Designing%20an%20Efficient%20Tree%20Index%20on%20Disaggregated%20Memory" target="_blank">
				Twitter			</a>
		</li>
		<li>
			<a href="http://www.reddit.com/submit?url=https://cacm.acm.org/research-highlights/designing-an-efficient-tree-index-on-disaggregated-memory/&#038;title=Designing%20an%20Efficient%20Tree%20Index%20on%20Disaggregated%20Memory" target="_blank">
				Reddit			</a>
		</li>
		<li>
			<a href="https://news.ycombinator.com/submitlink?u=https://cacm.acm.org/research-highlights/designing-an-efficient-tree-index-on-disaggregated-memory/&#038;t=Designing%20an%20Efficient%20Tree%20Index%20on%20Disaggregated%20Memory" target="_blank">
				Hacker News			</a>
		</li>
	</ul>
</li>

<li class="share-link share-link-print" data-component="print">
	<a href="#" class="print">
		<svg aria-hidden="true" focusable="false" width="19" height="20" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-print"></use></svg>		<span class="share-link-text">
			Print		</span>
	</a>
</li>

	<li class="share-link share-link-discussion" data-component="share">
		<a class="share-link-comments" href="#comments">
			<svg aria-hidden="true" focusable="false" width="19" height="20" fill="var(--cacm--symbol--fill)"><use href="#am-symbol-icon-comment"></use></svg>			<span class="share-link-text">Join the Discussion</span>
		</a>
	</li>
</ul>
		</footer>
		<div class="article-authors-digital-library">
			<section class="article-submission">
	<div class="article-submission__cta">
		<div class="article-submission__cta-container">
			<p class="article-submission__cta-title">
				Submit an Article to CACM			</p>
			<p class="article-submission__cta-text">
				CACM welcomes unsolicited <a href="https://cacm.acm.org/author-guidelines/#CACMsubmission">submissions</a> on topics of relevance and value to the computing community.			</p>
		</div>
	</div>
</section>

<section class="article-digital-library">
	<div class="article-digital-library__article-info">
		<p class="article-digital-library__intro-text">
			You Just Read		</p>
		<h4 class="article-digital-library__title">
			Designing an Efficient Tree Index on Disaggregated Memory		</h4>
					<a class="article-digital-library__link" href="https://dl.acm.org/doi/10.1145/3709647">
				<svg aria-hidden="true" focusable="false" width="21" height="21" fill="var(--wp--preset--color--cacm-black)"><use href="#am-symbol-icon-digital-library"></use></svg>				View in the ACM Digital Library				<svg aria-hidden="true" focusable="false" width="14" height="9" fill="var(--wp--preset--color--cacm-black)" class="icon-dl"><use href="#am-symbol-icon-arrow-right"></use></svg>			</a>
			</div>
	<div class="article-digital-library__copyright-info">
		<p><a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="noopener"><img src="http://i.creativecommons.org/l/by/4.0/88x31.png" /></a> - This work is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/" rel="license">Creative Commons Attribution International 4.0 License</a>. © Copyright 2024 held by owner/author(s).</p>
			</div>
</section>
		</div>
		<div class="article-sidebar">
			<section class="article-doi">
	<h3 class="article-doi__heading">DOI</h3>
	10.1145/3709647</section>

<section class="article-related">
	<div class="article-related-content">
		<h3 class="article-related__heading">Related Reading</h3>
		<!-- Related reading post list -->
		<ul>
							<li class="article-related-item">
					<p class="article-related-section">
						<a href="https://cacm.acm.org/section/research-highlights/">Research Highlights</a>					</p>
					<p class="article-related-title">
						<a href="https://cacm.acm.org/research-highlights/technical-perspective-a-write-optimized-distributed-btree-index-on-disaggregated-memory/">
							Technical Perspective: A Write-Optimized Distributed B+Tree Index on Disaggregated Memory						</a>
					</p>
					<p class="article-related-topic">
						<a href="https://cacm.acm.org/category/architecture-and-hardware/">Architecture and Hardware</a>					</p>
				</li>
							<li class="article-related-item">
					<p class="article-related-section">
						<a href="https://cacm.acm.org/section/practice/">Practice</a>					</p>
					<p class="article-related-title">
						<a href="https://cacm.acm.org/practice/pointers-in-far-memory/">
							Pointers in Far Memory						</a>
					</p>
					<p class="article-related-topic">
						<a href="https://cacm.acm.org/category/data-and-information/">Data and Information</a>					</p>
				</li>
					</ul>
	</div>
</section>

<div class="ad ad-mobile ad--is-loading" data-component="ad" data-platform="mobile" data-show-ad="false">
		<div class="cacm-ad-unit">
		<p class="ad-label">Advertisement</p>
		<div class="ad-unit" data-pipeline-id="684700" data-dimension-id="599027"></div>
		<noscript><a href="https://acm.nui.media/pipeline/684700/0/cc?z=acm"><img src="https://acm.nui.media/pipeline/684700/0/vc?z=acm&#038;dim=599027&#038;kw=&#038;click=&#038;abr=$imginiframe" alt="" ></a></noscript>
	</div>
	</div>

<div class="ad ad-desktop ad--is-loading" data-component="ad" data-platform="desktop" data-show-ad="false">
		<div class="cacm-ad-unit">
		<p class="ad-label">Advertisement</p>
		<div class="ad-unit" data-pipeline-id="684700" data-dimension-id="599027"></div>
		<noscript><a href="https://acm.nui.media/pipeline/684700/0/cc?z=acm"><img src="https://acm.nui.media/pipeline/684700/0/vc?z=acm&#038;dim=599027&#038;kw=&#038;click=&#038;abr=$imginiframe" alt="" ></a></noscript>
	</div>
	</div>
		</div>
		
<section class="article-comments">
	<div class="article-comments__inner container">
		<h3 class="article-comments__heading">
			Join the Discussion (0)		</h3>
		
<section class="cta-join-the-discussion" id="article-discussion">
	<div class="cta-join-the-discussion__box">
		<h4 class="cta-join-the-discussion__heading">Become a Member or Sign In to Post a Comment</h4>
		<div class="cta-join-the-discussion__button-group">
			<a class="cta-join-the-discussion__button cta-join-the-discussion__button--login" href="https://cacm.acm.org/wp-login.php?saml_sso">Sign In</a>
			<a class="cta-join-the-discussion__button cta-join-the-discussion__button--signup" href="https://accounts.acm.org/">Sign Up</a>
		</div>
	</div>
</section>
		
<div id="comments" class="comments-area">

	
		<div id="respond" class="auth-comment-form" data-component="authCommentForm" data-replytocom="0">
		<div class="auth-comment-form__contents">
			<span class="auth-comment-form__loader">
				<svg version="1.1" id="L9" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 100 100" enable-background="new 0 0 0 0" xml:space="preserve">
					<path fill="var(--wp--preset--color--cacm-blue)" d="M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50">
						<animateTransform
							attributeName="transform"
							attributeType="XML"
							type="rotate"
							dur="1s"
							from="0 50 50"
							to="360 50 50"
							repeatCount="indefinite" />
					</path>
				</svg>
			</span>
		</div>
	</div>

</div><!-- #comments -->
	</div>
</section>

		<section
			class="post-list the-latest"
			data-layout="grid-three-up"
			data-component="postList"
		>
							
		<header class="section-header ">
			<h3				class="section-header__heading"
			>
									<a class="section-header__heading-link" href="/?s=">
						The Latest from CACM					</a>
							</h3>
							<div class="section-header__readmore">
					<a class="section-header__readmore-link" href="/?s=" aria-label="
						Explore more from The Latest from CACM					">
						<span class="section-header__readmore-text">Explore More</span>
						<span class="section-header__readmore-icon"><svg aria-hidden="true" focusable="false" width="14" height="9"><use href="#am-symbol-icon-arrow-right"></use></svg></span>
					</a>
				</div>
								</header>

					
			<div class="">
				<div class="post-list__content"><div class="post-list__item">
	<article id="post-767377" class="post-list__post post-767377 post type-post status-publish format-standard has-post-thumbnail hentry category-computing-profession section-blogcacm">
		<div class="post-list__post-content">
			<div class="post-list__post-text">
									<div class="post-list__post-eyebrow">
						<a href="https://cacm.acm.org/section/blogcacm/">BLOG@CACM</a>																			<span class="post-list__post-timestamp"><span class="posted-on"> Apr 25 2025</span></span>
																	</div>
													<p class="post-list__post-heading">
						<a href="https://cacm.acm.org/blogcacm/reversing-the-fossilization-of-computer-science-conferences/">Reversing the Fossilization of Computer Science Conferences</a>
					</p>
												<div class="post-list__post-meta-group">
											<div class="post-list__post-byline">
							 <a href="https://cacm.acm.org/author/bertrand-meyer/" title="Posts by Bertrand Meyer" class="author url fn" rel="author">Bertrand Meyer</a>						</div>
																<span class="post-list__post-topic"><a href="https://cacm.acm.org/category/computing-profession/">Computing Profession</a></span>
									</div>
			</div>
							<figure class="post-list__post-figure">
					<a href="https://cacm.acm.org/blogcacm/reversing-the-fossilization-of-computer-science-conferences/" aria-label="Reversing the Fossilization of Computer Science Conferences" aria-hidden="true" tabindex="-1">
													<div class="image-wrapper image-wrapper--widescreen"><img width="1024" height="576" src="https://cacm.acm.org/wp-content/uploads/2025/04/042425.BLOG_.Reversing-the-F-G.jpg" class="attachment-full size-full" alt="person speaking from a stage, illustration" decoding="async" loading="lazy" srcset="https://cacm.acm.org/wp-content/uploads/2025/04/042425.BLOG_.Reversing-the-F-G.jpg 2400w, https://cacm.acm.org/wp-content/uploads/2025/04/042425.BLOG_.Reversing-the-F-G.jpg?resize=300,169 300w, https://cacm.acm.org/wp-content/uploads/2025/04/042425.BLOG_.Reversing-the-F-G.jpg?resize=768,432 768w, https://cacm.acm.org/wp-content/uploads/2025/04/042425.BLOG_.Reversing-the-F-G.jpg?resize=1024,576 1024w, https://cacm.acm.org/wp-content/uploads/2025/04/042425.BLOG_.Reversing-the-F-G.jpg?resize=1536,864 1536w, https://cacm.acm.org/wp-content/uploads/2025/04/042425.BLOG_.Reversing-the-F-G.jpg?resize=2048,1152 2048w" sizes="auto, (max-width: 1024px) 100vw, 1024px" /></div>											</a>
				</figure>
					</div>
	</article>
</div>

<div class="post-list__item">
	<article id="post-767735" class="post-list__post post-767735 post type-post status-publish format-standard hentry category-architecture-and-hardware category-computing-profession tag-computing tag-it tag-practice tag-practitioner section-practice">
		<div class="post-list__post-content">
			<div class="post-list__post-text">
									<div class="post-list__post-eyebrow">
						<a href="https://cacm.acm.org/section/practice/">Practice</a>																			<span class="post-list__post-timestamp"><span class="posted-on"> Apr 25 2025</span></span>
																	</div>
													<p class="post-list__post-heading">
						<a href="https://cacm.acm.org/practice/call-for-papers-cacm-practice-section/">Call for Papers: CACM Practice Section</a>
					</p>
												<div class="post-list__post-meta-group">
																<span class="post-list__post-topic"><a href="https://cacm.acm.org/category/architecture-and-hardware/">Architecture and Hardware</a></span>
									</div>
			</div>
							<figure class="post-list__post-figure">
					<a href="https://cacm.acm.org/practice/call-for-papers-cacm-practice-section/" aria-label="Call for Papers: CACM Practice Section" aria-hidden="true" tabindex="-1">
											</a>
				</figure>
					</div>
	</article>
</div>

<div class="post-list__item">
	<article id="post-767342" class="post-list__post post-767342 post type-post status-publish format-standard has-post-thumbnail hentry category-data-and-information category-philosophy-of-computing section-blogcacm">
		<div class="post-list__post-content">
			<div class="post-list__post-text">
									<div class="post-list__post-eyebrow">
						<a href="https://cacm.acm.org/section/blogcacm/">BLOG@CACM</a>																			<span class="post-list__post-timestamp"><span class="posted-on"> Apr 24 2025</span></span>
																	</div>
													<p class="post-list__post-heading">
						<a href="https://cacm.acm.org/blogcacm/the-narrative-power-of-data/">The Narrative Power of Data</a>
					</p>
												<div class="post-list__post-meta-group">
											<div class="post-list__post-byline">
							 Angelica Lo Duca						</div>
																<span class="post-list__post-topic"><a href="https://cacm.acm.org/category/data-and-information/">Data and Information</a></span>
									</div>
			</div>
							<figure class="post-list__post-figure">
					<a href="https://cacm.acm.org/blogcacm/the-narrative-power-of-data/" aria-label="The Narrative Power of Data" aria-hidden="true" tabindex="-1">
													<div class="image-wrapper image-wrapper--widescreen"><img width="1024" height="576" src="https://cacm.acm.org/wp-content/uploads/2025/04/042425.BLOG_.Beyond-Dashboard2.jpg" class="attachment-full size-full" alt="masks of tragedy and comedy on a digital grid" decoding="async" loading="lazy" srcset="https://cacm.acm.org/wp-content/uploads/2025/04/042425.BLOG_.Beyond-Dashboard2.jpg 1710w, https://cacm.acm.org/wp-content/uploads/2025/04/042425.BLOG_.Beyond-Dashboard2.jpg?resize=300,169 300w, https://cacm.acm.org/wp-content/uploads/2025/04/042425.BLOG_.Beyond-Dashboard2.jpg?resize=768,432 768w, https://cacm.acm.org/wp-content/uploads/2025/04/042425.BLOG_.Beyond-Dashboard2.jpg?resize=1024,576 1024w, https://cacm.acm.org/wp-content/uploads/2025/04/042425.BLOG_.Beyond-Dashboard2.jpg?resize=1536,864 1536w" sizes="auto, (max-width: 1024px) 100vw, 1024px" /></div>											</a>
				</figure>
					</div>
	</article>
</div>

</div>			</div>

		</section>

		
<div class="cta-membership cta-membership--no-js" data-component="ctaMembership">
	
		<section class="cta-become-a-member">
			<div class="cta-become-a-member__inner container">
				<h3					class="cta-become-a-member__heading">
					Shape the Future of Computing				</h3>
									<p class="cta-become-a-member__description">
						ACM encourages its members to take a direct hand in shaping the future of the association. There are more ways than ever to get involved.					</p>
													<a class="cta-become-a-member__link" href="https://www.acm.org/about-acm/get-involved">
						Get Involved											</a>
							</div>
		</section>

		
		<section class="cta-open-access">
			<div class="cta-open-access__inner container">
				<h3					class="cta-open-access__heading">
					Communications of the ACM (CACM) is now a fully Open Access publication.				</h3>
									<p class="cta-open-access__description">
						By opening CACM to the world, we hope to increase engagement among the broader computer science community and encourage non-members to discover the rich resources ACM has to offer.					</p>
													<a class="cta-open-access__link" href="https://cacm.acm.org/news/cacm-is-becoming-open-access">
						Learn More											</a>
							</div>
		</section>

		</div>

	
</article><!-- #post-## -->

			</main>
		</div>
	</div><!-- #content -->

	<footer id="colophon" class="site-footer">
		<div class="site-footer__inner container">
			<div class="site-footer__columns">
				<div class="site-footer__column site-footer__column-branding">
					<a class="site-footer__logo" aria-label="Home" href="https://cacm.acm.org">
						<svg aria-hidden="true" focusable="false" width="548" height="88" fill="#FFF"><use href="#am-symbol-cacm-logo"></use></svg>					</a>
					<nav class="social-navigation">
		<ul class="social-navigation__list">
		<li>
			<a href="https://twitter.com/cacmmag">
				<span class="screen-reader-only">CACM on Twitter</span>
				<svg aria-hidden="true" focusable="false" width="38" height="38" fill="#fff"><use href="#am-symbol-icon-social-twitter"></use></svg>			</a>
		</li>
		<li>
			<a href="https://www.reddit.com/user/TheOfficialACM">
				<span class="screen-reader-only">CACM on Reddit</span>
				<svg aria-hidden="true" focusable="false" width="38" height="38" fill="#fff"><use href="#am-symbol-icon-social-reddit"></use></svg>			</a>
		</li>
		<li>
			<a href="https://www.linkedin.com/groups/36836/">
				<span class="screen-reader-only">CACM on LinkedIn</span>
				<svg aria-hidden="true" focusable="false" width="38" height="38" fill="#fff"><use href="#am-symbol-icon-social-linkedin"></use></svg>			</a>
		</li>
	</ul>
</nav>
				</div>
				<div class="site-footer__column site-footer__column-topics">
					
<div class="site-footer__topics-menu">
			<p class="site-footer__heading">
			Topics		</p>
		<ul class="site-footer__topics-menu__list">
												<li>
					<a href="https://cacm.acm.org/category/architecture-and-hardware/">
						Architecture and Hardware					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/artificial-intelligence-machine-learning/">
						Artificial Intelligence and Machine Learning					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/computer-history/">
						Computer History					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/computing-applications/">
						Computing Applications					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/computing-profession/">
						Computing Profession					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/data-and-information/">
						Data and Information					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/education/">
						Education					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/hci/">
						HCI					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/philosophy-of-computing/">
						Philosophy of Computing					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/security-and-privacy/">
						Security and Privacy					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/society/">
						Society					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/software-engineering-and-programming-languages/">
						Software Engineering and Programming Languages					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/systems-and-networking/">
						Systems and Networking					</a>
				</li>
															<li>
					<a href="https://cacm.acm.org/category/theory/">
						Theory					</a>
				</li>
							</ul>
	</div>
				</div>
				<div class="site-footer__column site-footer__column-about">
					<div class="site-footer__menu-magazine">
						<p class="site-footer__heading">Magazine</p>
						<ul id="menu-magazine-footer" class="site-footer__menu-magazine-menu"><li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217988"><a href="/issue/latest/" id="menu-link-10">Latest Issue</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217989"><a href="/issues/" id="menu-link-11">Magazine Archive</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224644"><a href="https://cacm.acm.org/editorial-staff-board/" id="menu-link-12">Editorial Staff and Board</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-751386"><a href="https://cacm.acm.org/author-guidelines#CACMsubmission" id="menu-link-13">Submit an Article</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224585"><a href="https://cacm.acm.org/feeds-2/" id="menu-link-14">Alerts &#038; Feeds</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224645"><a href="https://cacm.acm.org/author-guidelines/" id="menu-link-15">Author Guidelines</a></li>
</ul>					</div>
					<div class="site-footer__menu-communications">
						<p class="site-footer__heading">Communications of the ACM</p>
						<ul id="menu-communications-footer" class="site-footer-communications-menu"><li id="menu-item-224637" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224637"><a href="https://cacm.acm.org/about-us/" id="menu-link-16">About Us</a></li>
<li id="menu-item-224664" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224664"><a href="https://cacm.acm.org/faq/" id="menu-link-17">Frequently Asked Questions</a></li>
<li id="menu-item-224638" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224638"><a href="https://cacm.acm.org/contact-us/" id="menu-link-18">Contact Us</a></li>
<li id="menu-item-217972" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217972"><a href="https://www.acm.org/publications/advertising" id="menu-link-19">For Advertisers</a></li>
<li id="menu-item-224639" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-224639"><a href="https://cacm.acm.org/join-acm/" id="menu-link-20">Join ACM</a></li>
</ul>					</div>
				</div>
			</div>
			<div class="site-footer__info">
				<div class="site-footer__info__inner">
					<p class="site-footer__info-copyright"><small>
						&copy; 2025 Communications of the ACM. All Rights Reserved. 						</small></p>
					<div class="menu-policy-menu-container"><ul id="menu-policy-footer" class="site-footer__info-policy-list"><li id="menu-item-217993" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217993"><a href="https://www.acm.org/cookie-notice" id="menu-link-21">Cookie Notice</a></li>
<li id="menu-item-217994" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217994"><a href="https://www.acm.org/about-acm/privacy-policy" id="menu-link-22">Privacy Policy</a></li>
</ul></div>				</div>
			</div>
		</div>
	</footer><!-- #colophon -->
</div><!-- #page -->

<script type="text/javascript" src="https://cacm.acm.org/wp-includes/js/dist/hooks.min.js?ver=4d63a3d491d11ffd8ac6" id="wp-hooks-js"></script>
<script type="text/javascript" src="https://cacm.acm.org/wp-includes/js/dist/i18n.min.js?ver=5e580eb46a90c2b997e6" id="wp-i18n-js"></script>
<script type="text/javascript" id="wp-i18n-js-after">
/* <![CDATA[ */
wp.i18n.setLocaleData( { 'text direction\u0004ltr': [ 'ltr' ] } );
/* ]]> */
</script>
<script type="text/javascript" id="wp-parsely-loader-js-before">
/* <![CDATA[ */
window.wpParselySiteId = 'acm.org';
/* ]]> */
</script>
<script type="text/javascript" src="https://cacm.acm.org/wp-content/mu-plugins/wp-parsely-3.18/build/loader.js?ver=ecf94842061bea03d54b" id="wp-parsely-loader-js"></script>
<script type="text/javascript" data-parsely-site="acm.org" src="https://cdn.parsely.com/keys/acm.org/p.js?ver=3.18.1" id="parsely-cfg"></script>
<script type="text/javascript" src="https://cacm.acm.org/wp-content/themes/cacm/client/build/js/global.bundle.min.js?ver=4b18fcd24c7110dd0a1b" id="cacm-global-js"></script>
<script type="text/javascript" id="cacm-article-js-extra">
/* <![CDATA[ */
var cacmLocalVars = {"restCommentsUrl":"https:\/\/cacm.acm.org\/wp-json\/wp\/v2\/comments","restCommentFormUrl":"https:\/\/cacm.acm.org\/wp-json\/cacm-plugin\/v1\/comment\/form\/766488"};
/* ]]> */
</script>
<script type="text/javascript" src="https://cacm.acm.org/wp-content/themes/cacm/client/build/js/article.bundle.min.js?ver=1c812bd1084810e0b400" id="cacm-article-js"></script>
<script type="text/javascript" src="https://cacm.acm.org/wp-includes/js/comment-reply.min.js?ver=6.7.2" id="comment-reply-js" async="async" data-wp-strategy="async"></script>
<script type="text/javascript" id="jetpack-stats-js-before">
/* <![CDATA[ */
_stq = window._stq || [];
_stq.push([ "view", JSON.parse("{\"v\":\"ext\",\"blog\":\"212686646\",\"post\":\"766488\",\"tz\":\"-4\",\"srv\":\"cacm.acm.org\",\"hp\":\"vip\",\"j\":\"1:14.5\"}") ]);
_stq.push([ "clickTrackerInit", "212686646", "766488" ]);
/* ]]> */
</script>
<script type="text/javascript" src="https://stats.wp.com/e-202518.js" id="jetpack-stats-js" defer="defer" data-wp-strategy="defer"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML" id="mathjax-js"></script>


<!-- Mopinion Pastea.se  start --><script type="text/javascript">(function(){var id="Sh2m7XRvbVWoA8uJG6g2wIBNDLfpsOxFx1ciwKwo";var js=document.createElement("script");js.setAttribute("type","text/javascript");js.setAttribute("src","//deploy.mopinion.com/js/pastease.js");js.async=true;document.getElementsByTagName("head")[0].appendChild(js);var t=setInterval(function(){try{Pastease.load(id);clearInterval(t)}catch(e){}},50)})();</script> <!-- Mopinion Pastea.se end -->

</body>
</html>
